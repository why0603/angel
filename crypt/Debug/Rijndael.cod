; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\windows\belial\crypt\Rijndael.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_sbox	DB	063H
	DB	07cH
	DB	077H
	DB	07bH
	DB	0f2H
	DB	06bH
	DB	06fH
	DB	0c5H
	DB	030H
	DB	01H
	DB	067H
	DB	02bH
	DB	0feH
	DB	0d7H
	DB	0abH
	DB	076H
	DB	0caH
	DB	082H
	DB	0c9H
	DB	07dH
	DB	0faH
	DB	059H
	DB	047H
	DB	0f0H
	DB	0adH
	DB	0d4H
	DB	0a2H
	DB	0afH
	DB	09cH
	DB	0a4H
	DB	072H
	DB	0c0H
	DB	0b7H
	DB	0fdH
	DB	093H
	DB	026H
	DB	036H
	DB	03fH
	DB	0f7H
	DB	0ccH
	DB	034H
	DB	0a5H
	DB	0e5H
	DB	0f1H
	DB	071H
	DB	0d8H
	DB	031H
	DB	015H
	DB	04H
	DB	0c7H
	DB	023H
	DB	0c3H
	DB	018H
	DB	096H
	DB	05H
	DB	09aH
	DB	07H
	DB	012H
	DB	080H
	DB	0e2H
	DB	0ebH
	DB	027H
	DB	0b2H
	DB	075H
	DB	09H
	DB	083H
	DB	02cH
	DB	01aH
	DB	01bH
	DB	06eH
	DB	05aH
	DB	0a0H
	DB	052H
	DB	03bH
	DB	0d6H
	DB	0b3H
	DB	029H
	DB	0e3H
	DB	02fH
	DB	084H
	DB	053H
	DB	0d1H
	DB	00H
	DB	0edH
	DB	020H
	DB	0fcH
	DB	0b1H
	DB	05bH
	DB	06aH
	DB	0cbH
	DB	0beH
	DB	039H
	DB	04aH
	DB	04cH
	DB	058H
	DB	0cfH
	DB	0d0H
	DB	0efH
	DB	0aaH
	DB	0fbH
	DB	043H
	DB	04dH
	DB	033H
	DB	085H
	DB	045H
	DB	0f9H
	DB	02H
	DB	07fH
	DB	050H
	DB	03cH
	DB	09fH
	DB	0a8H
	DB	051H
	DB	0a3H
	DB	040H
	DB	08fH
	DB	092H
	DB	09dH
	DB	038H
	DB	0f5H
	DB	0bcH
	DB	0b6H
	DB	0daH
	DB	021H
	DB	010H
	DB	0ffH
	DB	0f3H
	DB	0d2H
	DB	0cdH
	DB	0cH
	DB	013H
	DB	0ecH
	DB	05fH
	DB	097H
	DB	044H
	DB	017H
	DB	0c4H
	DB	0a7H
	DB	07eH
	DB	03dH
	DB	064H
	DB	05dH
	DB	019H
	DB	073H
	DB	060H
	DB	081H
	DB	04fH
	DB	0dcH
	DB	022H
	DB	02aH
	DB	090H
	DB	088H
	DB	046H
	DB	0eeH
	DB	0b8H
	DB	014H
	DB	0deH
	DB	05eH
	DB	0bH
	DB	0dbH
	DB	0e0H
	DB	032H
	DB	03aH
	DB	0aH
	DB	049H
	DB	06H
	DB	024H
	DB	05cH
	DB	0c2H
	DB	0d3H
	DB	0acH
	DB	062H
	DB	091H
	DB	095H
	DB	0e4H
	DB	079H
	DB	0e7H
	DB	0c8H
	DB	037H
	DB	06dH
	DB	08dH
	DB	0d5H
	DB	04eH
	DB	0a9H
	DB	06cH
	DB	056H
	DB	0f4H
	DB	0eaH
	DB	065H
	DB	07aH
	DB	0aeH
	DB	08H
	DB	0baH
	DB	078H
	DB	025H
	DB	02eH
	DB	01cH
	DB	0a6H
	DB	0b4H
	DB	0c6H
	DB	0e8H
	DB	0ddH
	DB	074H
	DB	01fH
	DB	04bH
	DB	0bdH
	DB	08bH
	DB	08aH
	DB	070H
	DB	03eH
	DB	0b5H
	DB	066H
	DB	048H
	DB	03H
	DB	0f6H
	DB	0eH
	DB	061H
	DB	035H
	DB	057H
	DB	0b9H
	DB	086H
	DB	0c1H
	DB	01dH
	DB	09eH
	DB	0e1H
	DB	0f8H
	DB	098H
	DB	011H
	DB	069H
	DB	0d9H
	DB	08eH
	DB	094H
	DB	09bH
	DB	01eH
	DB	087H
	DB	0e9H
	DB	0ceH
	DB	055H
	DB	028H
	DB	0dfH
	DB	08cH
	DB	0a1H
	DB	089H
	DB	0dH
	DB	0bfH
	DB	0e6H
	DB	042H
	DB	068H
	DB	041H
	DB	099H
	DB	02dH
	DB	0fH
	DB	0b0H
	DB	054H
	DB	0bbH
	DB	016H
_rbox	DB	052H
	DB	09H
	DB	06aH
	DB	0d5H
	DB	030H
	DB	036H
	DB	0a5H
	DB	038H
	DB	0bfH
	DB	040H
	DB	0a3H
	DB	09eH
	DB	081H
	DB	0f3H
	DB	0d7H
	DB	0fbH
	DB	07cH
	DB	0e3H
	DB	039H
	DB	082H
	DB	09bH
	DB	02fH
	DB	0ffH
	DB	087H
	DB	034H
	DB	08eH
	DB	043H
	DB	044H
	DB	0c4H
	DB	0deH
	DB	0e9H
	DB	0cbH
	DB	054H
	DB	07bH
	DB	094H
	DB	032H
	DB	0a6H
	DB	0c2H
	DB	023H
	DB	03dH
	DB	0eeH
	DB	04cH
	DB	095H
	DB	0bH
	DB	042H
	DB	0faH
	DB	0c3H
	DB	04eH
	DB	08H
	DB	02eH
	DB	0a1H
	DB	066H
	DB	028H
	DB	0d9H
	DB	024H
	DB	0b2H
	DB	076H
	DB	05bH
	DB	0a2H
	DB	049H
	DB	06dH
	DB	08bH
	DB	0d1H
	DB	025H
	DB	072H
	DB	0f8H
	DB	0f6H
	DB	064H
	DB	086H
	DB	068H
	DB	098H
	DB	016H
	DB	0d4H
	DB	0a4H
	DB	05cH
	DB	0ccH
	DB	05dH
	DB	065H
	DB	0b6H
	DB	092H
	DB	06cH
	DB	070H
	DB	048H
	DB	050H
	DB	0fdH
	DB	0edH
	DB	0b9H
	DB	0daH
	DB	05eH
	DB	015H
	DB	046H
	DB	057H
	DB	0a7H
	DB	08dH
	DB	09dH
	DB	084H
	DB	090H
	DB	0d8H
	DB	0abH
	DB	00H
	DB	08cH
	DB	0bcH
	DB	0d3H
	DB	0aH
	DB	0f7H
	DB	0e4H
	DB	058H
	DB	05H
	DB	0b8H
	DB	0b3H
	DB	045H
	DB	06H
	DB	0d0H
	DB	02cH
	DB	01eH
	DB	08fH
	DB	0caH
	DB	03fH
	DB	0fH
	DB	02H
	DB	0c1H
	DB	0afH
	DB	0bdH
	DB	03H
	DB	01H
	DB	013H
	DB	08aH
	DB	06bH
	DB	03aH
	DB	091H
	DB	011H
	DB	041H
	DB	04fH
	DB	067H
	DB	0dcH
	DB	0eaH
	DB	097H
	DB	0f2H
	DB	0cfH
	DB	0ceH
	DB	0f0H
	DB	0b4H
	DB	0e6H
	DB	073H
	DB	096H
	DB	0acH
	DB	074H
	DB	022H
	DB	0e7H
	DB	0adH
	DB	035H
	DB	085H
	DB	0e2H
	DB	0f9H
	DB	037H
	DB	0e8H
	DB	01cH
	DB	075H
	DB	0dfH
	DB	06eH
	DB	047H
	DB	0f1H
	DB	01aH
	DB	071H
	DB	01dH
	DB	029H
	DB	0c5H
	DB	089H
	DB	06fH
	DB	0b7H
	DB	062H
	DB	0eH
	DB	0aaH
	DB	018H
	DB	0beH
	DB	01bH
	DB	0fcH
	DB	056H
	DB	03eH
	DB	04bH
	DB	0c6H
	DB	0d2H
	DB	079H
	DB	020H
	DB	09aH
	DB	0dbH
	DB	0c0H
	DB	0feH
	DB	078H
	DB	0cdH
	DB	05aH
	DB	0f4H
	DB	01fH
	DB	0ddH
	DB	0a8H
	DB	033H
	DB	088H
	DB	07H
	DB	0c7H
	DB	031H
	DB	0b1H
	DB	012H
	DB	010H
	DB	059H
	DB	027H
	DB	080H
	DB	0ecH
	DB	05fH
	DB	060H
	DB	051H
	DB	07fH
	DB	0a9H
	DB	019H
	DB	0b5H
	DB	04aH
	DB	0dH
	DB	02dH
	DB	0e5H
	DB	07aH
	DB	09fH
	DB	093H
	DB	0c9H
	DB	09cH
	DB	0efH
	DB	0a0H
	DB	0e0H
	DB	03bH
	DB	04dH
	DB	0aeH
	DB	02aH
	DB	0f5H
	DB	0b0H
	DB	0c8H
	DB	0ebH
	DB	0bbH
	DB	03cH
	DB	083H
	DB	053H
	DB	099H
	DB	061H
	DB	017H
	DB	02bH
	DB	04H
	DB	07eH
	DB	0baH
	DB	077H
	DB	0d6H
	DB	026H
	DB	0e1H
	DB	069H
	DB	014H
	DB	063H
	DB	055H
	DB	021H
	DB	0cH
	DB	07dH
_rcon	DD	00H
	DD	01000000H
	DD	02000000H
	DD	04000000H
	DD	08000000H
	DD	010000000H
	DD	020000000H
	DD	040000000H
	DD	080000000H
	DD	01b000000H
	DD	036000000H
	DD	06c000000H
	DD	0d8000000H
	DD	0bb000000H
	DD	04e000000H
CONST	ENDS
PUBLIC	_RijndaelInit
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\windows\belial\crypt\rijndael.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _RijndaelInit
_TEXT	SEGMENT
tv86 = -196						; size = 4
_contextPtr$ = 8					; size = 4
_RijndaelInit PROC					; COMDAT

; 785  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 786  : 	if (NULL != contextPtr)

  0001e	83 7d 08 00	 cmp	 DWORD PTR _contextPtr$[ebp], 0
  00022	0f 84 ad 00 00
	00		 je	 $LN4@RijndaelIn

; 787  : 	{
; 788  : 		//默认使用128位密钥
; 789  : 		if (contextPtr->keySize == 0)

  00028	8b 45 08	 mov	 eax, DWORD PTR _contextPtr$[ebp]
  0002b	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  0002f	75 0a		 jne	 SHORT $LN2@RijndaelIn

; 790  : 		{
; 791  : 			contextPtr->keySize = KeySize_128;

  00031	8b 45 08	 mov	 eax, DWORD PTR _contextPtr$[ebp]
  00034	c7 40 20 10 00
	00 00		 mov	 DWORD PTR [eax+32], 16	; 00000010H
$LN2@RijndaelIn:

; 792  : 		}
; 793  : 		contextPtr->nk = contextPtr->keySize / 4;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _contextPtr$[ebp]
  0003e	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  00041	99		 cdq
  00042	83 e2 03	 and	 edx, 3
  00045	03 c2		 add	 eax, edx
  00047	c1 f8 02	 sar	 eax, 2
  0004a	8b 4d 08	 mov	 ecx, DWORD PTR _contextPtr$[ebp]
  0004d	89 81 10 02 00
	00		 mov	 DWORD PTR [ecx+528], eax

; 794  : 		if (contextPtr->plainSize == 0)

  00053	8b 45 08	 mov	 eax, DWORD PTR _contextPtr$[ebp]
  00056	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  0005a	75 0c		 jne	 SHORT $LN1@RijndaelIn

; 795  : 		{
; 796  : 			contextPtr->plainSize = contextPtr->keySize;

  0005c	8b 45 08	 mov	 eax, DWORD PTR _contextPtr$[ebp]
  0005f	8b 4d 08	 mov	 ecx, DWORD PTR _contextPtr$[ebp]
  00062	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00065	89 50 24	 mov	 DWORD PTR [eax+36], edx
$LN1@RijndaelIn:

; 797  : 		}
; 798  : 		contextPtr->nb = contextPtr->plainSize / 4;

  00068	8b 45 08	 mov	 eax, DWORD PTR _contextPtr$[ebp]
  0006b	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  0006e	99		 cdq
  0006f	83 e2 03	 and	 edx, 3
  00072	03 c2		 add	 eax, edx
  00074	c1 f8 02	 sar	 eax, 2
  00077	8b 4d 08	 mov	 ecx, DWORD PTR _contextPtr$[ebp]
  0007a	89 81 08 02 00
	00		 mov	 DWORD PTR [ecx+520], eax

; 799  : 		contextPtr->nr = (contextPtr->nb > contextPtr->nk) ? contextPtr->nb + 4 : contextPtr->nk + 4;

  00080	8b 45 08	 mov	 eax, DWORD PTR _contextPtr$[ebp]
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _contextPtr$[ebp]
  00086	8b 90 08 02 00
	00		 mov	 edx, DWORD PTR [eax+520]
  0008c	3b 91 10 02 00
	00		 cmp	 edx, DWORD PTR [ecx+528]
  00092	76 14		 jbe	 SHORT $LN6@RijndaelIn
  00094	8b 45 08	 mov	 eax, DWORD PTR _contextPtr$[ebp]
  00097	8b 88 08 02 00
	00		 mov	 ecx, DWORD PTR [eax+520]
  0009d	83 c1 04	 add	 ecx, 4
  000a0	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv86[ebp], ecx
  000a6	eb 12		 jmp	 SHORT $LN7@RijndaelIn
$LN6@RijndaelIn:
  000a8	8b 55 08	 mov	 edx, DWORD PTR _contextPtr$[ebp]
  000ab	8b 82 10 02 00
	00		 mov	 eax, DWORD PTR [edx+528]
  000b1	83 c0 04	 add	 eax, 4
  000b4	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv86[ebp], eax
$LN7@RijndaelIn:
  000ba	8b 4d 08	 mov	 ecx, DWORD PTR _contextPtr$[ebp]
  000bd	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv86[ebp]
  000c3	89 91 0c 02 00
	00		 mov	 DWORD PTR [ecx+524], edx

; 800  : 		KeyExpansion(contextPtr);

  000c9	8b 45 08	 mov	 eax, DWORD PTR _contextPtr$[ebp]
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 _KeyExpansion
  000d2	83 c4 04	 add	 esp, 4
$LN4@RijndaelIn:

; 801  : 	}
; 802  : }

  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	5b		 pop	 ebx
  000d8	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  000de	3b ec		 cmp	 ebp, esp
  000e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c3		 ret	 0
_RijndaelInit ENDP
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _KeyExpansion
_TEXT	SEGMENT
_keyPtr$ = -68						; size = 4
_nr$ = -56						; size = 4
_nb$ = -44						; size = 4
_nk$ = -32						; size = 4
_tmp$ = -20						; size = 4
_i$ = -8						; size = 4
_context$ = 8						; size = 4
_KeyExpansion PROC					; COMDAT

; 648  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd f8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-264]
  00012	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 649  : 	int i;
; 650  : 	unsigned int tmp;
; 651  : 	//256位有32个字节，8个字长
; 652  : 	//密钥字长
; 653  : 	int nk = context->nk;

  0001e	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00021	8b 88 10 02 00
	00		 mov	 ecx, DWORD PTR [eax+528]
  00027	89 4d e0	 mov	 DWORD PTR _nk$[ebp], ecx

; 654  : 	//明文字长
; 655  : 	int nb = context->nb;

  0002a	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  0002d	8b 88 08 02 00
	00		 mov	 ecx, DWORD PTR [eax+520]
  00033	89 4d d4	 mov	 DWORD PTR _nb$[ebp], ecx

; 656  : 	//轮数
; 657  : 	int nr = context->nr;

  00036	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00039	8b 88 0c 02 00
	00		 mov	 ecx, DWORD PTR [eax+524]
  0003f	89 4d c8	 mov	 DWORD PTR _nr$[ebp], ecx

; 658  : 	unsigned char* keyPtr = context->cryptKey;

  00042	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00045	89 45 bc	 mov	 DWORD PTR _keyPtr$[ebp], eax

; 659  : 
; 660  : 	//nr最大为14，nb最大为8,则需要的矩阵列为nb*(nr+1)=8*15=120
; 661  : 	//轮密钥
; 662  : 	//unsigned long roundKey[120] = {0};
; 663  : 	context->roundKey[0] = GETINT32(keyPtr,0,nk);//第一列

  00048	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  0004b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0004e	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00051	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  00054	03 55 e0	 add	 edx, DWORD PTR _nk$[ebp]
  00057	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  0005a	c1 e0 10	 shl	 eax, 16			; 00000010H
  0005d	0b c8		 or	 ecx, eax
  0005f	8b 55 e0	 mov	 edx, DWORD PTR _nk$[ebp]
  00062	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  00065	0f b6 14 50	 movzx	 edx, BYTE PTR [eax+edx*2]
  00069	c1 e2 08	 shl	 edx, 8
  0006c	0b ca		 or	 ecx, edx
  0006e	8b 45 e0	 mov	 eax, DWORD PTR _nk$[ebp]
  00071	6b c0 03	 imul	 eax, 3
  00074	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  00077	0f b6 04 02	 movzx	 eax, BYTE PTR [edx+eax]
  0007b	0b c8		 or	 ecx, eax
  0007d	8b 55 08	 mov	 edx, DWORD PTR _context$[ebp]
  00080	89 4a 28	 mov	 DWORD PTR [edx+40], ecx

; 664  : 	context->roundKey[1] = GETINT32(keyPtr,1,nk);//第二列

  00083	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  00086	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0008a	c1 e1 18	 shl	 ecx, 24			; 00000018H
  0008d	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  00090	03 55 e0	 add	 edx, DWORD PTR _nk$[ebp]
  00093	0f b6 42 01	 movzx	 eax, BYTE PTR [edx+1]
  00097	c1 e0 10	 shl	 eax, 16			; 00000010H
  0009a	0b c8		 or	 ecx, eax
  0009c	8b 55 e0	 mov	 edx, DWORD PTR _nk$[ebp]
  0009f	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  000a2	0f b6 54 50 01	 movzx	 edx, BYTE PTR [eax+edx*2+1]
  000a7	c1 e2 08	 shl	 edx, 8
  000aa	0b ca		 or	 ecx, edx
  000ac	8b 45 e0	 mov	 eax, DWORD PTR _nk$[ebp]
  000af	6b c0 03	 imul	 eax, 3
  000b2	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  000b5	0f b6 44 02 01	 movzx	 eax, BYTE PTR [edx+eax+1]
  000ba	0b c8		 or	 ecx, eax
  000bc	8b 55 08	 mov	 edx, DWORD PTR _context$[ebp]
  000bf	89 4a 2c	 mov	 DWORD PTR [edx+44], ecx

; 665  : 	context->roundKey[2] = GETINT32(keyPtr,2,nk);//第三列

  000c2	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  000c5	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  000c9	c1 e1 18	 shl	 ecx, 24			; 00000018H
  000cc	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  000cf	03 55 e0	 add	 edx, DWORD PTR _nk$[ebp]
  000d2	0f b6 42 02	 movzx	 eax, BYTE PTR [edx+2]
  000d6	c1 e0 10	 shl	 eax, 16			; 00000010H
  000d9	0b c8		 or	 ecx, eax
  000db	8b 55 e0	 mov	 edx, DWORD PTR _nk$[ebp]
  000de	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  000e1	0f b6 54 50 02	 movzx	 edx, BYTE PTR [eax+edx*2+2]
  000e6	c1 e2 08	 shl	 edx, 8
  000e9	0b ca		 or	 ecx, edx
  000eb	8b 45 e0	 mov	 eax, DWORD PTR _nk$[ebp]
  000ee	6b c0 03	 imul	 eax, 3
  000f1	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  000f4	0f b6 44 02 02	 movzx	 eax, BYTE PTR [edx+eax+2]
  000f9	0b c8		 or	 ecx, eax
  000fb	8b 55 08	 mov	 edx, DWORD PTR _context$[ebp]
  000fe	89 4a 30	 mov	 DWORD PTR [edx+48], ecx

; 666  : 	context->roundKey[3] = GETINT32(keyPtr,3,nk);//第四列

  00101	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  00104	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  00108	c1 e1 18	 shl	 ecx, 24			; 00000018H
  0010b	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  0010e	03 55 e0	 add	 edx, DWORD PTR _nk$[ebp]
  00111	0f b6 42 03	 movzx	 eax, BYTE PTR [edx+3]
  00115	c1 e0 10	 shl	 eax, 16			; 00000010H
  00118	0b c8		 or	 ecx, eax
  0011a	8b 55 e0	 mov	 edx, DWORD PTR _nk$[ebp]
  0011d	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  00120	0f b6 54 50 03	 movzx	 edx, BYTE PTR [eax+edx*2+3]
  00125	c1 e2 08	 shl	 edx, 8
  00128	0b ca		 or	 ecx, edx
  0012a	8b 45 e0	 mov	 eax, DWORD PTR _nk$[ebp]
  0012d	6b c0 03	 imul	 eax, 3
  00130	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  00133	0f b6 44 02 03	 movzx	 eax, BYTE PTR [edx+eax+3]
  00138	0b c8		 or	 ecx, eax
  0013a	8b 55 08	 mov	 edx, DWORD PTR _context$[ebp]
  0013d	89 4a 34	 mov	 DWORD PTR [edx+52], ecx

; 667  : 	if (nk >= (KeySize_192/4))

  00140	83 7d e0 06	 cmp	 DWORD PTR _nk$[ebp], 6
  00144	0f 8c 83 00 00
	00		 jl	 $LN9@KeyExpansi

; 668  : 	{
; 669  : 		context->roundKey[4] = GETINT32(keyPtr,4,nk);

  0014a	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  0014d	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00151	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00154	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  00157	03 55 e0	 add	 edx, DWORD PTR _nk$[ebp]
  0015a	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0015e	c1 e0 10	 shl	 eax, 16			; 00000010H
  00161	0b c8		 or	 ecx, eax
  00163	8b 55 e0	 mov	 edx, DWORD PTR _nk$[ebp]
  00166	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  00169	0f b6 54 50 04	 movzx	 edx, BYTE PTR [eax+edx*2+4]
  0016e	c1 e2 08	 shl	 edx, 8
  00171	0b ca		 or	 ecx, edx
  00173	8b 45 e0	 mov	 eax, DWORD PTR _nk$[ebp]
  00176	6b c0 03	 imul	 eax, 3
  00179	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  0017c	0f b6 44 02 04	 movzx	 eax, BYTE PTR [edx+eax+4]
  00181	0b c8		 or	 ecx, eax
  00183	8b 55 08	 mov	 edx, DWORD PTR _context$[ebp]
  00186	89 4a 38	 mov	 DWORD PTR [edx+56], ecx

; 670  : 		context->roundKey[5] = GETINT32(keyPtr,5,nk);

  00189	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  0018c	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  00190	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00193	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  00196	03 55 e0	 add	 edx, DWORD PTR _nk$[ebp]
  00199	0f b6 42 05	 movzx	 eax, BYTE PTR [edx+5]
  0019d	c1 e0 10	 shl	 eax, 16			; 00000010H
  001a0	0b c8		 or	 ecx, eax
  001a2	8b 55 e0	 mov	 edx, DWORD PTR _nk$[ebp]
  001a5	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  001a8	0f b6 54 50 05	 movzx	 edx, BYTE PTR [eax+edx*2+5]
  001ad	c1 e2 08	 shl	 edx, 8
  001b0	0b ca		 or	 ecx, edx
  001b2	8b 45 e0	 mov	 eax, DWORD PTR _nk$[ebp]
  001b5	6b c0 03	 imul	 eax, 3
  001b8	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  001bb	0f b6 44 02 05	 movzx	 eax, BYTE PTR [edx+eax+5]
  001c0	0b c8		 or	 ecx, eax
  001c2	8b 55 08	 mov	 edx, DWORD PTR _context$[ebp]
  001c5	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
  001c8	e9 84 00 00 00	 jmp	 $LN8@KeyExpansi
$LN9@KeyExpansi:

; 671  : 	} 
; 672  : 	else if (nk >= (KeySize_256/4))

  001cd	83 7d e0 08	 cmp	 DWORD PTR _nk$[ebp], 8
  001d1	7c 7e		 jl	 SHORT $LN8@KeyExpansi

; 673  : 	{
; 674  : 		context->roundKey[6] = GETINT32(keyPtr,6,nk);

  001d3	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  001d6	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  001da	c1 e1 18	 shl	 ecx, 24			; 00000018H
  001dd	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  001e0	03 55 e0	 add	 edx, DWORD PTR _nk$[ebp]
  001e3	0f b6 42 06	 movzx	 eax, BYTE PTR [edx+6]
  001e7	c1 e0 10	 shl	 eax, 16			; 00000010H
  001ea	0b c8		 or	 ecx, eax
  001ec	8b 55 e0	 mov	 edx, DWORD PTR _nk$[ebp]
  001ef	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  001f2	0f b6 54 50 06	 movzx	 edx, BYTE PTR [eax+edx*2+6]
  001f7	c1 e2 08	 shl	 edx, 8
  001fa	0b ca		 or	 ecx, edx
  001fc	8b 45 e0	 mov	 eax, DWORD PTR _nk$[ebp]
  001ff	6b c0 03	 imul	 eax, 3
  00202	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  00205	0f b6 44 02 06	 movzx	 eax, BYTE PTR [edx+eax+6]
  0020a	0b c8		 or	 ecx, eax
  0020c	8b 55 08	 mov	 edx, DWORD PTR _context$[ebp]
  0020f	89 4a 40	 mov	 DWORD PTR [edx+64], ecx

; 675  : 		context->roundKey[7] = GETINT32(keyPtr,7,nk);

  00212	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  00215	0f b6 48 07	 movzx	 ecx, BYTE PTR [eax+7]
  00219	c1 e1 18	 shl	 ecx, 24			; 00000018H
  0021c	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  0021f	03 55 e0	 add	 edx, DWORD PTR _nk$[ebp]
  00222	0f b6 42 07	 movzx	 eax, BYTE PTR [edx+7]
  00226	c1 e0 10	 shl	 eax, 16			; 00000010H
  00229	0b c8		 or	 ecx, eax
  0022b	8b 55 e0	 mov	 edx, DWORD PTR _nk$[ebp]
  0022e	8b 45 bc	 mov	 eax, DWORD PTR _keyPtr$[ebp]
  00231	0f b6 54 50 07	 movzx	 edx, BYTE PTR [eax+edx*2+7]
  00236	c1 e2 08	 shl	 edx, 8
  00239	0b ca		 or	 ecx, edx
  0023b	8b 45 e0	 mov	 eax, DWORD PTR _nk$[ebp]
  0023e	6b c0 03	 imul	 eax, 3
  00241	8b 55 bc	 mov	 edx, DWORD PTR _keyPtr$[ebp]
  00244	0f b6 44 02 07	 movzx	 eax, BYTE PTR [edx+eax+7]
  00249	0b c8		 or	 ecx, eax
  0024b	8b 55 08	 mov	 edx, DWORD PTR _context$[ebp]
  0024e	89 4a 44	 mov	 DWORD PTR [edx+68], ecx
$LN8@KeyExpansi:

; 676  : 	}
; 677  : 
; 678  : 	//轮数为明文和密文中长度更大值的字长+4
; 679  : 	for (i = nk;i<(nb*(nr+1)); i++)

  00251	8b 45 e0	 mov	 eax, DWORD PTR _nk$[ebp]
  00254	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
  00257	eb 09		 jmp	 SHORT $LN6@KeyExpansi
$LN5@KeyExpansi:
  00259	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0025c	83 c0 01	 add	 eax, 1
  0025f	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN6@KeyExpansi:
  00262	8b 45 c8	 mov	 eax, DWORD PTR _nr$[ebp]
  00265	83 c0 01	 add	 eax, 1
  00268	0f af 45 d4	 imul	 eax, DWORD PTR _nb$[ebp]
  0026c	39 45 f8	 cmp	 DWORD PTR _i$[ebp], eax
  0026f	0f 8d 2f 01 00
	00		 jge	 $LN4@KeyExpansi

; 680  : 	{
; 681  : 		tmp = context->roundKey[i-1];

  00275	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00278	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  0027b	8b 54 81 24	 mov	 edx, DWORD PTR [ecx+eax*4+36]
  0027f	89 55 ec	 mov	 DWORD PTR _tmp$[ebp], edx

; 682  : 		if (i % nk == 0)

  00282	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00285	99		 cdq
  00286	f7 7d e0	 idiv	 DWORD PTR _nk$[ebp]
  00289	85 d2		 test	 edx, edx
  0028b	0f 85 81 00 00
	00		 jne	 $LN3@KeyExpansi

; 683  : 		{
; 684  : 			tmp = ROTL(tmp,8,32);

  00291	8b 45 ec	 mov	 eax, DWORD PTR _tmp$[ebp]
  00294	c1 e0 08	 shl	 eax, 8
  00297	8b 4d ec	 mov	 ecx, DWORD PTR _tmp$[ebp]
  0029a	c1 e9 18	 shr	 ecx, 24			; 00000018H
  0029d	0b c1		 or	 eax, ecx
  0029f	89 45 ec	 mov	 DWORD PTR _tmp$[ebp], eax

; 685  : 			tmp = SUBBYTE(tmp);

  002a2	8b 45 ec	 mov	 eax, DWORD PTR _tmp$[ebp]
  002a5	c1 e8 18	 shr	 eax, 24			; 00000018H
  002a8	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  002ad	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR _sbox[eax]
  002b4	c1 e1 18	 shl	 ecx, 24			; 00000018H
  002b7	8b 55 ec	 mov	 edx, DWORD PTR _tmp$[ebp]
  002ba	c1 ea 10	 shr	 edx, 16			; 00000010H
  002bd	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  002c3	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR _sbox[edx]
  002ca	c1 e0 10	 shl	 eax, 16			; 00000010H
  002cd	0b c8		 or	 ecx, eax
  002cf	8b 55 ec	 mov	 edx, DWORD PTR _tmp$[ebp]
  002d2	c1 ea 08	 shr	 edx, 8
  002d5	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  002db	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR _sbox[edx]
  002e2	c1 e0 08	 shl	 eax, 8
  002e5	0b c8		 or	 ecx, eax
  002e7	8b 55 ec	 mov	 edx, DWORD PTR _tmp$[ebp]
  002ea	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  002f0	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR _sbox[edx]
  002f7	0b c8		 or	 ecx, eax
  002f9	89 4d ec	 mov	 DWORD PTR _tmp$[ebp], ecx

; 686  : 			tmp ^= rcon[i / nk];

  002fc	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  002ff	99		 cdq
  00300	f7 7d e0	 idiv	 DWORD PTR _nk$[ebp]
  00303	8b 4d ec	 mov	 ecx, DWORD PTR _tmp$[ebp]
  00306	33 0c 85 00 00
	00 00		 xor	 ecx, DWORD PTR _rcon[eax*4]
  0030d	89 4d ec	 mov	 DWORD PTR _tmp$[ebp], ecx
  00310	eb 73		 jmp	 SHORT $LN2@KeyExpansi
$LN3@KeyExpansi:

; 687  : 		}
; 688  : 		else if ((nk > (KeySize_192/4)) && (i%4 == 0))

  00312	83 7d e0 06	 cmp	 DWORD PTR _nk$[ebp], 6
  00316	7e 6d		 jle	 SHORT $LN2@KeyExpansi
  00318	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0031b	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  00320	79 05		 jns	 SHORT $LN12@KeyExpansi
  00322	48		 dec	 eax
  00323	83 c8 fc	 or	 eax, -4			; fffffffcH
  00326	40		 inc	 eax
$LN12@KeyExpansi:
  00327	85 c0		 test	 eax, eax
  00329	75 5a		 jne	 SHORT $LN2@KeyExpansi

; 689  : 		{
; 690  : 			tmp = SUBBYTE(tmp);

  0032b	8b 45 ec	 mov	 eax, DWORD PTR _tmp$[ebp]
  0032e	c1 e8 18	 shr	 eax, 24			; 00000018H
  00331	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00336	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR _sbox[eax]
  0033d	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00340	8b 55 ec	 mov	 edx, DWORD PTR _tmp$[ebp]
  00343	c1 ea 10	 shr	 edx, 16			; 00000010H
  00346	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  0034c	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR _sbox[edx]
  00353	c1 e0 10	 shl	 eax, 16			; 00000010H
  00356	0b c8		 or	 ecx, eax
  00358	8b 55 ec	 mov	 edx, DWORD PTR _tmp$[ebp]
  0035b	c1 ea 08	 shr	 edx, 8
  0035e	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  00364	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR _sbox[edx]
  0036b	c1 e0 08	 shl	 eax, 8
  0036e	0b c8		 or	 ecx, eax
  00370	8b 55 ec	 mov	 edx, DWORD PTR _tmp$[ebp]
  00373	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  00379	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR _sbox[edx]
  00380	0b c8		 or	 ecx, eax
  00382	89 4d ec	 mov	 DWORD PTR _tmp$[ebp], ecx
$LN2@KeyExpansi:

; 691  : 		}
; 692  : 		context->roundKey[i] = context->roundKey[i - nk] ^ tmp;

  00385	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00388	2b 45 e0	 sub	 eax, DWORD PTR _nk$[ebp]
  0038b	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  0038e	8b 54 81 28	 mov	 edx, DWORD PTR [ecx+eax*4+40]
  00392	33 55 ec	 xor	 edx, DWORD PTR _tmp$[ebp]
  00395	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00398	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  0039b	89 54 81 28	 mov	 DWORD PTR [ecx+eax*4+40], edx

; 693  : 	}

  0039f	e9 b5 fe ff ff	 jmp	 $LN5@KeyExpansi
$LN4@KeyExpansi:

; 694  : 	//将不需要的清0
; 695  : 	memset(&context->roundKey[nb*(nr+1)],0,sizeof(context->roundKey) - sizeof(context->roundKey[0]) * (nb*(nr+1)));

  003a4	8b 45 c8	 mov	 eax, DWORD PTR _nr$[ebp]
  003a7	83 c0 01	 add	 eax, 1
  003aa	0f af 45 d4	 imul	 eax, DWORD PTR _nb$[ebp]
  003ae	c1 e0 02	 shl	 eax, 2
  003b1	b9 e0 01 00 00	 mov	 ecx, 480		; 000001e0H
  003b6	2b c8		 sub	 ecx, eax
  003b8	51		 push	 ecx
  003b9	6a 00		 push	 0
  003bb	8b 55 c8	 mov	 edx, DWORD PTR _nr$[ebp]
  003be	83 c2 01	 add	 edx, 1
  003c1	0f af 55 d4	 imul	 edx, DWORD PTR _nb$[ebp]
  003c5	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  003c8	8d 4c 90 28	 lea	 ecx, DWORD PTR [eax+edx*4+40]
  003cc	51		 push	 ecx
  003cd	e8 00 00 00 00	 call	 _memset
  003d2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 696  : 	//轮密钥还可以加强,扩展
; 697  : }

  003d5	5f		 pop	 edi
  003d6	5e		 pop	 esi
  003d7	5b		 pop	 ebx
  003d8	81 c4 08 01 00
	00		 add	 esp, 264		; 00000108H
  003de	3b ec		 cmp	 ebp, esp
  003e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003e5	8b e5		 mov	 esp, ebp
  003e7	5d		 pop	 ebp
  003e8	c3		 ret	 0
_KeyExpansion ENDP
_TEXT	ENDS
PUBLIC	_RijndaelEncrypt
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _RijndaelEncrypt
_TEXT	SEGMENT
_plainSize$ = -20					; size = 4
_i$ = -8						; size = 4
_context$ = 8						; size = 4
_pInput$ = 12						; size = 4
_nSize$ = 16						; size = 4
_pOutput$ = 20						; size = 4
_RijndaelEncrypt PROC					; COMDAT

; 805  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 806  : 	unsigned int i;
; 807  : 	//需要计算的最小长度
; 808  : 	unsigned int plainSize = context->plainSize;

  0001e	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00021	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00024	89 4d ec	 mov	 DWORD PTR _plainSize$[ebp], ecx

; 809  : 	if (nSize % plainSize != 0)

  00027	8b 45 10	 mov	 eax, DWORD PTR _nSize$[ebp]
  0002a	33 d2		 xor	 edx, edx
  0002c	f7 75 ec	 div	 DWORD PTR _plainSize$[ebp]
  0002f	85 d2		 test	 edx, edx
  00031	74 32		 je	 SHORT $LN4@RijndaelEn

; 810  : 	{
; 811  : 		nSize += plainSize - (nSize % plainSize);

  00033	8b 45 10	 mov	 eax, DWORD PTR _nSize$[ebp]
  00036	33 d2		 xor	 edx, edx
  00038	f7 75 ec	 div	 DWORD PTR _plainSize$[ebp]
  0003b	8b 45 ec	 mov	 eax, DWORD PTR _plainSize$[ebp]
  0003e	2b c2		 sub	 eax, edx
  00040	03 45 10	 add	 eax, DWORD PTR _nSize$[ebp]
  00043	89 45 10	 mov	 DWORD PTR _nSize$[ebp], eax

; 812  : 		//清0
; 813  : 		memset((unsigned char*)pOutput + nSize,0,plainSize - (nSize % plainSize));

  00046	8b 45 10	 mov	 eax, DWORD PTR _nSize$[ebp]
  00049	33 d2		 xor	 edx, edx
  0004b	f7 75 ec	 div	 DWORD PTR _plainSize$[ebp]
  0004e	8b 45 ec	 mov	 eax, DWORD PTR _plainSize$[ebp]
  00051	2b c2		 sub	 eax, edx
  00053	50		 push	 eax
  00054	6a 00		 push	 0
  00056	8b 4d 14	 mov	 ecx, DWORD PTR _pOutput$[ebp]
  00059	03 4d 10	 add	 ecx, DWORD PTR _nSize$[ebp]
  0005c	51		 push	 ecx
  0005d	e8 00 00 00 00	 call	 _memset
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@RijndaelEn:

; 814  : 	}
; 815  : 	for (i=0; i<nSize; i += plainSize)

  00065	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0006c	eb 09		 jmp	 SHORT $LN3@RijndaelEn
$LN2@RijndaelEn:
  0006e	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00071	03 45 ec	 add	 eax, DWORD PTR _plainSize$[ebp]
  00074	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN3@RijndaelEn:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0007a	3b 45 10	 cmp	 eax, DWORD PTR _nSize$[ebp]
  0007d	73 2f		 jae	 SHORT $LN5@RijndaelEn

; 816  : 	{
; 817  : 		memcpy((unsigned char*)pOutput + i,(unsigned char*)pInput + i,plainSize);

  0007f	8b 45 ec	 mov	 eax, DWORD PTR _plainSize$[ebp]
  00082	50		 push	 eax
  00083	8b 4d 0c	 mov	 ecx, DWORD PTR _pInput$[ebp]
  00086	03 4d f8	 add	 ecx, DWORD PTR _i$[ebp]
  00089	51		 push	 ecx
  0008a	8b 55 14	 mov	 edx, DWORD PTR _pOutput$[ebp]
  0008d	03 55 f8	 add	 edx, DWORD PTR _i$[ebp]
  00090	52		 push	 edx
  00091	e8 00 00 00 00	 call	 _memcpy
  00096	83 c4 0c	 add	 esp, 12			; 0000000cH

; 818  : 		Encrypt(context,(unsigned char*)pOutput + i);

  00099	8b 45 14	 mov	 eax, DWORD PTR _pOutput$[ebp]
  0009c	03 45 f8	 add	 eax, DWORD PTR _i$[ebp]
  0009f	50		 push	 eax
  000a0	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  000a3	51		 push	 ecx
  000a4	e8 00 00 00 00	 call	 _Encrypt
  000a9	83 c4 08	 add	 esp, 8

; 819  : 	}

  000ac	eb c0		 jmp	 SHORT $LN2@RijndaelEn
$LN5@RijndaelEn:

; 820  : }

  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx
  000b1	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000b7	3b ec		 cmp	 ebp, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c3		 ret	 0
_RijndaelEncrypt ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _Encrypt
_TEXT	SEGMENT
_nb$ = -76						; size = 4
_inputStringPtr$ = -64					; size = 4
_state$ = -52						; size = 32
_round$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_context$ = 8						; size = 4
_input$ = 12						; size = 4
_Encrypt PROC						; COMDAT

; 703  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd f0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-272]
  00012	b9 44 00 00 00	 mov	 ecx, 68			; 00000044H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 704  : 	unsigned int round;
; 705  : 	//明文的最大长度
; 706  : 	unsigned long state[8] = {0};

  00028	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _state$[ebp], 0
  0002f	33 c0		 xor	 eax, eax
  00031	89 45 d0	 mov	 DWORD PTR _state$[ebp+4], eax
  00034	89 45 d4	 mov	 DWORD PTR _state$[ebp+8], eax
  00037	89 45 d8	 mov	 DWORD PTR _state$[ebp+12], eax
  0003a	89 45 dc	 mov	 DWORD PTR _state$[ebp+16], eax
  0003d	89 45 e0	 mov	 DWORD PTR _state$[ebp+20], eax
  00040	89 45 e4	 mov	 DWORD PTR _state$[ebp+24], eax
  00043	89 45 e8	 mov	 DWORD PTR _state$[ebp+28], eax

; 707  : 	unsigned char* inputStringPtr = (unsigned char*)input;

  00046	8b 45 0c	 mov	 eax, DWORD PTR _input$[ebp]
  00049	89 45 c0	 mov	 DWORD PTR _inputStringPtr$[ebp], eax

; 708  : 	unsigned int nb = context->nb;

  0004c	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  0004f	8b 88 08 02 00
	00		 mov	 ecx, DWORD PTR [eax+520]
  00055	89 4d b4	 mov	 DWORD PTR _nb$[ebp], ecx

; 709  : 	//经过这个过程，由a0 a1 a2 a3 a4 a5组成的字节序列就组成了
; 710  : 	// a0 a4 a8  a12 a16 ...
; 711  : 	// a1 a5 a9  a13 a17 ...
; 712  : 	// a2 a6 a10 a14 a18 ...
; 713  : 	// a3 a7 a11 a15 a19 ...
; 714  : 	//这样的字节矩阵
; 715  : 	state[0] = GETINT32(inputStringPtr,0,nb);

  00058	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  0005b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0005e	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00061	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00064	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  00067	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  0006a	c1 e0 10	 shl	 eax, 16			; 00000010H
  0006d	0b c8		 or	 ecx, eax
  0006f	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  00072	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00075	0f b6 14 50	 movzx	 edx, BYTE PTR [eax+edx*2]
  00079	c1 e2 08	 shl	 edx, 8
  0007c	0b ca		 or	 ecx, edx
  0007e	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  00081	6b c0 03	 imul	 eax, 3
  00084	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00087	0f b6 04 02	 movzx	 eax, BYTE PTR [edx+eax]
  0008b	0b c8		 or	 ecx, eax
  0008d	89 4d cc	 mov	 DWORD PTR _state$[ebp], ecx

; 716  : 	state[1] = GETINT32(inputStringPtr,1,nb);

  00090	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00093	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00097	c1 e1 18	 shl	 ecx, 24			; 00000018H
  0009a	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  0009d	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  000a0	0f b6 42 01	 movzx	 eax, BYTE PTR [edx+1]
  000a4	c1 e0 10	 shl	 eax, 16			; 00000010H
  000a7	0b c8		 or	 ecx, eax
  000a9	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  000ac	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  000af	0f b6 54 50 01	 movzx	 edx, BYTE PTR [eax+edx*2+1]
  000b4	c1 e2 08	 shl	 edx, 8
  000b7	0b ca		 or	 ecx, edx
  000b9	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  000bc	6b c0 03	 imul	 eax, 3
  000bf	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  000c2	0f b6 44 02 01	 movzx	 eax, BYTE PTR [edx+eax+1]
  000c7	0b c8		 or	 ecx, eax
  000c9	89 4d d0	 mov	 DWORD PTR _state$[ebp+4], ecx

; 717  : 	state[2] = GETINT32(inputStringPtr,2,nb);

  000cc	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  000cf	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  000d3	c1 e1 18	 shl	 ecx, 24			; 00000018H
  000d6	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  000d9	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  000dc	0f b6 42 02	 movzx	 eax, BYTE PTR [edx+2]
  000e0	c1 e0 10	 shl	 eax, 16			; 00000010H
  000e3	0b c8		 or	 ecx, eax
  000e5	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  000e8	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  000eb	0f b6 54 50 02	 movzx	 edx, BYTE PTR [eax+edx*2+2]
  000f0	c1 e2 08	 shl	 edx, 8
  000f3	0b ca		 or	 ecx, edx
  000f5	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  000f8	6b c0 03	 imul	 eax, 3
  000fb	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  000fe	0f b6 44 02 02	 movzx	 eax, BYTE PTR [edx+eax+2]
  00103	0b c8		 or	 ecx, eax
  00105	89 4d d4	 mov	 DWORD PTR _state$[ebp+8], ecx

; 718  : 	state[3] = GETINT32(inputStringPtr,3,nb);

  00108	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  0010b	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  0010f	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00112	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00115	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  00118	0f b6 42 03	 movzx	 eax, BYTE PTR [edx+3]
  0011c	c1 e0 10	 shl	 eax, 16			; 00000010H
  0011f	0b c8		 or	 ecx, eax
  00121	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  00124	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00127	0f b6 54 50 03	 movzx	 edx, BYTE PTR [eax+edx*2+3]
  0012c	c1 e2 08	 shl	 edx, 8
  0012f	0b ca		 or	 ecx, edx
  00131	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  00134	6b c0 03	 imul	 eax, 3
  00137	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  0013a	0f b6 44 02 03	 movzx	 eax, BYTE PTR [edx+eax+3]
  0013f	0b c8		 or	 ecx, eax
  00141	89 4d d8	 mov	 DWORD PTR _state$[ebp+12], ecx

; 719  : 	if (nb >= (KeySize_192/4))

  00144	83 7d b4 06	 cmp	 DWORD PTR _nb$[ebp], 6
  00148	72 78		 jb	 SHORT $LN5@Encrypt

; 720  : 	{
; 721  : 		state[4] = GETINT32(inputStringPtr,4,nb);

  0014a	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  0014d	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00151	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00154	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00157	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  0015a	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0015e	c1 e0 10	 shl	 eax, 16			; 00000010H
  00161	0b c8		 or	 ecx, eax
  00163	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  00166	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00169	0f b6 54 50 04	 movzx	 edx, BYTE PTR [eax+edx*2+4]
  0016e	c1 e2 08	 shl	 edx, 8
  00171	0b ca		 or	 ecx, edx
  00173	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  00176	6b c0 03	 imul	 eax, 3
  00179	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  0017c	0f b6 44 02 04	 movzx	 eax, BYTE PTR [edx+eax+4]
  00181	0b c8		 or	 ecx, eax
  00183	89 4d dc	 mov	 DWORD PTR _state$[ebp+16], ecx

; 722  : 		state[5] = GETINT32(inputStringPtr,5,nb);

  00186	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00189	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  0018d	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00190	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00193	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  00196	0f b6 42 05	 movzx	 eax, BYTE PTR [edx+5]
  0019a	c1 e0 10	 shl	 eax, 16			; 00000010H
  0019d	0b c8		 or	 ecx, eax
  0019f	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  001a2	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  001a5	0f b6 54 50 05	 movzx	 edx, BYTE PTR [eax+edx*2+5]
  001aa	c1 e2 08	 shl	 edx, 8
  001ad	0b ca		 or	 ecx, edx
  001af	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  001b2	6b c0 03	 imul	 eax, 3
  001b5	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  001b8	0f b6 44 02 05	 movzx	 eax, BYTE PTR [edx+eax+5]
  001bd	0b c8		 or	 ecx, eax
  001bf	89 4d e0	 mov	 DWORD PTR _state$[ebp+20], ecx
$LN5@Encrypt:

; 723  : 	}
; 724  : 
; 725  : 	if (nb >= (KeySize_256/4))

  001c2	83 7d b4 08	 cmp	 DWORD PTR _nb$[ebp], 8
  001c6	72 78		 jb	 SHORT $LN4@Encrypt

; 726  : 	{
; 727  : 		state[6] = GETINT32(inputStringPtr,6,nb);

  001c8	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  001cb	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  001cf	c1 e1 18	 shl	 ecx, 24			; 00000018H
  001d2	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  001d5	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  001d8	0f b6 42 06	 movzx	 eax, BYTE PTR [edx+6]
  001dc	c1 e0 10	 shl	 eax, 16			; 00000010H
  001df	0b c8		 or	 ecx, eax
  001e1	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  001e4	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  001e7	0f b6 54 50 06	 movzx	 edx, BYTE PTR [eax+edx*2+6]
  001ec	c1 e2 08	 shl	 edx, 8
  001ef	0b ca		 or	 ecx, edx
  001f1	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  001f4	6b c0 03	 imul	 eax, 3
  001f7	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  001fa	0f b6 44 02 06	 movzx	 eax, BYTE PTR [edx+eax+6]
  001ff	0b c8		 or	 ecx, eax
  00201	89 4d e4	 mov	 DWORD PTR _state$[ebp+24], ecx

; 728  : 		state[7] = GETINT32(inputStringPtr,7,nb);

  00204	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00207	0f b6 48 07	 movzx	 ecx, BYTE PTR [eax+7]
  0020b	c1 e1 18	 shl	 ecx, 24			; 00000018H
  0020e	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00211	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  00214	0f b6 42 07	 movzx	 eax, BYTE PTR [edx+7]
  00218	c1 e0 10	 shl	 eax, 16			; 00000010H
  0021b	0b c8		 or	 ecx, eax
  0021d	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  00220	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00223	0f b6 54 50 07	 movzx	 edx, BYTE PTR [eax+edx*2+7]
  00228	c1 e2 08	 shl	 edx, 8
  0022b	0b ca		 or	 ecx, edx
  0022d	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  00230	6b c0 03	 imul	 eax, 3
  00233	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00236	0f b6 44 02 07	 movzx	 eax, BYTE PTR [edx+eax+7]
  0023b	0b c8		 or	 ecx, eax
  0023d	89 4d e8	 mov	 DWORD PTR _state$[ebp+28], ecx
$LN4@Encrypt:

; 729  : 	}
; 730  : 	AddRoundKey(context,0,state);

  00240	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  00243	50		 push	 eax
  00244	6a 00		 push	 0
  00246	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  00249	51		 push	 ecx
  0024a	e8 00 00 00 00	 call	 _AddRoundKey
  0024f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 731  : 	for (round = 1; round<context->nr; round++)

  00252	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _round$[ebp], 1
  00259	eb 09		 jmp	 SHORT $LN3@Encrypt
$LN2@Encrypt:
  0025b	8b 45 f4	 mov	 eax, DWORD PTR _round$[ebp]
  0025e	83 c0 01	 add	 eax, 1
  00261	89 45 f4	 mov	 DWORD PTR _round$[ebp], eax
$LN3@Encrypt:
  00264	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00267	8b 4d f4	 mov	 ecx, DWORD PTR _round$[ebp]
  0026a	3b 88 0c 02 00
	00		 cmp	 ecx, DWORD PTR [eax+524]
  00270	73 46		 jae	 SHORT $LN1@Encrypt

; 732  : 	{
; 733  : 		SubByte(context,state);

  00272	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  00275	50		 push	 eax
  00276	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  00279	51		 push	 ecx
  0027a	e8 00 00 00 00	 call	 _SubByte
  0027f	83 c4 08	 add	 esp, 8

; 734  : 		ShiftRow(context,state);

  00282	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  00285	50		 push	 eax
  00286	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  00289	51		 push	 ecx
  0028a	e8 00 00 00 00	 call	 _ShiftRow
  0028f	83 c4 08	 add	 esp, 8

; 735  : 		MixColumn(context,state);

  00292	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  00295	50		 push	 eax
  00296	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  00299	51		 push	 ecx
  0029a	e8 00 00 00 00	 call	 _MixColumn
  0029f	83 c4 08	 add	 esp, 8

; 736  : 		AddRoundKey(context,round,state);

  002a2	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  002a5	50		 push	 eax
  002a6	8b 4d f4	 mov	 ecx, DWORD PTR _round$[ebp]
  002a9	51		 push	 ecx
  002aa	8b 55 08	 mov	 edx, DWORD PTR _context$[ebp]
  002ad	52		 push	 edx
  002ae	e8 00 00 00 00	 call	 _AddRoundKey
  002b3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 737  : 	}

  002b6	eb a3		 jmp	 SHORT $LN2@Encrypt
$LN1@Encrypt:

; 738  : 	SubByte(context,state);

  002b8	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  002bb	50		 push	 eax
  002bc	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  002bf	51		 push	 ecx
  002c0	e8 00 00 00 00	 call	 _SubByte
  002c5	83 c4 08	 add	 esp, 8

; 739  : 	ShiftRow(context,state);

  002c8	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  002cb	50		 push	 eax
  002cc	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  002cf	51		 push	 ecx
  002d0	e8 00 00 00 00	 call	 _ShiftRow
  002d5	83 c4 08	 add	 esp, 8

; 740  : 	AddRoundKey(context,context->nr,state);

  002d8	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  002db	50		 push	 eax
  002dc	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  002df	8b 91 0c 02 00
	00		 mov	 edx, DWORD PTR [ecx+524]
  002e5	52		 push	 edx
  002e6	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  002e9	50		 push	 eax
  002ea	e8 00 00 00 00	 call	 _AddRoundKey
  002ef	83 c4 0c	 add	 esp, 12			; 0000000cH

; 741  : 	//就这个格式输出的密文，其实也没有关系的
; 742  : 	//将格式纠正
; 743  : 	StateToChars((unsigned char*)input,state,context->nb);

  002f2	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  002f5	8b 88 08 02 00
	00		 mov	 ecx, DWORD PTR [eax+520]
  002fb	51		 push	 ecx
  002fc	8d 55 cc	 lea	 edx, DWORD PTR _state$[ebp]
  002ff	52		 push	 edx
  00300	8b 45 0c	 mov	 eax, DWORD PTR _input$[ebp]
  00303	50		 push	 eax
  00304	e8 00 00 00 00	 call	 _StateToChars
  00309	83 c4 0c	 add	 esp, 12			; 0000000cH

; 744  : }

  0030c	52		 push	 edx
  0030d	8b cd		 mov	 ecx, ebp
  0030f	50		 push	 eax
  00310	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@Encrypt
  00316	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0031b	58		 pop	 eax
  0031c	5a		 pop	 edx
  0031d	5f		 pop	 edi
  0031e	5e		 pop	 esi
  0031f	5b		 pop	 ebx
  00320	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00323	33 cd		 xor	 ecx, ebp
  00325	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0032a	81 c4 10 01 00
	00		 add	 esp, 272		; 00000110H
  00330	3b ec		 cmp	 ebp, esp
  00332	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00337	8b e5		 mov	 esp, ebp
  00339	5d		 pop	 ebp
  0033a	c3		 ret	 0
  0033b	90		 npad	 1
$LN10@Encrypt:
  0033c	01 00 00 00	 DD	 1
  00340	00 00 00 00	 DD	 $LN9@Encrypt
$LN9@Encrypt:
  00344	cc ff ff ff	 DD	 -52			; ffffffccH
  00348	20 00 00 00	 DD	 32			; 00000020H
  0034c	00 00 00 00	 DD	 $LN8@Encrypt
$LN8@Encrypt:
  00350	73		 DB	 115			; 00000073H
  00351	74		 DB	 116			; 00000074H
  00352	61		 DB	 97			; 00000061H
  00353	74		 DB	 116			; 00000074H
  00354	65		 DB	 101			; 00000065H
  00355	00		 DB	 0
_Encrypt ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _StateToChars
_TEXT	SEGMENT
_round$ = -8						; size = 4
_output$ = 8						; size = 4
_state$ = 12						; size = 4
_stateLen$ = 16						; size = 4
_StateToChars PROC					; COMDAT

; 332  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 333  : 	unsigned int round;
; 334  : 	for (round=0; round<stateLen; round++)

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _round$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN3@StateToCha
$LN2@StateToCha:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _round$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _round$[ebp], eax
$LN3@StateToCha:
  00030	8b 45 f8	 mov	 eax, DWORD PTR _round$[ebp]
  00033	3b 45 10	 cmp	 eax, DWORD PTR _stateLen$[ebp]
  00036	73 7c		 jae	 SHORT $LN4@StateToCha

; 335  : 	{
; 336  : 		*(output + round) = (unsigned char)((state[round] >> 24) & 0xff);

  00038	8b 45 f8	 mov	 eax, DWORD PTR _round$[ebp]
  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  0003e	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00041	c1 ea 18	 shr	 edx, 24			; 00000018H
  00044	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  0004a	8b 45 08	 mov	 eax, DWORD PTR _output$[ebp]
  0004d	03 45 f8	 add	 eax, DWORD PTR _round$[ebp]
  00050	88 10		 mov	 BYTE PTR [eax], dl

; 337  : 		*(output + stateLen + round) = (unsigned char)((state[round] >> 16) & 0xff);

  00052	8b 45 f8	 mov	 eax, DWORD PTR _round$[ebp]
  00055	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00058	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  0005b	c1 ea 10	 shr	 edx, 16			; 00000010H
  0005e	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  00064	8b 45 08	 mov	 eax, DWORD PTR _output$[ebp]
  00067	03 45 10	 add	 eax, DWORD PTR _stateLen$[ebp]
  0006a	8b 4d f8	 mov	 ecx, DWORD PTR _round$[ebp]
  0006d	88 14 08	 mov	 BYTE PTR [eax+ecx], dl

; 338  : 		*(output + stateLen * 2 + round) = (unsigned char)((state[round] >> 8) & 0xff);

  00070	8b 45 f8	 mov	 eax, DWORD PTR _round$[ebp]
  00073	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00076	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00079	c1 ea 08	 shr	 edx, 8
  0007c	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  00082	8b 45 10	 mov	 eax, DWORD PTR _stateLen$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _output$[ebp]
  00088	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]
  0008b	8b 4d f8	 mov	 ecx, DWORD PTR _round$[ebp]
  0008e	88 14 08	 mov	 BYTE PTR [eax+ecx], dl

; 339  : 		*(output + stateLen * 3 + round) = (unsigned char)(state[round] & 0xff);

  00091	8b 45 f8	 mov	 eax, DWORD PTR _round$[ebp]
  00094	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00097	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  0009a	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  000a0	8b 45 10	 mov	 eax, DWORD PTR _stateLen$[ebp]
  000a3	6b c0 03	 imul	 eax, 3
  000a6	03 45 08	 add	 eax, DWORD PTR _output$[ebp]
  000a9	8b 4d f8	 mov	 ecx, DWORD PTR _round$[ebp]
  000ac	88 14 08	 mov	 BYTE PTR [eax+ecx], dl

; 340  : 	}

  000af	e9 73 ff ff ff	 jmp	 $LN2@StateToCha
$LN4@StateToCha:

; 341  : }

  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c3		 ret	 0
_StateToChars ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _AddRoundKey
_TEXT	SEGMENT
_i$ = -8						; size = 4
_context$ = 8						; size = 4
_round$ = 12						; size = 4
_state$ = 16						; size = 4
_AddRoundKey PROC					; COMDAT

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 361  : 	unsigned int i;
; 362  : 	//只是与roundkey做异或运算
; 363  : 	for (i=0; i<context->nb; i++)

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN3@AddRoundKe
$LN2@AddRoundKe:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN3@AddRoundKe:
  00030	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00036	3b 88 08 02 00
	00		 cmp	 ecx, DWORD PTR [eax+520]
  0003c	73 2b		 jae	 SHORT $LN4@AddRoundKe

; 364  : 	{
; 365  : 		state[i] = context->roundKey[round * context->nb + i] ^ state[i];

  0003e	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _round$[ebp]
  00044	0f af 88 08 02
	00 00		 imul	 ecx, DWORD PTR [eax+520]
  0004b	03 4d f8	 add	 ecx, DWORD PTR _i$[ebp]
  0004e	8b 55 08	 mov	 edx, DWORD PTR _context$[ebp]
  00051	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00054	8b 75 10	 mov	 esi, DWORD PTR _state$[ebp]
  00057	8b 4c 8a 28	 mov	 ecx, DWORD PTR [edx+ecx*4+40]
  0005b	33 0c 86	 xor	 ecx, DWORD PTR [esi+eax*4]
  0005e	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  00061	8b 45 10	 mov	 eax, DWORD PTR _state$[ebp]
  00064	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx

; 366  : 	}

  00067	eb be		 jmp	 SHORT $LN2@AddRoundKe
$LN4@AddRoundKe:

; 367  : }

  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
_AddRoundKey ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _SubByte
_TEXT	SEGMENT
_i$ = -8						; size = 4
_context$ = 8						; size = 4
_state$ = 12						; size = 4
_SubByte PROC						; COMDAT

; 384  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 385  : 	/*
; 386  : 	statePtr->v0 = SUBBYTE(statePtr->v0);
; 387  : 	statePtr->v1 = SUBBYTE(statePtr->v1);
; 388  : 	statePtr->v2 = SUBBYTE(statePtr->v2);
; 389  : 	statePtr->v3 = SUBBYTE(statePtr->v3);
; 390  : 	if (contextPtr->nb >= (KeySize_192/4))
; 391  : 	{
; 392  : 	statePtr->v4 = SUBBYTE(statePtr->v4);
; 393  : 	statePtr->v5 = SUBBYTE(statePtr->v5);
; 394  : 	}
; 395  : 	if (contextPtr->nb >= (KeySize_256/4))
; 396  : 	{
; 397  : 	statePtr->v6 = SUBBYTE(statePtr->v6);
; 398  : 	statePtr->v7 = SUBBYTE(statePtr->v7);
; 399  : 	}
; 400  : 	*/
; 401  : 	unsigned int i;
; 402  : 	for (i=0; i<context->nb; i++)

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN3@SubByte
$LN2@SubByte:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN3@SubByte:
  00030	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00036	3b 88 08 02 00
	00		 cmp	 ecx, DWORD PTR [eax+520]
  0003c	73 7e		 jae	 SHORT $LN4@SubByte

; 403  : 	{
; 404  : 		state[i] = SUBBYTE(state[i]);

  0003e	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00044	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00047	c1 ea 18	 shr	 edx, 24			; 00000018H
  0004a	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  00050	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR _sbox[edx]
  00057	c1 e0 18	 shl	 eax, 24			; 00000018H
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  0005d	8b 55 0c	 mov	 edx, DWORD PTR _state$[ebp]
  00060	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  00063	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00066	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0006c	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR _sbox[ecx]
  00073	c1 e2 10	 shl	 edx, 16			; 00000010H
  00076	0b c2		 or	 eax, edx
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  0007b	8b 55 0c	 mov	 edx, DWORD PTR _state$[ebp]
  0007e	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  00081	c1 e9 08	 shr	 ecx, 8
  00084	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0008a	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR _sbox[ecx]
  00091	c1 e2 08	 shl	 edx, 8
  00094	0b c2		 or	 eax, edx
  00096	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00099	8b 55 0c	 mov	 edx, DWORD PTR _state$[ebp]
  0009c	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  0009f	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  000a5	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR _sbox[ecx]
  000ac	0b c2		 or	 eax, edx
  000ae	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  000b1	8b 55 0c	 mov	 edx, DWORD PTR _state$[ebp]
  000b4	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 405  : 	}

  000b7	e9 6b ff ff ff	 jmp	 $LN2@SubByte
$LN4@SubByte:

; 406  : }

  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
_SubByte ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ShiftRow
_TEXT	SEGMENT
_stateCount$ = -20					; size = 4
_stateStr$ = -8						; size = 4
_context$ = 8						; size = 4
_state$ = 12						; size = 4
_ShiftRow PROC						; COMDAT

; 468  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 469  : 	unsigned char* stateStr = (unsigned char*)state;

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _state$[ebp]
  00021	89 45 f8	 mov	 DWORD PTR _stateStr$[ebp], eax

; 470  : 	unsigned int stateCount = context->plainSize;

  00024	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00027	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0002a	89 4d ec	 mov	 DWORD PTR _stateCount$[ebp], ecx

; 471  : 	ShiftRowStr(stateStr,stateCount);

  0002d	8b 45 ec	 mov	 eax, DWORD PTR _stateCount$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f8	 mov	 ecx, DWORD PTR _stateStr$[ebp]
  00034	51		 push	 ecx
  00035	e8 00 00 00 00	 call	 _ShiftRowStr
  0003a	83 c4 08	 add	 esp, 8

; 472  : }

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
_ShiftRow ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ShiftRowStr
_TEXT	SEGMENT
_columnCount$ = -64					; size = 4
_lineCount$ = -52					; size = 4
_tmp$ = -40						; size = 8
_j$ = -24						; size = 4
_i$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_stateStr$ = 8						; size = 4
_count$ = 12						; size = 4
_ShiftRowStr PROC					; COMDAT

; 425  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd fc fe ff
	ff		 lea	 edi, DWORD PTR [ebp-260]
  00012	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 426  : 	int i,j;
; 427  : 	//明文一行最多只有8个字节
; 428  : 	unsigned char tmp[8] = {0};

  00028	c6 45 d8 00	 mov	 BYTE PTR _tmp$[ebp], 0
  0002c	33 c0		 xor	 eax, eax
  0002e	89 45 d9	 mov	 DWORD PTR _tmp$[ebp+1], eax
  00031	66 89 45 dd	 mov	 WORD PTR _tmp$[ebp+5], ax
  00035	88 45 df	 mov	 BYTE PTR _tmp$[ebp+7], al

; 429  : 	int lineCount = 4;

  00038	c7 45 cc 04 00
	00 00		 mov	 DWORD PTR _lineCount$[ebp], 4

; 430  : 	//列数
; 431  : 	int columnCount = count / lineCount;

  0003f	8b 45 0c	 mov	 eax, DWORD PTR _count$[ebp]
  00042	33 d2		 xor	 edx, edx
  00044	f7 75 cc	 div	 DWORD PTR _lineCount$[ebp]
  00047	89 45 c0	 mov	 DWORD PTR _columnCount$[ebp], eax

; 432  : 	//从1行开始移位
; 433  : 	for (i=1; i<lineCount; i++)

  0004a	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _i$[ebp], 1
  00051	eb 09		 jmp	 SHORT $LN6@ShiftRowSt
$LN5@ShiftRowSt:
  00053	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax
$LN6@ShiftRowSt:
  0005c	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  0005f	3b 45 cc	 cmp	 eax, DWORD PTR _lineCount$[ebp]
  00062	7d 57		 jge	 SHORT $LN7@ShiftRowSt

; 434  : 	{
; 435  : 		CopyString(tmp,(char*)(stateStr + i*columnCount),columnCount);

  00064	8b 45 c0	 mov	 eax, DWORD PTR _columnCount$[ebp]
  00067	50		 push	 eax
  00068	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  0006b	0f af 4d c0	 imul	 ecx, DWORD PTR _columnCount$[ebp]
  0006f	03 4d 08	 add	 ecx, DWORD PTR _stateStr$[ebp]
  00072	51		 push	 ecx
  00073	8d 55 d8	 lea	 edx, DWORD PTR _tmp$[ebp]
  00076	52		 push	 edx
  00077	e8 00 00 00 00	 call	 _CopyString
  0007c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 436  : 		for (j=0; j<columnCount; j++)

  0007f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _j$[ebp], 0
  00086	eb 09		 jmp	 SHORT $LN3@ShiftRowSt
$LN2@ShiftRowSt:
  00088	8b 45 e8	 mov	 eax, DWORD PTR _j$[ebp]
  0008b	83 c0 01	 add	 eax, 1
  0008e	89 45 e8	 mov	 DWORD PTR _j$[ebp], eax
$LN3@ShiftRowSt:
  00091	8b 45 e8	 mov	 eax, DWORD PTR _j$[ebp]
  00094	3b 45 c0	 cmp	 eax, DWORD PTR _columnCount$[ebp]
  00097	7d 20		 jge	 SHORT $LN1@ShiftRowSt

; 437  : 		{
; 438  : 			*(stateStr + i*columnCount + j) = tmp[(i + j) % columnCount];

  00099	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  0009c	03 45 e8	 add	 eax, DWORD PTR _j$[ebp]
  0009f	99		 cdq
  000a0	f7 7d c0	 idiv	 DWORD PTR _columnCount$[ebp]
  000a3	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  000a6	0f af 45 c0	 imul	 eax, DWORD PTR _columnCount$[ebp]
  000aa	03 45 08	 add	 eax, DWORD PTR _stateStr$[ebp]
  000ad	8b 4d e8	 mov	 ecx, DWORD PTR _j$[ebp]
  000b0	8a 54 15 d8	 mov	 dl, BYTE PTR _tmp$[ebp+edx]
  000b4	88 14 08	 mov	 BYTE PTR [eax+ecx], dl

; 439  : 		}

  000b7	eb cf		 jmp	 SHORT $LN2@ShiftRowSt
$LN1@ShiftRowSt:

; 440  : 		/*
; 441  : 		t[0] = *(stateStr + i*columnCount);
; 442  : 		t[1] = *(stateStr + i*columnCount + 1);
; 443  : 		t[2] = *(stateStr + i*columnCount + 2);
; 444  : 		for (j=0; j<(columnCount-i); j++)
; 445  : 		{
; 446  : 			//第几行就移几位
; 447  : 			*(stateStr + i*columnCount + j) = *(stateStr + i*columnCount + j + i);
; 448  : 		}
; 449  : 		//用3个if语句代替for，提高性能
; 450  : 		if (i >= 1)
; 451  : 		{
; 452  : 			*(stateStr + i*columnCount + j) = t[0];
; 453  : 		}
; 454  : 		if (i >= 2)
; 455  : 		{
; 456  : 			*(stateStr + i*columnCount + j + 1) = t[1];
; 457  : 		}
; 458  : 		if (i >= 3)
; 459  : 		{
; 460  : 			*(stateStr + i*columnCount + j + 2) = t[2];
; 461  : 		}
; 462  : 		*/
; 463  : 	}

  000b9	eb 98		 jmp	 SHORT $LN5@ShiftRowSt
$LN7@ShiftRowSt:

; 464  : 	return;
; 465  : }

  000bb	52		 push	 edx
  000bc	8b cd		 mov	 ecx, ebp
  000be	50		 push	 eax
  000bf	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@ShiftRowSt
  000c5	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ca	58		 pop	 eax
  000cb	5a		 pop	 edx
  000cc	5f		 pop	 edi
  000cd	5e		 pop	 esi
  000ce	5b		 pop	 ebx
  000cf	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d2	33 cd		 xor	 ecx, ebp
  000d4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d9	81 c4 04 01 00
	00		 add	 esp, 260		; 00000104H
  000df	3b ec		 cmp	 ebp, esp
  000e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c3		 ret	 0
  000ea	8b ff		 npad	 2
$LN11@ShiftRowSt:
  000ec	01 00 00 00	 DD	 1
  000f0	00 00 00 00	 DD	 $LN10@ShiftRowSt
$LN10@ShiftRowSt:
  000f4	d8 ff ff ff	 DD	 -40			; ffffffd8H
  000f8	08 00 00 00	 DD	 8
  000fc	00 00 00 00	 DD	 $LN9@ShiftRowSt
$LN9@ShiftRowSt:
  00100	74		 DB	 116			; 00000074H
  00101	6d		 DB	 109			; 0000006dH
  00102	70		 DB	 112			; 00000070H
  00103	00		 DB	 0
_ShiftRowStr ENDP
_TEXT	ENDS
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CopyString
_TEXT	SEGMENT
tv71 = -196						; size = 4
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_srcLen$ = 16						; size = 4
_CopyString PROC					; COMDAT

; 317  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 318  : 	if ((NULL != dest) && (NULL != src))

  0001e	83 7d 08 00	 cmp	 DWORD PTR _dest$[ebp], 0
  00022	74 5c		 je	 SHORT $LN5@CopyString
  00024	83 7d 0c 00	 cmp	 DWORD PTR _src$[ebp], 0
  00028	74 56		 je	 SHORT $LN5@CopyString

; 319  : 	{
; 320  : 		if (srcLen <= 0)

  0002a	83 7d 10 00	 cmp	 DWORD PTR _srcLen$[ebp], 0
  0002e	77 0f		 ja	 SHORT $LN2@CopyString

; 321  : 		{
; 322  : 			srcLen = strlen(src);

  00030	8b 45 0c	 mov	 eax, DWORD PTR _src$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 _strlen
  00039	83 c4 04	 add	 esp, 4
  0003c	89 45 10	 mov	 DWORD PTR _srcLen$[ebp], eax
$LN2@CopyString:

; 323  : 		}
; 324  : 		while (srcLen-- >0)

  0003f	8b 45 10	 mov	 eax, DWORD PTR _srcLen$[ebp]
  00042	8b 4d 10	 mov	 ecx, DWORD PTR _srcLen$[ebp]
  00045	83 e9 01	 sub	 ecx, 1
  00048	89 4d 10	 mov	 DWORD PTR _srcLen$[ebp], ecx
  0004b	85 c0		 test	 eax, eax
  0004d	76 0c		 jbe	 SHORT $LN7@CopyString
  0004f	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv71[ebp], 1
  00059	eb 0a		 jmp	 SHORT $LN8@CopyString
$LN7@CopyString:
  0005b	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv71[ebp], 0
$LN8@CopyString:
  00065	83 bd 3c ff ff
	ff 00		 cmp	 DWORD PTR tv71[ebp], 0
  0006c	74 12		 je	 SHORT $LN5@CopyString

; 325  : 		{
; 326  : 			dest[srcLen] = src[srcLen];

  0006e	8b 45 08	 mov	 eax, DWORD PTR _dest$[ebp]
  00071	03 45 10	 add	 eax, DWORD PTR _srcLen$[ebp]
  00074	8b 4d 0c	 mov	 ecx, DWORD PTR _src$[ebp]
  00077	03 4d 10	 add	 ecx, DWORD PTR _srcLen$[ebp]
  0007a	8a 11		 mov	 dl, BYTE PTR [ecx]
  0007c	88 10		 mov	 BYTE PTR [eax], dl

; 327  : 		}

  0007e	eb bf		 jmp	 SHORT $LN2@CopyString
$LN5@CopyString:

; 328  : 	}
; 329  : }

  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00089	3b ec		 cmp	 ebp, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c3		 ret	 0
_CopyString ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _MixColumn
_TEXT	SEGMENT
_r$ = -20						; size = 4
_i$ = -8						; size = 4
_context$ = 8						; size = 4
_state$ = 12						; size = 4
_MixColumn PROC						; COMDAT

; 626  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 627  : 	unsigned int i;
; 628  : 	unsigned char* r;
; 629  : 	for (i = 0; i<context->nb; i++)

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN3@MixColumn
$LN2@MixColumn:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN3@MixColumn:
  00030	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00036	3b 88 08 02 00
	00		 cmp	 ecx, DWORD PTR [eax+520]
  0003c	73 1e		 jae	 SHORT $LN4@MixColumn

; 630  : 	{
; 631  : 		r = (unsigned char*)&state[i];

  0003e	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00044	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00047	89 55 ec	 mov	 DWORD PTR _r$[ebp], edx

; 632  : 		MixColumnStr(context,r);

  0004a	8b 45 ec	 mov	 eax, DWORD PTR _r$[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 _MixColumnStr
  00057	83 c4 08	 add	 esp, 8

; 633  : 	}

  0005a	eb cb		 jmp	 SHORT $LN2@MixColumn
$LN4@MixColumn:

; 634  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00065	3b ec		 cmp	 ebp, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
_MixColumn ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _MixColumnStr
_TEXT	SEGMENT
_c$ = -29						; size = 1
_b$ = -20						; size = 4
_a$ = -8						; size = 4
_context$ = 8						; size = 4
_r$ = 12						; size = 4
_MixColumnStr PROC					; COMDAT

; 528  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 529  : 	//r的拷贝
; 530  : 	unsigned char a[4];
; 531  : 	//r * 0x2的伽罗瓦域计算
; 532  : 	unsigned char b[4];
; 533  : 	unsigned char c;
; 534  : 	//unsigned char h;
; 535  : 	
; 536  : 	//a[n] ^ b[n] is element n multiplied by 3 in Rijndael's Galois field */ 
; 537  : 	for(c=0; c<4; c++) 

  0001e	c6 45 e3 00	 mov	 BYTE PTR _c$[ebp], 0
  00022	eb 08		 jmp	 SHORT $LN3@MixColumnS
$LN2@MixColumnS:
  00024	8a 45 e3	 mov	 al, BYTE PTR _c$[ebp]
  00027	04 01		 add	 al, 1
  00029	88 45 e3	 mov	 BYTE PTR _c$[ebp], al
$LN3@MixColumnS:
  0002c	0f b6 45 e3	 movzx	 eax, BYTE PTR _c$[ebp]
  00030	83 f8 04	 cmp	 eax, 4
  00033	7d 3f		 jge	 SHORT $LN1@MixColumnS

; 538  : 	{
; 539  : 		a[c] = r[c];

  00035	0f b6 45 e3	 movzx	 eax, BYTE PTR _c$[ebp]
  00039	0f b6 4d e3	 movzx	 ecx, BYTE PTR _c$[ebp]
  0003d	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  00040	8a 04 02	 mov	 al, BYTE PTR [edx+eax]
  00043	88 44 0d f8	 mov	 BYTE PTR _a$[ebp+ecx], al

; 540  : 		//这行代码代替下面所有的代码
; 541  : 		//依据的规则是任何数与0异或其值不变
; 542  : 		b[c] = XTIME(r[c]);

  00047	0f b6 45 e3	 movzx	 eax, BYTE PTR _c$[ebp]
  0004b	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0004e	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  00052	d1 e2		 shl	 edx, 1
  00054	0f b6 45 e3	 movzx	 eax, BYTE PTR _c$[ebp]
  00058	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0005b	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  0005f	c1 f8 07	 sar	 eax, 7
  00062	83 e0 01	 and	 eax, 1
  00065	6b c0 1b	 imul	 eax, 27			; 0000001bH
  00068	33 d0		 xor	 edx, eax
  0006a	0f b6 4d e3	 movzx	 ecx, BYTE PTR _c$[ebp]
  0006e	88 54 0d ec	 mov	 BYTE PTR _b$[ebp+ecx], dl

; 543  : 		/*
; 544  : 		h = r[c] & 0x80;
; 545  : 		b[c] = r[c] << 1;
; 546  : 		if(h == 0x80) 
; 547  : 		{
; 548  : 			b[c] ^= 0x1b;
; 549  : 		}*/
; 550  : 	}

  00072	eb b0		 jmp	 SHORT $LN2@MixColumnS
$LN1@MixColumnS:

; 551  : 	//0x01、0x02、0x03、0x09、0x0b、0x0d 和 0x0e 来相乘
; 552  : 	//由于GF(256)域的值永远在0-255之间，所以获取2,3,9,b,d,e的
; 553  : 	//GF域值时可以通过查表法的
; 554  : 	//其实是一个矩阵c(x) = x^4 + 1 = 3*x^3 + 2*x^2 + x + 1
; 555  : 	//他的逆运算为c^-1(x)=11*x^3 + 13*x^2 + 9*x + 14
; 556  : 	//换成矩阵则是
; 557  : 	/*
; 558  : 	 * [2 3 1 1] [a0]   
; 559  : 	 * [1 2 3 1] [a1]
; 560  : 	 * [1 1 2 3] [a2]
; 561  : 	 * [3 1 1 2] [a3]
; 562  : 	 * b0 = 2 * a0 + a3 + a2 + 3 * a1
; 563  : 	 * b1 = 2 * a1 + a0 + a3 + 3 * a2
; 564  : 	 * b2 = 2 * a2 + a1 + a0 + 3 * a3
; 565  : 	 * b3 = 2 * a3 + a2 + a1 + 3 * a0
; 566  : 	 * 这里最高只有乘以3，即（x+1)=(2+1)因此b[]只要保存r[]*2的值即可
; 567  : 	 * b[1] ^ a[1] = 3 * a[1]
; 568  : 	 */
; 569  : 	/* 2 * a0 + a3 + a2 + 3 * a1 */
; 570  : 	r[0] = b[0] ^ a[3] ^ a[2] ^ b[1] ^ a[1]; 

  00074	0f b6 45 ec	 movzx	 eax, BYTE PTR _b$[ebp]
  00078	0f b6 4d fb	 movzx	 ecx, BYTE PTR _a$[ebp+3]
  0007c	33 c1		 xor	 eax, ecx
  0007e	0f b6 55 fa	 movzx	 edx, BYTE PTR _a$[ebp+2]
  00082	33 c2		 xor	 eax, edx
  00084	0f b6 4d ed	 movzx	 ecx, BYTE PTR _b$[ebp+1]
  00088	33 c1		 xor	 eax, ecx
  0008a	0f b6 55 f9	 movzx	 edx, BYTE PTR _a$[ebp+1]
  0008e	33 c2		 xor	 eax, edx
  00090	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  00093	88 01		 mov	 BYTE PTR [ecx], al

; 571  : 	/* 2 * a1 + a0 + a3 + 3 * a2 */
; 572  : 	r[1] = b[1] ^ a[0] ^ a[3] ^ b[2] ^ a[2];

  00095	0f b6 45 ed	 movzx	 eax, BYTE PTR _b$[ebp+1]
  00099	0f b6 4d f8	 movzx	 ecx, BYTE PTR _a$[ebp]
  0009d	33 c1		 xor	 eax, ecx
  0009f	0f b6 55 fb	 movzx	 edx, BYTE PTR _a$[ebp+3]
  000a3	33 c2		 xor	 eax, edx
  000a5	0f b6 4d ee	 movzx	 ecx, BYTE PTR _b$[ebp+2]
  000a9	33 c1		 xor	 eax, ecx
  000ab	0f b6 55 fa	 movzx	 edx, BYTE PTR _a$[ebp+2]
  000af	33 c2		 xor	 eax, edx
  000b1	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  000b4	88 41 01	 mov	 BYTE PTR [ecx+1], al

; 573  : 	/* 2 * a2 + a1 + a0 + 3 * a3 */
; 574  : 	r[2] = b[2] ^ a[1] ^ a[0] ^ b[3] ^ a[3];

  000b7	0f b6 45 ee	 movzx	 eax, BYTE PTR _b$[ebp+2]
  000bb	0f b6 4d f9	 movzx	 ecx, BYTE PTR _a$[ebp+1]
  000bf	33 c1		 xor	 eax, ecx
  000c1	0f b6 55 f8	 movzx	 edx, BYTE PTR _a$[ebp]
  000c5	33 c2		 xor	 eax, edx
  000c7	0f b6 4d ef	 movzx	 ecx, BYTE PTR _b$[ebp+3]
  000cb	33 c1		 xor	 eax, ecx
  000cd	0f b6 55 fb	 movzx	 edx, BYTE PTR _a$[ebp+3]
  000d1	33 c2		 xor	 eax, edx
  000d3	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  000d6	88 41 02	 mov	 BYTE PTR [ecx+2], al

; 575  : 	/* 2 * a3 + a2 + a1 + 3 * a0 */
; 576  : 	r[3] = b[3] ^ a[2] ^ a[1] ^ b[0] ^ a[0];

  000d9	0f b6 45 ef	 movzx	 eax, BYTE PTR _b$[ebp+3]
  000dd	0f b6 4d fa	 movzx	 ecx, BYTE PTR _a$[ebp+2]
  000e1	33 c1		 xor	 eax, ecx
  000e3	0f b6 55 f9	 movzx	 edx, BYTE PTR _a$[ebp+1]
  000e7	33 c2		 xor	 eax, edx
  000e9	0f b6 4d ec	 movzx	 ecx, BYTE PTR _b$[ebp]
  000ed	33 c1		 xor	 eax, ecx
  000ef	0f b6 55 f8	 movzx	 edx, BYTE PTR _a$[ebp]
  000f3	33 c2		 xor	 eax, edx
  000f5	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  000f8	88 41 03	 mov	 BYTE PTR [ecx+3], al

; 577  : }

  000fb	52		 push	 edx
  000fc	8b cd		 mov	 ecx, ebp
  000fe	50		 push	 eax
  000ff	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@MixColumnS
  00105	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0010a	58		 pop	 eax
  0010b	5a		 pop	 edx
  0010c	5f		 pop	 edi
  0010d	5e		 pop	 esi
  0010e	5b		 pop	 ebx
  0010f	8b e5		 mov	 esp, ebp
  00111	5d		 pop	 ebp
  00112	c3		 ret	 0
  00113	90		 npad	 1
$LN9@MixColumnS:
  00114	02 00 00 00	 DD	 2
  00118	00 00 00 00	 DD	 $LN8@MixColumnS
$LN8@MixColumnS:
  0011c	f8 ff ff ff	 DD	 -8			; fffffff8H
  00120	04 00 00 00	 DD	 4
  00124	00 00 00 00	 DD	 $LN6@MixColumnS
  00128	ec ff ff ff	 DD	 -20			; ffffffecH
  0012c	04 00 00 00	 DD	 4
  00130	00 00 00 00	 DD	 $LN7@MixColumnS
$LN7@MixColumnS:
  00134	62		 DB	 98			; 00000062H
  00135	00		 DB	 0
$LN6@MixColumnS:
  00136	61		 DB	 97			; 00000061H
  00137	00		 DB	 0
_MixColumnStr ENDP
_TEXT	ENDS
PUBLIC	_RijndaelDecrypt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _RijndaelDecrypt
_TEXT	SEGMENT
_plainSize$ = -20					; size = 4
_i$ = -8						; size = 4
_context$ = 8						; size = 4
_pInput$ = 12						; size = 4
_nSize$ = 16						; size = 4
_pOutput$ = 20						; size = 4
_RijndaelDecrypt PROC					; COMDAT

; 823  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 824  : 	unsigned int i;
; 825  : 	//需要计算的最小长度
; 826  : 	unsigned int plainSize = context->plainSize;

  0001e	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00021	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00024	89 4d ec	 mov	 DWORD PTR _plainSize$[ebp], ecx

; 827  : 	if (nSize % plainSize != 0)

  00027	8b 45 10	 mov	 eax, DWORD PTR _nSize$[ebp]
  0002a	33 d2		 xor	 edx, edx
  0002c	f7 75 ec	 div	 DWORD PTR _plainSize$[ebp]
  0002f	85 d2		 test	 edx, edx
  00031	74 32		 je	 SHORT $LN4@RijndaelDe

; 828  : 	{
; 829  : 		nSize += plainSize - (nSize % plainSize);

  00033	8b 45 10	 mov	 eax, DWORD PTR _nSize$[ebp]
  00036	33 d2		 xor	 edx, edx
  00038	f7 75 ec	 div	 DWORD PTR _plainSize$[ebp]
  0003b	8b 45 ec	 mov	 eax, DWORD PTR _plainSize$[ebp]
  0003e	2b c2		 sub	 eax, edx
  00040	03 45 10	 add	 eax, DWORD PTR _nSize$[ebp]
  00043	89 45 10	 mov	 DWORD PTR _nSize$[ebp], eax

; 830  : 		//清0
; 831  : 		memset((unsigned char*)pOutput + nSize,0,plainSize - (nSize % plainSize));

  00046	8b 45 10	 mov	 eax, DWORD PTR _nSize$[ebp]
  00049	33 d2		 xor	 edx, edx
  0004b	f7 75 ec	 div	 DWORD PTR _plainSize$[ebp]
  0004e	8b 45 ec	 mov	 eax, DWORD PTR _plainSize$[ebp]
  00051	2b c2		 sub	 eax, edx
  00053	50		 push	 eax
  00054	6a 00		 push	 0
  00056	8b 4d 14	 mov	 ecx, DWORD PTR _pOutput$[ebp]
  00059	03 4d 10	 add	 ecx, DWORD PTR _nSize$[ebp]
  0005c	51		 push	 ecx
  0005d	e8 00 00 00 00	 call	 _memset
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@RijndaelDe:

; 832  : 	}
; 833  : 	for (i=0; i<nSize; i += plainSize)

  00065	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0006c	eb 09		 jmp	 SHORT $LN3@RijndaelDe
$LN2@RijndaelDe:
  0006e	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00071	03 45 ec	 add	 eax, DWORD PTR _plainSize$[ebp]
  00074	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN3@RijndaelDe:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0007a	3b 45 10	 cmp	 eax, DWORD PTR _nSize$[ebp]
  0007d	73 2f		 jae	 SHORT $LN5@RijndaelDe

; 834  : 	{
; 835  : 		memcpy((unsigned char*)pOutput + i,(unsigned char*)pInput + i,plainSize);

  0007f	8b 45 ec	 mov	 eax, DWORD PTR _plainSize$[ebp]
  00082	50		 push	 eax
  00083	8b 4d 0c	 mov	 ecx, DWORD PTR _pInput$[ebp]
  00086	03 4d f8	 add	 ecx, DWORD PTR _i$[ebp]
  00089	51		 push	 ecx
  0008a	8b 55 14	 mov	 edx, DWORD PTR _pOutput$[ebp]
  0008d	03 55 f8	 add	 edx, DWORD PTR _i$[ebp]
  00090	52		 push	 edx
  00091	e8 00 00 00 00	 call	 _memcpy
  00096	83 c4 0c	 add	 esp, 12			; 0000000cH

; 836  : 		Decrypt(context,(unsigned char*)pOutput + i);

  00099	8b 45 14	 mov	 eax, DWORD PTR _pOutput$[ebp]
  0009c	03 45 f8	 add	 eax, DWORD PTR _i$[ebp]
  0009f	50		 push	 eax
  000a0	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  000a3	51		 push	 ecx
  000a4	e8 00 00 00 00	 call	 _Decrypt
  000a9	83 c4 08	 add	 esp, 8

; 837  : 	}

  000ac	eb c0		 jmp	 SHORT $LN2@RijndaelDe
$LN5@RijndaelDe:

; 838  : }

  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx
  000b1	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000b7	3b ec		 cmp	 ebp, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c3		 ret	 0
_RijndaelDecrypt ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _Decrypt
_TEXT	SEGMENT
_nb$ = -76						; size = 4
_inputStringPtr$ = -64					; size = 4
_state$ = -52						; size = 32
_round$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_context$ = 8						; size = 4
_input$ = 12						; size = 4
_Decrypt PROC						; COMDAT

; 749  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd f0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-272]
  00012	b9 44 00 00 00	 mov	 ecx, 68			; 00000044H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 750  : 	int round;
; 751  : 	//明文的最大长度
; 752  : 	unsigned long state[8] = {0};

  00028	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _state$[ebp], 0
  0002f	33 c0		 xor	 eax, eax
  00031	89 45 d0	 mov	 DWORD PTR _state$[ebp+4], eax
  00034	89 45 d4	 mov	 DWORD PTR _state$[ebp+8], eax
  00037	89 45 d8	 mov	 DWORD PTR _state$[ebp+12], eax
  0003a	89 45 dc	 mov	 DWORD PTR _state$[ebp+16], eax
  0003d	89 45 e0	 mov	 DWORD PTR _state$[ebp+20], eax
  00040	89 45 e4	 mov	 DWORD PTR _state$[ebp+24], eax
  00043	89 45 e8	 mov	 DWORD PTR _state$[ebp+28], eax

; 753  : 	unsigned char* inputStringPtr = (unsigned char*)input;

  00046	8b 45 0c	 mov	 eax, DWORD PTR _input$[ebp]
  00049	89 45 c0	 mov	 DWORD PTR _inputStringPtr$[ebp], eax

; 754  : 	unsigned int nb = context->nb;

  0004c	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  0004f	8b 88 08 02 00
	00		 mov	 ecx, DWORD PTR [eax+520]
  00055	89 4d b4	 mov	 DWORD PTR _nb$[ebp], ecx

; 755  : 	state[0] = GETINT32(inputStringPtr,0,nb);

  00058	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  0005b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0005e	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00061	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00064	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  00067	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  0006a	c1 e0 10	 shl	 eax, 16			; 00000010H
  0006d	0b c8		 or	 ecx, eax
  0006f	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  00072	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00075	0f b6 14 50	 movzx	 edx, BYTE PTR [eax+edx*2]
  00079	c1 e2 08	 shl	 edx, 8
  0007c	0b ca		 or	 ecx, edx
  0007e	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  00081	6b c0 03	 imul	 eax, 3
  00084	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00087	0f b6 04 02	 movzx	 eax, BYTE PTR [edx+eax]
  0008b	0b c8		 or	 ecx, eax
  0008d	89 4d cc	 mov	 DWORD PTR _state$[ebp], ecx

; 756  : 	state[1] = GETINT32(inputStringPtr,1,nb);

  00090	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00093	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00097	c1 e1 18	 shl	 ecx, 24			; 00000018H
  0009a	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  0009d	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  000a0	0f b6 42 01	 movzx	 eax, BYTE PTR [edx+1]
  000a4	c1 e0 10	 shl	 eax, 16			; 00000010H
  000a7	0b c8		 or	 ecx, eax
  000a9	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  000ac	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  000af	0f b6 54 50 01	 movzx	 edx, BYTE PTR [eax+edx*2+1]
  000b4	c1 e2 08	 shl	 edx, 8
  000b7	0b ca		 or	 ecx, edx
  000b9	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  000bc	6b c0 03	 imul	 eax, 3
  000bf	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  000c2	0f b6 44 02 01	 movzx	 eax, BYTE PTR [edx+eax+1]
  000c7	0b c8		 or	 ecx, eax
  000c9	89 4d d0	 mov	 DWORD PTR _state$[ebp+4], ecx

; 757  : 	state[2] = GETINT32(inputStringPtr,2,nb);

  000cc	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  000cf	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  000d3	c1 e1 18	 shl	 ecx, 24			; 00000018H
  000d6	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  000d9	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  000dc	0f b6 42 02	 movzx	 eax, BYTE PTR [edx+2]
  000e0	c1 e0 10	 shl	 eax, 16			; 00000010H
  000e3	0b c8		 or	 ecx, eax
  000e5	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  000e8	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  000eb	0f b6 54 50 02	 movzx	 edx, BYTE PTR [eax+edx*2+2]
  000f0	c1 e2 08	 shl	 edx, 8
  000f3	0b ca		 or	 ecx, edx
  000f5	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  000f8	6b c0 03	 imul	 eax, 3
  000fb	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  000fe	0f b6 44 02 02	 movzx	 eax, BYTE PTR [edx+eax+2]
  00103	0b c8		 or	 ecx, eax
  00105	89 4d d4	 mov	 DWORD PTR _state$[ebp+8], ecx

; 758  : 	state[3] = GETINT32(inputStringPtr,3,nb);

  00108	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  0010b	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  0010f	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00112	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00115	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  00118	0f b6 42 03	 movzx	 eax, BYTE PTR [edx+3]
  0011c	c1 e0 10	 shl	 eax, 16			; 00000010H
  0011f	0b c8		 or	 ecx, eax
  00121	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  00124	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00127	0f b6 54 50 03	 movzx	 edx, BYTE PTR [eax+edx*2+3]
  0012c	c1 e2 08	 shl	 edx, 8
  0012f	0b ca		 or	 ecx, edx
  00131	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  00134	6b c0 03	 imul	 eax, 3
  00137	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  0013a	0f b6 44 02 03	 movzx	 eax, BYTE PTR [edx+eax+3]
  0013f	0b c8		 or	 ecx, eax
  00141	89 4d d8	 mov	 DWORD PTR _state$[ebp+12], ecx

; 759  : 	if (nb >= (KeySize_192/4))

  00144	83 7d b4 06	 cmp	 DWORD PTR _nb$[ebp], 6
  00148	72 78		 jb	 SHORT $LN5@Decrypt

; 760  : 	{
; 761  : 		state[4] = GETINT32(inputStringPtr,4,nb);

  0014a	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  0014d	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00151	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00154	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00157	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  0015a	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0015e	c1 e0 10	 shl	 eax, 16			; 00000010H
  00161	0b c8		 or	 ecx, eax
  00163	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  00166	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00169	0f b6 54 50 04	 movzx	 edx, BYTE PTR [eax+edx*2+4]
  0016e	c1 e2 08	 shl	 edx, 8
  00171	0b ca		 or	 ecx, edx
  00173	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  00176	6b c0 03	 imul	 eax, 3
  00179	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  0017c	0f b6 44 02 04	 movzx	 eax, BYTE PTR [edx+eax+4]
  00181	0b c8		 or	 ecx, eax
  00183	89 4d dc	 mov	 DWORD PTR _state$[ebp+16], ecx

; 762  : 		state[5] = GETINT32(inputStringPtr,5,nb);

  00186	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00189	0f b6 48 05	 movzx	 ecx, BYTE PTR [eax+5]
  0018d	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00190	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00193	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  00196	0f b6 42 05	 movzx	 eax, BYTE PTR [edx+5]
  0019a	c1 e0 10	 shl	 eax, 16			; 00000010H
  0019d	0b c8		 or	 ecx, eax
  0019f	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  001a2	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  001a5	0f b6 54 50 05	 movzx	 edx, BYTE PTR [eax+edx*2+5]
  001aa	c1 e2 08	 shl	 edx, 8
  001ad	0b ca		 or	 ecx, edx
  001af	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  001b2	6b c0 03	 imul	 eax, 3
  001b5	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  001b8	0f b6 44 02 05	 movzx	 eax, BYTE PTR [edx+eax+5]
  001bd	0b c8		 or	 ecx, eax
  001bf	89 4d e0	 mov	 DWORD PTR _state$[ebp+20], ecx
$LN5@Decrypt:

; 763  : 	}
; 764  : 
; 765  : 	if (nb >= (KeySize_256/4))

  001c2	83 7d b4 08	 cmp	 DWORD PTR _nb$[ebp], 8
  001c6	72 78		 jb	 SHORT $LN4@Decrypt

; 766  : 	{
; 767  : 		state[6] = GETINT32(inputStringPtr,6,nb);

  001c8	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  001cb	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  001cf	c1 e1 18	 shl	 ecx, 24			; 00000018H
  001d2	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  001d5	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  001d8	0f b6 42 06	 movzx	 eax, BYTE PTR [edx+6]
  001dc	c1 e0 10	 shl	 eax, 16			; 00000010H
  001df	0b c8		 or	 ecx, eax
  001e1	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  001e4	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  001e7	0f b6 54 50 06	 movzx	 edx, BYTE PTR [eax+edx*2+6]
  001ec	c1 e2 08	 shl	 edx, 8
  001ef	0b ca		 or	 ecx, edx
  001f1	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  001f4	6b c0 03	 imul	 eax, 3
  001f7	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  001fa	0f b6 44 02 06	 movzx	 eax, BYTE PTR [edx+eax+6]
  001ff	0b c8		 or	 ecx, eax
  00201	89 4d e4	 mov	 DWORD PTR _state$[ebp+24], ecx

; 768  : 		state[7] = GETINT32(inputStringPtr,7,nb);

  00204	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00207	0f b6 48 07	 movzx	 ecx, BYTE PTR [eax+7]
  0020b	c1 e1 18	 shl	 ecx, 24			; 00000018H
  0020e	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00211	03 55 b4	 add	 edx, DWORD PTR _nb$[ebp]
  00214	0f b6 42 07	 movzx	 eax, BYTE PTR [edx+7]
  00218	c1 e0 10	 shl	 eax, 16			; 00000010H
  0021b	0b c8		 or	 ecx, eax
  0021d	8b 55 b4	 mov	 edx, DWORD PTR _nb$[ebp]
  00220	8b 45 c0	 mov	 eax, DWORD PTR _inputStringPtr$[ebp]
  00223	0f b6 54 50 07	 movzx	 edx, BYTE PTR [eax+edx*2+7]
  00228	c1 e2 08	 shl	 edx, 8
  0022b	0b ca		 or	 ecx, edx
  0022d	8b 45 b4	 mov	 eax, DWORD PTR _nb$[ebp]
  00230	6b c0 03	 imul	 eax, 3
  00233	8b 55 c0	 mov	 edx, DWORD PTR _inputStringPtr$[ebp]
  00236	0f b6 44 02 07	 movzx	 eax, BYTE PTR [edx+eax+7]
  0023b	0b c8		 or	 ecx, eax
  0023d	89 4d e8	 mov	 DWORD PTR _state$[ebp+28], ecx
$LN4@Decrypt:

; 769  : 	}
; 770  : 	InvAddRoundKey(context,context->nr,state);

  00240	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  00243	50		 push	 eax
  00244	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  00247	8b 91 0c 02 00
	00		 mov	 edx, DWORD PTR [ecx+524]
  0024d	52		 push	 edx
  0024e	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00251	50		 push	 eax
  00252	e8 00 00 00 00	 call	 _InvAddRoundKey
  00257	83 c4 0c	 add	 esp, 12			; 0000000cH

; 771  : 	InvShiftRow(context,state);

  0025a	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  0025d	50		 push	 eax
  0025e	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  00261	51		 push	 ecx
  00262	e8 00 00 00 00	 call	 _InvShiftRow
  00267	83 c4 08	 add	 esp, 8

; 772  : 	InvSubByte(context,state);

  0026a	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  0026d	50		 push	 eax
  0026e	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  00271	51		 push	 ecx
  00272	e8 00 00 00 00	 call	 _InvSubByte
  00277	83 c4 08	 add	 esp, 8

; 773  : 	for (round = (context->nr-1); round > 0; round--)

  0027a	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  0027d	8b 88 0c 02 00
	00		 mov	 ecx, DWORD PTR [eax+524]
  00283	83 e9 01	 sub	 ecx, 1
  00286	89 4d f4	 mov	 DWORD PTR _round$[ebp], ecx
  00289	eb 09		 jmp	 SHORT $LN3@Decrypt
$LN2@Decrypt:
  0028b	8b 45 f4	 mov	 eax, DWORD PTR _round$[ebp]
  0028e	83 e8 01	 sub	 eax, 1
  00291	89 45 f4	 mov	 DWORD PTR _round$[ebp], eax
$LN3@Decrypt:
  00294	83 7d f4 00	 cmp	 DWORD PTR _round$[ebp], 0
  00298	7e 46		 jle	 SHORT $LN1@Decrypt

; 774  : 	{
; 775  : 		InvAddRoundKey(context,round,state);

  0029a	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  0029d	50		 push	 eax
  0029e	8b 4d f4	 mov	 ecx, DWORD PTR _round$[ebp]
  002a1	51		 push	 ecx
  002a2	8b 55 08	 mov	 edx, DWORD PTR _context$[ebp]
  002a5	52		 push	 edx
  002a6	e8 00 00 00 00	 call	 _InvAddRoundKey
  002ab	83 c4 0c	 add	 esp, 12			; 0000000cH

; 776  : 		InvMixColumn(context,state);

  002ae	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  002b1	50		 push	 eax
  002b2	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  002b5	51		 push	 ecx
  002b6	e8 00 00 00 00	 call	 _InvMixColumn
  002bb	83 c4 08	 add	 esp, 8

; 777  : 		InvShiftRow(context,state);

  002be	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  002c1	50		 push	 eax
  002c2	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  002c5	51		 push	 ecx
  002c6	e8 00 00 00 00	 call	 _InvShiftRow
  002cb	83 c4 08	 add	 esp, 8

; 778  : 		InvSubByte(context,state);

  002ce	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  002d1	50		 push	 eax
  002d2	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 _InvSubByte
  002db	83 c4 08	 add	 esp, 8

; 779  : 	}

  002de	eb ab		 jmp	 SHORT $LN2@Decrypt
$LN1@Decrypt:

; 780  : 	InvAddRoundKey(context,0,state);

  002e0	8d 45 cc	 lea	 eax, DWORD PTR _state$[ebp]
  002e3	50		 push	 eax
  002e4	6a 00		 push	 0
  002e6	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  002e9	51		 push	 ecx
  002ea	e8 00 00 00 00	 call	 _InvAddRoundKey
  002ef	83 c4 0c	 add	 esp, 12			; 0000000cH

; 781  : 	StateToChars((unsigned char*)input,state,context->nb);

  002f2	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  002f5	8b 88 08 02 00
	00		 mov	 ecx, DWORD PTR [eax+520]
  002fb	51		 push	 ecx
  002fc	8d 55 cc	 lea	 edx, DWORD PTR _state$[ebp]
  002ff	52		 push	 edx
  00300	8b 45 0c	 mov	 eax, DWORD PTR _input$[ebp]
  00303	50		 push	 eax
  00304	e8 00 00 00 00	 call	 _StateToChars
  00309	83 c4 0c	 add	 esp, 12			; 0000000cH

; 782  : }

  0030c	52		 push	 edx
  0030d	8b cd		 mov	 ecx, ebp
  0030f	50		 push	 eax
  00310	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@Decrypt
  00316	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0031b	58		 pop	 eax
  0031c	5a		 pop	 edx
  0031d	5f		 pop	 edi
  0031e	5e		 pop	 esi
  0031f	5b		 pop	 ebx
  00320	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00323	33 cd		 xor	 ecx, ebp
  00325	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0032a	81 c4 10 01 00
	00		 add	 esp, 272		; 00000110H
  00330	3b ec		 cmp	 ebp, esp
  00332	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00337	8b e5		 mov	 esp, ebp
  00339	5d		 pop	 ebp
  0033a	c3		 ret	 0
  0033b	90		 npad	 1
$LN10@Decrypt:
  0033c	01 00 00 00	 DD	 1
  00340	00 00 00 00	 DD	 $LN9@Decrypt
$LN9@Decrypt:
  00344	cc ff ff ff	 DD	 -52			; ffffffccH
  00348	20 00 00 00	 DD	 32			; 00000020H
  0034c	00 00 00 00	 DD	 $LN8@Decrypt
$LN8@Decrypt:
  00350	73		 DB	 115			; 00000073H
  00351	74		 DB	 116			; 00000074H
  00352	61		 DB	 97			; 00000061H
  00353	74		 DB	 116			; 00000074H
  00354	65		 DB	 101			; 00000065H
  00355	00		 DB	 0
_Decrypt ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _InvAddRoundKey
_TEXT	SEGMENT
_i$ = -8						; size = 4
_context$ = 8						; size = 4
_round$ = 12						; size = 4
_state$ = 16						; size = 4
_InvAddRoundKey PROC					; COMDAT

; 371  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 372  : 	unsigned int i;
; 373  : 	//只是与roundkey做异或运算
; 374  : 	for (i=0; i<context->nb; i++)

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN3@InvAddRoun
$LN2@InvAddRoun:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN3@InvAddRoun:
  00030	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00036	3b 88 08 02 00
	00		 cmp	 ecx, DWORD PTR [eax+520]
  0003c	73 2b		 jae	 SHORT $LN4@InvAddRoun

; 375  : 	{
; 376  : 		state[i] = context->roundKey[round * context->nb + i] ^ state[i];

  0003e	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _round$[ebp]
  00044	0f af 88 08 02
	00 00		 imul	 ecx, DWORD PTR [eax+520]
  0004b	03 4d f8	 add	 ecx, DWORD PTR _i$[ebp]
  0004e	8b 55 08	 mov	 edx, DWORD PTR _context$[ebp]
  00051	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00054	8b 75 10	 mov	 esi, DWORD PTR _state$[ebp]
  00057	8b 4c 8a 28	 mov	 ecx, DWORD PTR [edx+ecx*4+40]
  0005b	33 0c 86	 xor	 ecx, DWORD PTR [esi+eax*4]
  0005e	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  00061	8b 45 10	 mov	 eax, DWORD PTR _state$[ebp]
  00064	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx

; 377  : 	}

  00067	eb be		 jmp	 SHORT $LN2@InvAddRoun
$LN4@InvAddRoun:

; 378  : }

  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
_InvAddRoundKey ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _InvSubByte
_TEXT	SEGMENT
_i$ = -8						; size = 4
_context$ = 8						; size = 4
_state$ = 12						; size = 4
_InvSubByte PROC					; COMDAT

; 409  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 410  : 	unsigned int i;
; 411  : 	for (i=0; i<context->nb; i++)

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN3@InvSubByte
$LN2@InvSubByte:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN3@InvSubByte:
  00030	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00036	3b 88 08 02 00
	00		 cmp	 ecx, DWORD PTR [eax+520]
  0003c	73 7e		 jae	 SHORT $LN4@InvSubByte

; 412  : 	{
; 413  : 		state[i] = INVSUBBYTE(state[i]);

  0003e	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00044	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00047	c1 ea 18	 shr	 edx, 24			; 00000018H
  0004a	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  00050	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR _rbox[edx]
  00057	c1 e0 18	 shl	 eax, 24			; 00000018H
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  0005d	8b 55 0c	 mov	 edx, DWORD PTR _state$[ebp]
  00060	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  00063	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00066	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0006c	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR _rbox[ecx]
  00073	c1 e2 10	 shl	 edx, 16			; 00000010H
  00076	0b c2		 or	 eax, edx
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  0007b	8b 55 0c	 mov	 edx, DWORD PTR _state$[ebp]
  0007e	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  00081	c1 e9 08	 shr	 ecx, 8
  00084	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0008a	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR _rbox[ecx]
  00091	c1 e2 08	 shl	 edx, 8
  00094	0b c2		 or	 eax, edx
  00096	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00099	8b 55 0c	 mov	 edx, DWORD PTR _state$[ebp]
  0009c	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  0009f	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  000a5	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR _rbox[ecx]
  000ac	0b c2		 or	 eax, edx
  000ae	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  000b1	8b 55 0c	 mov	 edx, DWORD PTR _state$[ebp]
  000b4	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 414  : 	}

  000b7	e9 6b ff ff ff	 jmp	 $LN2@InvSubByte
$LN4@InvSubByte:

; 415  : }

  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
_InvSubByte ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _InvShiftRow
_TEXT	SEGMENT
_stateCount$ = -20					; size = 4
_stateStr$ = -8						; size = 4
_context$ = 8						; size = 4
_state$ = 12						; size = 4
_InvShiftRow PROC					; COMDAT

; 520  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 521  : 	unsigned char* stateStr = (unsigned char*)state;

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _state$[ebp]
  00021	89 45 f8	 mov	 DWORD PTR _stateStr$[ebp], eax

; 522  : 	unsigned int stateCount = context->plainSize;

  00024	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00027	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0002a	89 4d ec	 mov	 DWORD PTR _stateCount$[ebp], ecx

; 523  : 	InvShiftRowStr(stateStr,stateCount);

  0002d	8b 45 ec	 mov	 eax, DWORD PTR _stateCount$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f8	 mov	 ecx, DWORD PTR _stateStr$[ebp]
  00034	51		 push	 ecx
  00035	e8 00 00 00 00	 call	 _InvShiftRowStr
  0003a	83 c4 08	 add	 esp, 8

; 524  : }

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
_InvShiftRow ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _InvShiftRowStr
_TEXT	SEGMENT
_columnCount$ = -64					; size = 4
_lineCount$ = -52					; size = 4
_tmp$ = -40						; size = 8
_j$ = -24						; size = 4
_i$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_stateStr$ = 8						; size = 4
_count$ = 12						; size = 4
_InvShiftRowStr PROC					; COMDAT

; 476  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd fc fe ff
	ff		 lea	 edi, DWORD PTR [ebp-260]
  00012	b9 41 00 00 00	 mov	 ecx, 65			; 00000041H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 477  : 	int i,j;
; 478  : 	unsigned char tmp[8] = {0};

  00028	c6 45 d8 00	 mov	 BYTE PTR _tmp$[ebp], 0
  0002c	33 c0		 xor	 eax, eax
  0002e	89 45 d9	 mov	 DWORD PTR _tmp$[ebp+1], eax
  00031	66 89 45 dd	 mov	 WORD PTR _tmp$[ebp+5], ax
  00035	88 45 df	 mov	 BYTE PTR _tmp$[ebp+7], al

; 479  : 	int lineCount = 4;

  00038	c7 45 cc 04 00
	00 00		 mov	 DWORD PTR _lineCount$[ebp], 4

; 480  : 	//列数
; 481  : 	int columnCount = count / lineCount;

  0003f	8b 45 0c	 mov	 eax, DWORD PTR _count$[ebp]
  00042	33 d2		 xor	 edx, edx
  00044	f7 75 cc	 div	 DWORD PTR _lineCount$[ebp]
  00047	89 45 c0	 mov	 DWORD PTR _columnCount$[ebp], eax

; 482  : 	//从1行开始移位
; 483  : 	for (i=1; i<lineCount; i++)

  0004a	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _i$[ebp], 1
  00051	eb 09		 jmp	 SHORT $LN6@InvShiftRo
$LN5@InvShiftRo:
  00053	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax
$LN6@InvShiftRo:
  0005c	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  0005f	3b 45 cc	 cmp	 eax, DWORD PTR _lineCount$[ebp]
  00062	7d 5a		 jge	 SHORT $LN7@InvShiftRo

; 484  : 	{
; 485  : 		CopyString(tmp,(char*)(stateStr + i*columnCount),columnCount);

  00064	8b 45 c0	 mov	 eax, DWORD PTR _columnCount$[ebp]
  00067	50		 push	 eax
  00068	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  0006b	0f af 4d c0	 imul	 ecx, DWORD PTR _columnCount$[ebp]
  0006f	03 4d 08	 add	 ecx, DWORD PTR _stateStr$[ebp]
  00072	51		 push	 ecx
  00073	8d 55 d8	 lea	 edx, DWORD PTR _tmp$[ebp]
  00076	52		 push	 edx
  00077	e8 00 00 00 00	 call	 _CopyString
  0007c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 486  : 		for (j=(columnCount-1); j>=0; j--)

  0007f	8b 45 c0	 mov	 eax, DWORD PTR _columnCount$[ebp]
  00082	83 e8 01	 sub	 eax, 1
  00085	89 45 e8	 mov	 DWORD PTR _j$[ebp], eax
  00088	eb 09		 jmp	 SHORT $LN3@InvShiftRo
$LN2@InvShiftRo:
  0008a	8b 45 e8	 mov	 eax, DWORD PTR _j$[ebp]
  0008d	83 e8 01	 sub	 eax, 1
  00090	89 45 e8	 mov	 DWORD PTR _j$[ebp], eax
$LN3@InvShiftRo:
  00093	83 7d e8 00	 cmp	 DWORD PTR _j$[ebp], 0
  00097	7c 23		 jl	 SHORT $LN1@InvShiftRo

; 487  : 		{
; 488  : 			//k = j - i;
; 489  : 			//k = (k < 0) ? columnCount+k : k;
; 490  : 			*(stateStr + i*columnCount + j) = tmp[(j-i+columnCount)%columnCount];

  00099	8b 45 e8	 mov	 eax, DWORD PTR _j$[ebp]
  0009c	2b 45 f4	 sub	 eax, DWORD PTR _i$[ebp]
  0009f	03 45 c0	 add	 eax, DWORD PTR _columnCount$[ebp]
  000a2	99		 cdq
  000a3	f7 7d c0	 idiv	 DWORD PTR _columnCount$[ebp]
  000a6	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  000a9	0f af 45 c0	 imul	 eax, DWORD PTR _columnCount$[ebp]
  000ad	03 45 08	 add	 eax, DWORD PTR _stateStr$[ebp]
  000b0	8b 4d e8	 mov	 ecx, DWORD PTR _j$[ebp]
  000b3	8a 54 15 d8	 mov	 dl, BYTE PTR _tmp$[ebp+edx]
  000b7	88 14 08	 mov	 BYTE PTR [eax+ecx], dl

; 491  : 		}

  000ba	eb ce		 jmp	 SHORT $LN2@InvShiftRo
$LN1@InvShiftRo:

; 492  : 		/*
; 493  : 		t[0] = *(stateStr + i*columnCount + columnCount - 1);
; 494  : 		t[1] = *(stateStr + i*columnCount + columnCount - 2);
; 495  : 		t[2] = *(stateStr + i*columnCount + columnCount - 3);
; 496  : 		for (j=(columnCount-1);j>=i; j--)
; 497  : 		{
; 498  : 			//第几行就移几位
; 499  : 			*(stateStr + i*columnCount + j) = *(stateStr + i*columnCount + j - i);
; 500  : 		}
; 501  : 		//用3个if语句代替for，提高性能
; 502  : 		if (i >= 1)
; 503  : 		{
; 504  : 			*(stateStr + i*columnCount + j) = t[0];
; 505  : 		}
; 506  : 		if (i >= 2)
; 507  : 		{
; 508  : 			*(stateStr + i*columnCount + j + 1) = t[1];
; 509  : 		}
; 510  : 		if (i >= 3)
; 511  : 		{
; 512  : 			*(stateStr + i*columnCount + j + 2) = t[2];
; 513  : 		}
; 514  : 		*/
; 515  : 	}

  000bc	eb 95		 jmp	 SHORT $LN5@InvShiftRo
$LN7@InvShiftRo:

; 516  : 	return;
; 517  : }

  000be	52		 push	 edx
  000bf	8b cd		 mov	 ecx, ebp
  000c1	50		 push	 eax
  000c2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@InvShiftRo
  000c8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000cd	58		 pop	 eax
  000ce	5a		 pop	 edx
  000cf	5f		 pop	 edi
  000d0	5e		 pop	 esi
  000d1	5b		 pop	 ebx
  000d2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d5	33 cd		 xor	 ecx, ebp
  000d7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000dc	81 c4 04 01 00
	00		 add	 esp, 260		; 00000104H
  000e2	3b ec		 cmp	 ebp, esp
  000e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c3		 ret	 0
  000ed	8d 49 00	 npad	 3
$LN11@InvShiftRo:
  000f0	01 00 00 00	 DD	 1
  000f4	00 00 00 00	 DD	 $LN10@InvShiftRo
$LN10@InvShiftRo:
  000f8	d8 ff ff ff	 DD	 -40			; ffffffd8H
  000fc	08 00 00 00	 DD	 8
  00100	00 00 00 00	 DD	 $LN9@InvShiftRo
$LN9@InvShiftRo:
  00104	74		 DB	 116			; 00000074H
  00105	6d		 DB	 109			; 0000006dH
  00106	70		 DB	 112			; 00000070H
  00107	00		 DB	 0
_InvShiftRowStr ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _InvMixColumn
_TEXT	SEGMENT
_r$ = -20						; size = 4
_i$ = -8						; size = 4
_context$ = 8						; size = 4
_state$ = 12						; size = 4
_InvMixColumn PROC					; COMDAT

; 637  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 638  : 	unsigned int i;
; 639  : 	unsigned char* r;
; 640  : 	for (i = 0; i<context->nb; i++)

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN3@InvMixColu
$LN2@InvMixColu:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN3@InvMixColu:
  00030	8b 45 08	 mov	 eax, DWORD PTR _context$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00036	3b 88 08 02 00
	00		 cmp	 ecx, DWORD PTR [eax+520]
  0003c	73 1e		 jae	 SHORT $LN4@InvMixColu

; 641  : 	{
; 642  : 		r = (unsigned char*)&state[i];

  0003e	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _state$[ebp]
  00044	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  00047	89 55 ec	 mov	 DWORD PTR _r$[ebp], edx

; 643  : 		InvMixColumnStr(context,r);

  0004a	8b 45 ec	 mov	 eax, DWORD PTR _r$[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _context$[ebp]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 _InvMixColumnStr
  00057	83 c4 08	 add	 esp, 8

; 644  : 	}

  0005a	eb cb		 jmp	 SHORT $LN2@InvMixColu
$LN4@InvMixColu:

; 645  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00065	3b ec		 cmp	 ebp, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
_InvMixColumn ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _InvMixColumnStr
_TEXT	SEGMENT
tv9356 = -324						; size = 4
tv9326 = -324						; size = 4
tv9296 = -324						; size = 4
tv9266 = -324						; size = 4
tv9354 = -320						; size = 4
tv9324 = -320						; size = 4
tv9294 = -320						; size = 4
tv9264 = -320						; size = 4
tv9352 = -316						; size = 4
tv9322 = -316						; size = 4
tv9292 = -316						; size = 4
tv9262 = -316						; size = 4
tv9350 = -312						; size = 4
tv9320 = -312						; size = 4
tv9290 = -312						; size = 4
tv9260 = -312						; size = 4
tv9348 = -308						; size = 4
tv9318 = -308						; size = 4
tv9288 = -308						; size = 4
tv9258 = -308						; size = 4
tv9346 = -304						; size = 4
tv9316 = -304						; size = 4
tv9286 = -304						; size = 4
tv9256 = -304						; size = 4
tv9344 = -300						; size = 4
tv9314 = -300						; size = 4
tv9284 = -300						; size = 4
tv9254 = -300						; size = 4
tv9342 = -296						; size = 4
tv9312 = -296						; size = 4
tv9282 = -296						; size = 4
tv9252 = -296						; size = 4
tv9340 = -292						; size = 4
tv9310 = -292						; size = 4
tv9280 = -292						; size = 4
tv9250 = -292						; size = 4
tv9338 = -288						; size = 4
tv9308 = -288						; size = 4
tv9278 = -288						; size = 4
tv9248 = -288						; size = 4
tv9336 = -284						; size = 4
tv9306 = -284						; size = 4
tv9276 = -284						; size = 4
tv9246 = -284						; size = 4
tv9334 = -280						; size = 4
tv9304 = -280						; size = 4
tv9274 = -280						; size = 4
tv9244 = -280						; size = 4
tv9332 = -276						; size = 4
tv9302 = -276						; size = 4
tv9272 = -276						; size = 4
tv9242 = -276						; size = 4
tv9330 = -272						; size = 4
tv9300 = -272						; size = 4
tv9270 = -272						; size = 4
tv9240 = -272						; size = 4
tv9328 = -268						; size = 4
tv9298 = -268						; size = 4
tv9268 = -268						; size = 4
tv9238 = -268						; size = 4
_c$ = -65						; size = 1
_te$ = -56						; size = 4
_td$ = -44						; size = 4
_tb$ = -32						; size = 4
_t9$ = -20						; size = 4
_a$ = -8						; size = 4
_context$ = 8						; size = 4
_r$ = 12						; size = 4
_InvMixColumnStr PROC					; COMDAT

; 580  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd bc fe ff
	ff		 lea	 edi, DWORD PTR [ebp-324]
  00012	b9 51 00 00 00	 mov	 ecx, 81			; 00000051H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 581  : 	//r的拷贝
; 582  : 	unsigned char a[4];
; 583  : 	//r * 0x2的伽罗瓦域计算
; 584  : 	unsigned char t9[4];//*0x9
; 585  : 	unsigned char tb[4];//*0xb
; 586  : 	unsigned char td[4];//*0xd
; 587  : 	unsigned char te[4];//*0xe
; 588  : 	unsigned char c;
; 589  : 	//unsigned char h;
; 590  : 	
; 591  : 	//a[n] ^ b[n] is element n multiplied by 3 in Rijndael's Galois field */ 
; 592  : 	//0x09、0x0b、0x0d 和 0x0e
; 593  : 	for(c=0; c<4; c++) 

  0001e	c6 45 bf 00	 mov	 BYTE PTR _c$[ebp], 0
  00022	eb 08		 jmp	 SHORT $LN3@InvMixColu@2
$LN2@InvMixColu@2:
  00024	8a 45 bf	 mov	 al, BYTE PTR _c$[ebp]
  00027	04 01		 add	 al, 1
  00029	88 45 bf	 mov	 BYTE PTR _c$[ebp], al
$LN3@InvMixColu@2:
  0002c	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00030	83 f8 04	 cmp	 eax, 4
  00033	0f 8d 7e 61 00
	00		 jge	 $LN1@InvMixColu@2

; 594  : 	{
; 595  : 		a[c] = r[c];

  00039	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0003d	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  00041	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  00044	8a 04 02	 mov	 al, BYTE PTR [edx+eax]
  00047	88 44 0d f8	 mov	 BYTE PTR _a$[ebp+ecx], al

; 596  : 		//这行代码代替下面所有的代码
; 597  : 		//依据的规则是任何数与0异或其值不变
; 598  : 		t9[c] = MULTIPLY(r[c],0x9);

  0004b	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0004f	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  00052	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  00056	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0005a	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0005d	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  00061	d1 e0		 shl	 eax, 1
  00063	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  00067	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0006a	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0006e	c1 f9 07	 sar	 ecx, 7
  00071	83 e1 01	 and	 ecx, 1
  00074	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00077	33 c1		 xor	 eax, ecx
  00079	6b c0 00	 imul	 eax, 0
  0007c	33 d0		 xor	 edx, eax
  0007e	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00082	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  00085	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  00089	d1 e0		 shl	 eax, 1
  0008b	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0008f	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00092	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  00096	c1 f9 07	 sar	 ecx, 7
  00099	83 e1 01	 and	 ecx, 1
  0009c	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0009f	33 c1		 xor	 eax, ecx
  000a1	d1 e0		 shl	 eax, 1
  000a3	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  000a7	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  000aa	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  000ae	d1 e1		 shl	 ecx, 1
  000b0	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  000b4	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  000b7	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  000bb	c1 fe 07	 sar	 esi, 7
  000be	83 e6 01	 and	 esi, 1
  000c1	6b f6 1b	 imul	 esi, 27			; 0000001bH
  000c4	33 ce		 xor	 ecx, esi
  000c6	c1 f9 07	 sar	 ecx, 7
  000c9	83 e1 01	 and	 ecx, 1
  000cc	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  000cf	33 c1		 xor	 eax, ecx
  000d1	6b c0 00	 imul	 eax, 0
  000d4	33 d0		 xor	 edx, eax
  000d6	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  000da	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  000dd	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  000e1	d1 e0		 shl	 eax, 1
  000e3	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  000e7	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  000ea	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  000ee	c1 f9 07	 sar	 ecx, 7
  000f1	83 e1 01	 and	 ecx, 1
  000f4	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  000f7	33 c1		 xor	 eax, ecx
  000f9	d1 e0		 shl	 eax, 1
  000fb	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  000ff	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00102	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  00106	d1 e1		 shl	 ecx, 1
  00108	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0010c	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0010f	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00113	c1 fe 07	 sar	 esi, 7
  00116	83 e6 01	 and	 esi, 1
  00119	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0011c	33 ce		 xor	 ecx, esi
  0011e	c1 f9 07	 sar	 ecx, 7
  00121	83 e1 01	 and	 ecx, 1
  00124	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00127	33 c1		 xor	 eax, ecx
  00129	d1 e0		 shl	 eax, 1
  0012b	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0012f	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00132	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  00136	d1 e1		 shl	 ecx, 1
  00138	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0013c	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0013f	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00143	c1 fe 07	 sar	 esi, 7
  00146	83 e6 01	 and	 esi, 1
  00149	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0014c	33 ce		 xor	 ecx, esi
  0014e	d1 e1		 shl	 ecx, 1
  00150	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00154	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00157	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0015b	d1 e6		 shl	 esi, 1
  0015d	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00161	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00164	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00168	c1 ff 07	 sar	 edi, 7
  0016b	83 e7 01	 and	 edi, 1
  0016e	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00171	33 f7		 xor	 esi, edi
  00173	c1 fe 07	 sar	 esi, 7
  00176	83 e6 01	 and	 esi, 1
  00179	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0017c	33 ce		 xor	 ecx, esi
  0017e	c1 f9 07	 sar	 ecx, 7
  00181	83 e1 01	 and	 ecx, 1
  00184	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00187	33 c1		 xor	 eax, ecx
  00189	33 d0		 xor	 edx, eax
  0018b	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0018f	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  00192	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  00196	d1 e0		 shl	 eax, 1
  00198	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0019c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0019f	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  001a3	c1 f9 07	 sar	 ecx, 7
  001a6	83 e1 01	 and	 ecx, 1
  001a9	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  001ac	33 c1		 xor	 eax, ecx
  001ae	d1 e0		 shl	 eax, 1
  001b0	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  001b4	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  001b7	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  001bb	d1 e1		 shl	 ecx, 1
  001bd	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  001c1	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  001c4	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  001c8	c1 fe 07	 sar	 esi, 7
  001cb	83 e6 01	 and	 esi, 1
  001ce	6b f6 1b	 imul	 esi, 27			; 0000001bH
  001d1	33 ce		 xor	 ecx, esi
  001d3	c1 f9 07	 sar	 ecx, 7
  001d6	83 e1 01	 and	 ecx, 1
  001d9	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  001dc	33 c1		 xor	 eax, ecx
  001de	d1 e0		 shl	 eax, 1
  001e0	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  001e4	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  001e7	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  001eb	d1 e1		 shl	 ecx, 1
  001ed	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  001f1	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  001f4	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  001f8	c1 fe 07	 sar	 esi, 7
  001fb	83 e6 01	 and	 esi, 1
  001fe	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00201	33 ce		 xor	 ecx, esi
  00203	d1 e1		 shl	 ecx, 1
  00205	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00209	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0020c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00210	d1 e6		 shl	 esi, 1
  00212	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00216	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00219	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0021d	c1 ff 07	 sar	 edi, 7
  00220	83 e7 01	 and	 edi, 1
  00223	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00226	33 f7		 xor	 esi, edi
  00228	c1 fe 07	 sar	 esi, 7
  0022b	83 e6 01	 and	 esi, 1
  0022e	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00231	33 ce		 xor	 ecx, esi
  00233	c1 f9 07	 sar	 ecx, 7
  00236	83 e1 01	 and	 ecx, 1
  00239	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0023c	33 c1		 xor	 eax, ecx
  0023e	d1 e0		 shl	 eax, 1
  00240	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  00244	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00247	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0024b	d1 e1		 shl	 ecx, 1
  0024d	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00251	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00254	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00258	c1 fe 07	 sar	 esi, 7
  0025b	83 e6 01	 and	 esi, 1
  0025e	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00261	33 ce		 xor	 ecx, esi
  00263	d1 e1		 shl	 ecx, 1
  00265	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00269	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0026c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00270	d1 e6		 shl	 esi, 1
  00272	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00276	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00279	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0027d	c1 ff 07	 sar	 edi, 7
  00280	83 e7 01	 and	 edi, 1
  00283	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00286	33 f7		 xor	 esi, edi
  00288	c1 fe 07	 sar	 esi, 7
  0028b	83 e6 01	 and	 esi, 1
  0028e	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00291	33 ce		 xor	 ecx, esi
  00293	d1 e1		 shl	 ecx, 1
  00295	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00299	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0029c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  002a0	d1 e6		 shl	 esi, 1
  002a2	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  002a6	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  002a9	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  002ad	c1 ff 07	 sar	 edi, 7
  002b0	83 e7 01	 and	 edi, 1
  002b3	6b ff 1b	 imul	 edi, 27			; 0000001bH
  002b6	33 f7		 xor	 esi, edi
  002b8	d1 e6		 shl	 esi, 1
  002ba	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  002be	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  002c1	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  002c5	d1 e7		 shl	 edi, 1
  002c7	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  002cb	89 95 f4 fe ff
	ff		 mov	 DWORD PTR tv9238[ebp], edx
  002d1	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  002d4	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  002d8	c1 fa 07	 sar	 edx, 7
  002db	83 e2 01	 and	 edx, 1
  002de	6b d2 1b	 imul	 edx, 27			; 0000001bH
  002e1	33 fa		 xor	 edi, edx
  002e3	c1 ff 07	 sar	 edi, 7
  002e6	83 e7 01	 and	 edi, 1
  002e9	6b ff 1b	 imul	 edi, 27			; 0000001bH
  002ec	33 f7		 xor	 esi, edi
  002ee	c1 fe 07	 sar	 esi, 7
  002f1	83 e6 01	 and	 esi, 1
  002f4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  002f7	33 ce		 xor	 ecx, esi
  002f9	c1 f9 07	 sar	 ecx, 7
  002fc	83 e1 01	 and	 ecx, 1
  002ff	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00302	33 c1		 xor	 eax, ecx
  00304	6b c0 00	 imul	 eax, 0
  00307	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv9238[ebp]
  0030d	33 c8		 xor	 ecx, eax
  0030f	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  00313	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  00316	0f b6 14 10	 movzx	 edx, BYTE PTR [eax+edx]
  0031a	d1 e2		 shl	 edx, 1
  0031c	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00320	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00323	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  00327	c1 f8 07	 sar	 eax, 7
  0032a	83 e0 01	 and	 eax, 1
  0032d	6b c0 1b	 imul	 eax, 27			; 0000001bH
  00330	33 d0		 xor	 edx, eax
  00332	d1 e2		 shl	 edx, 1
  00334	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00338	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0033b	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  0033f	d1 e0		 shl	 eax, 1
  00341	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00345	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00348	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0034c	c1 fe 07	 sar	 esi, 7
  0034f	83 e6 01	 and	 esi, 1
  00352	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00355	33 c6		 xor	 eax, esi
  00357	c1 f8 07	 sar	 eax, 7
  0035a	83 e0 01	 and	 eax, 1
  0035d	6b c0 1b	 imul	 eax, 27			; 0000001bH
  00360	33 d0		 xor	 edx, eax
  00362	d1 e2		 shl	 edx, 1
  00364	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00368	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0036b	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  0036f	d1 e0		 shl	 eax, 1
  00371	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00375	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00378	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0037c	c1 fe 07	 sar	 esi, 7
  0037f	83 e6 01	 and	 esi, 1
  00382	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00385	33 c6		 xor	 eax, esi
  00387	d1 e0		 shl	 eax, 1
  00389	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0038d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00390	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00394	d1 e6		 shl	 esi, 1
  00396	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0039a	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0039d	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  003a1	c1 ff 07	 sar	 edi, 7
  003a4	83 e7 01	 and	 edi, 1
  003a7	6b ff 1b	 imul	 edi, 27			; 0000001bH
  003aa	33 f7		 xor	 esi, edi
  003ac	c1 fe 07	 sar	 esi, 7
  003af	83 e6 01	 and	 esi, 1
  003b2	6b f6 1b	 imul	 esi, 27			; 0000001bH
  003b5	33 c6		 xor	 eax, esi
  003b7	c1 f8 07	 sar	 eax, 7
  003ba	83 e0 01	 and	 eax, 1
  003bd	6b c0 1b	 imul	 eax, 27			; 0000001bH
  003c0	33 d0		 xor	 edx, eax
  003c2	d1 e2		 shl	 edx, 1
  003c4	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  003c8	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  003cb	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  003cf	d1 e0		 shl	 eax, 1
  003d1	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  003d5	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  003d8	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  003dc	c1 fe 07	 sar	 esi, 7
  003df	83 e6 01	 and	 esi, 1
  003e2	6b f6 1b	 imul	 esi, 27			; 0000001bH
  003e5	33 c6		 xor	 eax, esi
  003e7	d1 e0		 shl	 eax, 1
  003e9	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  003ed	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  003f0	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  003f4	d1 e6		 shl	 esi, 1
  003f6	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  003fa	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  003fd	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00401	c1 ff 07	 sar	 edi, 7
  00404	83 e7 01	 and	 edi, 1
  00407	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0040a	33 f7		 xor	 esi, edi
  0040c	c1 fe 07	 sar	 esi, 7
  0040f	83 e6 01	 and	 esi, 1
  00412	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00415	33 c6		 xor	 eax, esi
  00417	d1 e0		 shl	 eax, 1
  00419	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0041d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00420	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00424	d1 e6		 shl	 esi, 1
  00426	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0042a	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0042d	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00431	c1 ff 07	 sar	 edi, 7
  00434	83 e7 01	 and	 edi, 1
  00437	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0043a	33 f7		 xor	 esi, edi
  0043c	d1 e6		 shl	 esi, 1
  0043e	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00442	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00445	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00449	d1 e7		 shl	 edi, 1
  0044b	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  0044f	89 8d f0 fe ff
	ff		 mov	 DWORD PTR tv9240[ebp], ecx
  00455	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  00458	0f b6 0c 19	 movzx	 ecx, BYTE PTR [ecx+ebx]
  0045c	c1 f9 07	 sar	 ecx, 7
  0045f	83 e1 01	 and	 ecx, 1
  00462	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00465	33 f9		 xor	 edi, ecx
  00467	c1 ff 07	 sar	 edi, 7
  0046a	83 e7 01	 and	 edi, 1
  0046d	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00470	33 f7		 xor	 esi, edi
  00472	c1 fe 07	 sar	 esi, 7
  00475	83 e6 01	 and	 esi, 1
  00478	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0047b	33 c6		 xor	 eax, esi
  0047d	c1 f8 07	 sar	 eax, 7
  00480	83 e0 01	 and	 eax, 1
  00483	6b c0 1b	 imul	 eax, 27			; 0000001bH
  00486	33 d0		 xor	 edx, eax
  00488	d1 e2		 shl	 edx, 1
  0048a	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0048e	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  00491	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  00495	d1 e0		 shl	 eax, 1
  00497	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0049b	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0049e	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  004a2	c1 f9 07	 sar	 ecx, 7
  004a5	83 e1 01	 and	 ecx, 1
  004a8	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  004ab	33 c1		 xor	 eax, ecx
  004ad	d1 e0		 shl	 eax, 1
  004af	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  004b3	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  004b6	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  004ba	d1 e1		 shl	 ecx, 1
  004bc	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  004c0	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  004c3	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  004c7	c1 fe 07	 sar	 esi, 7
  004ca	83 e6 01	 and	 esi, 1
  004cd	6b f6 1b	 imul	 esi, 27			; 0000001bH
  004d0	33 ce		 xor	 ecx, esi
  004d2	c1 f9 07	 sar	 ecx, 7
  004d5	83 e1 01	 and	 ecx, 1
  004d8	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  004db	33 c1		 xor	 eax, ecx
  004dd	d1 e0		 shl	 eax, 1
  004df	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  004e3	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  004e6	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  004ea	d1 e1		 shl	 ecx, 1
  004ec	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  004f0	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  004f3	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  004f7	c1 fe 07	 sar	 esi, 7
  004fa	83 e6 01	 and	 esi, 1
  004fd	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00500	33 ce		 xor	 ecx, esi
  00502	d1 e1		 shl	 ecx, 1
  00504	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00508	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0050b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0050f	d1 e6		 shl	 esi, 1
  00511	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00515	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00518	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0051c	c1 ff 07	 sar	 edi, 7
  0051f	83 e7 01	 and	 edi, 1
  00522	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00525	33 f7		 xor	 esi, edi
  00527	c1 fe 07	 sar	 esi, 7
  0052a	83 e6 01	 and	 esi, 1
  0052d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00530	33 ce		 xor	 ecx, esi
  00532	c1 f9 07	 sar	 ecx, 7
  00535	83 e1 01	 and	 ecx, 1
  00538	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0053b	33 c1		 xor	 eax, ecx
  0053d	d1 e0		 shl	 eax, 1
  0053f	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  00543	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00546	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0054a	d1 e1		 shl	 ecx, 1
  0054c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00550	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00553	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00557	c1 fe 07	 sar	 esi, 7
  0055a	83 e6 01	 and	 esi, 1
  0055d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00560	33 ce		 xor	 ecx, esi
  00562	d1 e1		 shl	 ecx, 1
  00564	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00568	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0056b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0056f	d1 e6		 shl	 esi, 1
  00571	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00575	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00578	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0057c	c1 ff 07	 sar	 edi, 7
  0057f	83 e7 01	 and	 edi, 1
  00582	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00585	33 f7		 xor	 esi, edi
  00587	c1 fe 07	 sar	 esi, 7
  0058a	83 e6 01	 and	 esi, 1
  0058d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00590	33 ce		 xor	 ecx, esi
  00592	d1 e1		 shl	 ecx, 1
  00594	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00598	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0059b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0059f	d1 e6		 shl	 esi, 1
  005a1	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  005a5	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  005a8	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  005ac	c1 ff 07	 sar	 edi, 7
  005af	83 e7 01	 and	 edi, 1
  005b2	6b ff 1b	 imul	 edi, 27			; 0000001bH
  005b5	33 f7		 xor	 esi, edi
  005b7	d1 e6		 shl	 esi, 1
  005b9	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  005bd	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  005c0	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  005c4	d1 e7		 shl	 edi, 1
  005c6	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  005ca	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv9242[ebp], edx
  005d0	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  005d3	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  005d7	c1 fa 07	 sar	 edx, 7
  005da	83 e2 01	 and	 edx, 1
  005dd	6b d2 1b	 imul	 edx, 27			; 0000001bH
  005e0	33 fa		 xor	 edi, edx
  005e2	c1 ff 07	 sar	 edi, 7
  005e5	83 e7 01	 and	 edi, 1
  005e8	6b ff 1b	 imul	 edi, 27			; 0000001bH
  005eb	33 f7		 xor	 esi, edi
  005ed	c1 fe 07	 sar	 esi, 7
  005f0	83 e6 01	 and	 esi, 1
  005f3	6b f6 1b	 imul	 esi, 27			; 0000001bH
  005f6	33 ce		 xor	 ecx, esi
  005f8	c1 f9 07	 sar	 ecx, 7
  005fb	83 e1 01	 and	 ecx, 1
  005fe	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00601	33 c1		 xor	 eax, ecx
  00603	c1 f8 07	 sar	 eax, 7
  00606	83 e0 01	 and	 eax, 1
  00609	6b c0 1b	 imul	 eax, 27			; 0000001bH
  0060c	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR tv9242[ebp]
  00612	33 c8		 xor	 ecx, eax
  00614	6b c9 00	 imul	 ecx, 0
  00617	8b 95 f0 fe ff
	ff		 mov	 edx, DWORD PTR tv9240[ebp]
  0061d	33 d1		 xor	 edx, ecx
  0061f	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00623	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  00626	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  0062a	d1 e0		 shl	 eax, 1
  0062c	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  00630	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00633	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  00637	c1 f9 07	 sar	 ecx, 7
  0063a	83 e1 01	 and	 ecx, 1
  0063d	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00640	33 c1		 xor	 eax, ecx
  00642	d1 e0		 shl	 eax, 1
  00644	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  00648	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0064b	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0064f	d1 e1		 shl	 ecx, 1
  00651	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00655	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00658	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0065c	c1 fe 07	 sar	 esi, 7
  0065f	83 e6 01	 and	 esi, 1
  00662	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00665	33 ce		 xor	 ecx, esi
  00667	c1 f9 07	 sar	 ecx, 7
  0066a	83 e1 01	 and	 ecx, 1
  0066d	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00670	33 c1		 xor	 eax, ecx
  00672	d1 e0		 shl	 eax, 1
  00674	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  00678	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0067b	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0067f	d1 e1		 shl	 ecx, 1
  00681	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00685	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00688	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0068c	c1 fe 07	 sar	 esi, 7
  0068f	83 e6 01	 and	 esi, 1
  00692	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00695	33 ce		 xor	 ecx, esi
  00697	d1 e1		 shl	 ecx, 1
  00699	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0069d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  006a0	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  006a4	d1 e6		 shl	 esi, 1
  006a6	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  006aa	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  006ad	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  006b1	c1 ff 07	 sar	 edi, 7
  006b4	83 e7 01	 and	 edi, 1
  006b7	6b ff 1b	 imul	 edi, 27			; 0000001bH
  006ba	33 f7		 xor	 esi, edi
  006bc	c1 fe 07	 sar	 esi, 7
  006bf	83 e6 01	 and	 esi, 1
  006c2	6b f6 1b	 imul	 esi, 27			; 0000001bH
  006c5	33 ce		 xor	 ecx, esi
  006c7	c1 f9 07	 sar	 ecx, 7
  006ca	83 e1 01	 and	 ecx, 1
  006cd	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  006d0	33 c1		 xor	 eax, ecx
  006d2	d1 e0		 shl	 eax, 1
  006d4	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  006d8	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  006db	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  006df	d1 e1		 shl	 ecx, 1
  006e1	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  006e5	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  006e8	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  006ec	c1 fe 07	 sar	 esi, 7
  006ef	83 e6 01	 and	 esi, 1
  006f2	6b f6 1b	 imul	 esi, 27			; 0000001bH
  006f5	33 ce		 xor	 ecx, esi
  006f7	d1 e1		 shl	 ecx, 1
  006f9	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  006fd	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00700	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00704	d1 e6		 shl	 esi, 1
  00706	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0070a	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0070d	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00711	c1 ff 07	 sar	 edi, 7
  00714	83 e7 01	 and	 edi, 1
  00717	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0071a	33 f7		 xor	 esi, edi
  0071c	c1 fe 07	 sar	 esi, 7
  0071f	83 e6 01	 and	 esi, 1
  00722	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00725	33 ce		 xor	 ecx, esi
  00727	d1 e1		 shl	 ecx, 1
  00729	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0072d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00730	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00734	d1 e6		 shl	 esi, 1
  00736	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0073a	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0073d	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00741	c1 ff 07	 sar	 edi, 7
  00744	83 e7 01	 and	 edi, 1
  00747	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0074a	33 f7		 xor	 esi, edi
  0074c	d1 e6		 shl	 esi, 1
  0074e	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00752	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00755	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00759	d1 e7		 shl	 edi, 1
  0075b	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  0075f	89 95 e8 fe ff
	ff		 mov	 DWORD PTR tv9244[ebp], edx
  00765	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  00768	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  0076c	c1 fa 07	 sar	 edx, 7
  0076f	83 e2 01	 and	 edx, 1
  00772	6b d2 1b	 imul	 edx, 27			; 0000001bH
  00775	33 fa		 xor	 edi, edx
  00777	c1 ff 07	 sar	 edi, 7
  0077a	83 e7 01	 and	 edi, 1
  0077d	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00780	33 f7		 xor	 esi, edi
  00782	c1 fe 07	 sar	 esi, 7
  00785	83 e6 01	 and	 esi, 1
  00788	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0078b	33 ce		 xor	 ecx, esi
  0078d	c1 f9 07	 sar	 ecx, 7
  00790	83 e1 01	 and	 ecx, 1
  00793	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00796	33 c1		 xor	 eax, ecx
  00798	d1 e0		 shl	 eax, 1
  0079a	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0079e	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  007a1	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  007a5	d1 e1		 shl	 ecx, 1
  007a7	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  007ab	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  007ae	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  007b2	c1 fa 07	 sar	 edx, 7
  007b5	83 e2 01	 and	 edx, 1
  007b8	6b d2 1b	 imul	 edx, 27			; 0000001bH
  007bb	33 ca		 xor	 ecx, edx
  007bd	d1 e1		 shl	 ecx, 1
  007bf	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  007c3	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  007c6	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  007ca	d1 e2		 shl	 edx, 1
  007cc	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  007d0	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  007d3	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  007d7	c1 fe 07	 sar	 esi, 7
  007da	83 e6 01	 and	 esi, 1
  007dd	6b f6 1b	 imul	 esi, 27			; 0000001bH
  007e0	33 d6		 xor	 edx, esi
  007e2	c1 fa 07	 sar	 edx, 7
  007e5	83 e2 01	 and	 edx, 1
  007e8	6b d2 1b	 imul	 edx, 27			; 0000001bH
  007eb	33 ca		 xor	 ecx, edx
  007ed	d1 e1		 shl	 ecx, 1
  007ef	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  007f3	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  007f6	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  007fa	d1 e2		 shl	 edx, 1
  007fc	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00800	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00803	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00807	c1 fe 07	 sar	 esi, 7
  0080a	83 e6 01	 and	 esi, 1
  0080d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00810	33 d6		 xor	 edx, esi
  00812	d1 e2		 shl	 edx, 1
  00814	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00818	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0081b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0081f	d1 e6		 shl	 esi, 1
  00821	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00825	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00828	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0082c	c1 ff 07	 sar	 edi, 7
  0082f	83 e7 01	 and	 edi, 1
  00832	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00835	33 f7		 xor	 esi, edi
  00837	c1 fe 07	 sar	 esi, 7
  0083a	83 e6 01	 and	 esi, 1
  0083d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00840	33 d6		 xor	 edx, esi
  00842	c1 fa 07	 sar	 edx, 7
  00845	83 e2 01	 and	 edx, 1
  00848	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0084b	33 ca		 xor	 ecx, edx
  0084d	d1 e1		 shl	 ecx, 1
  0084f	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  00853	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00856	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  0085a	d1 e2		 shl	 edx, 1
  0085c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00860	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00863	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00867	c1 fe 07	 sar	 esi, 7
  0086a	83 e6 01	 and	 esi, 1
  0086d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00870	33 d6		 xor	 edx, esi
  00872	d1 e2		 shl	 edx, 1
  00874	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00878	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0087b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0087f	d1 e6		 shl	 esi, 1
  00881	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00885	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00888	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0088c	c1 ff 07	 sar	 edi, 7
  0088f	83 e7 01	 and	 edi, 1
  00892	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00895	33 f7		 xor	 esi, edi
  00897	c1 fe 07	 sar	 esi, 7
  0089a	83 e6 01	 and	 esi, 1
  0089d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  008a0	33 d6		 xor	 edx, esi
  008a2	d1 e2		 shl	 edx, 1
  008a4	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  008a8	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  008ab	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  008af	d1 e6		 shl	 esi, 1
  008b1	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  008b5	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  008b8	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  008bc	c1 ff 07	 sar	 edi, 7
  008bf	83 e7 01	 and	 edi, 1
  008c2	6b ff 1b	 imul	 edi, 27			; 0000001bH
  008c5	33 f7		 xor	 esi, edi
  008c7	d1 e6		 shl	 esi, 1
  008c9	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  008cd	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  008d0	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  008d4	d1 e7		 shl	 edi, 1
  008d6	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  008da	89 85 e4 fe ff
	ff		 mov	 DWORD PTR tv9246[ebp], eax
  008e0	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  008e3	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  008e7	c1 f8 07	 sar	 eax, 7
  008ea	83 e0 01	 and	 eax, 1
  008ed	6b c0 1b	 imul	 eax, 27			; 0000001bH
  008f0	33 f8		 xor	 edi, eax
  008f2	c1 ff 07	 sar	 edi, 7
  008f5	83 e7 01	 and	 edi, 1
  008f8	6b ff 1b	 imul	 edi, 27			; 0000001bH
  008fb	33 f7		 xor	 esi, edi
  008fd	c1 fe 07	 sar	 esi, 7
  00900	83 e6 01	 and	 esi, 1
  00903	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00906	33 d6		 xor	 edx, esi
  00908	c1 fa 07	 sar	 edx, 7
  0090b	83 e2 01	 and	 edx, 1
  0090e	6b d2 1b	 imul	 edx, 27			; 0000001bH
  00911	33 ca		 xor	 ecx, edx
  00913	c1 f9 07	 sar	 ecx, 7
  00916	83 e1 01	 and	 ecx, 1
  00919	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0091c	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR tv9246[ebp]
  00922	33 d1		 xor	 edx, ecx
  00924	d1 e2		 shl	 edx, 1
  00926	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0092a	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0092d	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  00931	d1 e0		 shl	 eax, 1
  00933	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  00937	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0093a	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0093e	c1 f9 07	 sar	 ecx, 7
  00941	83 e1 01	 and	 ecx, 1
  00944	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00947	33 c1		 xor	 eax, ecx
  00949	d1 e0		 shl	 eax, 1
  0094b	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0094f	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00952	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  00956	d1 e1		 shl	 ecx, 1
  00958	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0095c	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0095f	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00963	c1 fe 07	 sar	 esi, 7
  00966	83 e6 01	 and	 esi, 1
  00969	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0096c	33 ce		 xor	 ecx, esi
  0096e	c1 f9 07	 sar	 ecx, 7
  00971	83 e1 01	 and	 ecx, 1
  00974	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00977	33 c1		 xor	 eax, ecx
  00979	d1 e0		 shl	 eax, 1
  0097b	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0097f	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00982	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  00986	d1 e1		 shl	 ecx, 1
  00988	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0098c	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0098f	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00993	c1 fe 07	 sar	 esi, 7
  00996	83 e6 01	 and	 esi, 1
  00999	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0099c	33 ce		 xor	 ecx, esi
  0099e	d1 e1		 shl	 ecx, 1
  009a0	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  009a4	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  009a7	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  009ab	d1 e6		 shl	 esi, 1
  009ad	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  009b1	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  009b4	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  009b8	c1 ff 07	 sar	 edi, 7
  009bb	83 e7 01	 and	 edi, 1
  009be	6b ff 1b	 imul	 edi, 27			; 0000001bH
  009c1	33 f7		 xor	 esi, edi
  009c3	c1 fe 07	 sar	 esi, 7
  009c6	83 e6 01	 and	 esi, 1
  009c9	6b f6 1b	 imul	 esi, 27			; 0000001bH
  009cc	33 ce		 xor	 ecx, esi
  009ce	c1 f9 07	 sar	 ecx, 7
  009d1	83 e1 01	 and	 ecx, 1
  009d4	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  009d7	33 c1		 xor	 eax, ecx
  009d9	d1 e0		 shl	 eax, 1
  009db	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  009df	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  009e2	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  009e6	d1 e1		 shl	 ecx, 1
  009e8	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  009ec	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  009ef	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  009f3	c1 fe 07	 sar	 esi, 7
  009f6	83 e6 01	 and	 esi, 1
  009f9	6b f6 1b	 imul	 esi, 27			; 0000001bH
  009fc	33 ce		 xor	 ecx, esi
  009fe	d1 e1		 shl	 ecx, 1
  00a00	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00a04	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00a07	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00a0b	d1 e6		 shl	 esi, 1
  00a0d	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00a11	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00a14	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00a18	c1 ff 07	 sar	 edi, 7
  00a1b	83 e7 01	 and	 edi, 1
  00a1e	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00a21	33 f7		 xor	 esi, edi
  00a23	c1 fe 07	 sar	 esi, 7
  00a26	83 e6 01	 and	 esi, 1
  00a29	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00a2c	33 ce		 xor	 ecx, esi
  00a2e	d1 e1		 shl	 ecx, 1
  00a30	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00a34	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00a37	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00a3b	d1 e6		 shl	 esi, 1
  00a3d	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00a41	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00a44	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00a48	c1 ff 07	 sar	 edi, 7
  00a4b	83 e7 01	 and	 edi, 1
  00a4e	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00a51	33 f7		 xor	 esi, edi
  00a53	d1 e6		 shl	 esi, 1
  00a55	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00a59	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00a5c	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00a60	d1 e7		 shl	 edi, 1
  00a62	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  00a66	89 95 e0 fe ff
	ff		 mov	 DWORD PTR tv9248[ebp], edx
  00a6c	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  00a6f	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  00a73	c1 fa 07	 sar	 edx, 7
  00a76	83 e2 01	 and	 edx, 1
  00a79	6b d2 1b	 imul	 edx, 27			; 0000001bH
  00a7c	33 fa		 xor	 edi, edx
  00a7e	c1 ff 07	 sar	 edi, 7
  00a81	83 e7 01	 and	 edi, 1
  00a84	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00a87	33 f7		 xor	 esi, edi
  00a89	c1 fe 07	 sar	 esi, 7
  00a8c	83 e6 01	 and	 esi, 1
  00a8f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00a92	33 ce		 xor	 ecx, esi
  00a94	c1 f9 07	 sar	 ecx, 7
  00a97	83 e1 01	 and	 ecx, 1
  00a9a	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00a9d	33 c1		 xor	 eax, ecx
  00a9f	d1 e0		 shl	 eax, 1
  00aa1	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  00aa5	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  00aa8	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  00aac	d1 e1		 shl	 ecx, 1
  00aae	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  00ab2	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00ab5	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  00ab9	c1 fa 07	 sar	 edx, 7
  00abc	83 e2 01	 and	 edx, 1
  00abf	6b d2 1b	 imul	 edx, 27			; 0000001bH
  00ac2	33 ca		 xor	 ecx, edx
  00ac4	d1 e1		 shl	 ecx, 1
  00ac6	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  00aca	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00acd	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  00ad1	d1 e2		 shl	 edx, 1
  00ad3	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00ad7	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00ada	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00ade	c1 fe 07	 sar	 esi, 7
  00ae1	83 e6 01	 and	 esi, 1
  00ae4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00ae7	33 d6		 xor	 edx, esi
  00ae9	c1 fa 07	 sar	 edx, 7
  00aec	83 e2 01	 and	 edx, 1
  00aef	6b d2 1b	 imul	 edx, 27			; 0000001bH
  00af2	33 ca		 xor	 ecx, edx
  00af4	d1 e1		 shl	 ecx, 1
  00af6	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  00afa	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00afd	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  00b01	d1 e2		 shl	 edx, 1
  00b03	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00b07	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00b0a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00b0e	c1 fe 07	 sar	 esi, 7
  00b11	83 e6 01	 and	 esi, 1
  00b14	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00b17	33 d6		 xor	 edx, esi
  00b19	d1 e2		 shl	 edx, 1
  00b1b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00b1f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00b22	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00b26	d1 e6		 shl	 esi, 1
  00b28	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00b2c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00b2f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00b33	c1 ff 07	 sar	 edi, 7
  00b36	83 e7 01	 and	 edi, 1
  00b39	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00b3c	33 f7		 xor	 esi, edi
  00b3e	c1 fe 07	 sar	 esi, 7
  00b41	83 e6 01	 and	 esi, 1
  00b44	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00b47	33 d6		 xor	 edx, esi
  00b49	c1 fa 07	 sar	 edx, 7
  00b4c	83 e2 01	 and	 edx, 1
  00b4f	6b d2 1b	 imul	 edx, 27			; 0000001bH
  00b52	33 ca		 xor	 ecx, edx
  00b54	d1 e1		 shl	 ecx, 1
  00b56	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  00b5a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00b5d	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  00b61	d1 e2		 shl	 edx, 1
  00b63	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00b67	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00b6a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00b6e	c1 fe 07	 sar	 esi, 7
  00b71	83 e6 01	 and	 esi, 1
  00b74	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00b77	33 d6		 xor	 edx, esi
  00b79	d1 e2		 shl	 edx, 1
  00b7b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00b7f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00b82	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00b86	d1 e6		 shl	 esi, 1
  00b88	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00b8c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00b8f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00b93	c1 ff 07	 sar	 edi, 7
  00b96	83 e7 01	 and	 edi, 1
  00b99	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00b9c	33 f7		 xor	 esi, edi
  00b9e	c1 fe 07	 sar	 esi, 7
  00ba1	83 e6 01	 and	 esi, 1
  00ba4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00ba7	33 d6		 xor	 edx, esi
  00ba9	d1 e2		 shl	 edx, 1
  00bab	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00baf	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00bb2	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00bb6	d1 e6		 shl	 esi, 1
  00bb8	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00bbc	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00bbf	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00bc3	c1 ff 07	 sar	 edi, 7
  00bc6	83 e7 01	 and	 edi, 1
  00bc9	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00bcc	33 f7		 xor	 esi, edi
  00bce	d1 e6		 shl	 esi, 1
  00bd0	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00bd4	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00bd7	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00bdb	d1 e7		 shl	 edi, 1
  00bdd	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  00be1	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv9250[ebp], eax
  00be7	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  00bea	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  00bee	c1 f8 07	 sar	 eax, 7
  00bf1	83 e0 01	 and	 eax, 1
  00bf4	6b c0 1b	 imul	 eax, 27			; 0000001bH
  00bf7	33 f8		 xor	 edi, eax
  00bf9	c1 ff 07	 sar	 edi, 7
  00bfc	83 e7 01	 and	 edi, 1
  00bff	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00c02	33 f7		 xor	 esi, edi
  00c04	c1 fe 07	 sar	 esi, 7
  00c07	83 e6 01	 and	 esi, 1
  00c0a	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00c0d	33 d6		 xor	 edx, esi
  00c0f	c1 fa 07	 sar	 edx, 7
  00c12	83 e2 01	 and	 edx, 1
  00c15	6b d2 1b	 imul	 edx, 27			; 0000001bH
  00c18	33 ca		 xor	 ecx, edx
  00c1a	c1 f9 07	 sar	 ecx, 7
  00c1d	83 e1 01	 and	 ecx, 1
  00c20	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00c23	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR tv9250[ebp]
  00c29	33 d1		 xor	 edx, ecx
  00c2b	c1 fa 07	 sar	 edx, 7
  00c2e	83 e2 01	 and	 edx, 1
  00c31	6b d2 1b	 imul	 edx, 27			; 0000001bH
  00c34	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv9248[ebp]
  00c3a	33 c2		 xor	 eax, edx
  00c3c	6b c0 00	 imul	 eax, 0
  00c3f	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR tv9244[ebp]
  00c45	33 c8		 xor	 ecx, eax
  00c47	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  00c4b	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  00c4e	0f b6 14 10	 movzx	 edx, BYTE PTR [eax+edx]
  00c52	d1 e2		 shl	 edx, 1
  00c54	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00c58	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00c5b	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  00c5f	c1 f8 07	 sar	 eax, 7
  00c62	83 e0 01	 and	 eax, 1
  00c65	6b c0 1b	 imul	 eax, 27			; 0000001bH
  00c68	33 d0		 xor	 edx, eax
  00c6a	d1 e2		 shl	 edx, 1
  00c6c	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00c70	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00c73	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  00c77	d1 e0		 shl	 eax, 1
  00c79	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00c7d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00c80	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00c84	c1 fe 07	 sar	 esi, 7
  00c87	83 e6 01	 and	 esi, 1
  00c8a	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00c8d	33 c6		 xor	 eax, esi
  00c8f	c1 f8 07	 sar	 eax, 7
  00c92	83 e0 01	 and	 eax, 1
  00c95	6b c0 1b	 imul	 eax, 27			; 0000001bH
  00c98	33 d0		 xor	 edx, eax
  00c9a	d1 e2		 shl	 edx, 1
  00c9c	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00ca0	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00ca3	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  00ca7	d1 e0		 shl	 eax, 1
  00ca9	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00cad	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00cb0	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00cb4	c1 fe 07	 sar	 esi, 7
  00cb7	83 e6 01	 and	 esi, 1
  00cba	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00cbd	33 c6		 xor	 eax, esi
  00cbf	d1 e0		 shl	 eax, 1
  00cc1	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00cc5	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00cc8	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00ccc	d1 e6		 shl	 esi, 1
  00cce	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00cd2	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00cd5	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00cd9	c1 ff 07	 sar	 edi, 7
  00cdc	83 e7 01	 and	 edi, 1
  00cdf	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00ce2	33 f7		 xor	 esi, edi
  00ce4	c1 fe 07	 sar	 esi, 7
  00ce7	83 e6 01	 and	 esi, 1
  00cea	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00ced	33 c6		 xor	 eax, esi
  00cef	c1 f8 07	 sar	 eax, 7
  00cf2	83 e0 01	 and	 eax, 1
  00cf5	6b c0 1b	 imul	 eax, 27			; 0000001bH
  00cf8	33 d0		 xor	 edx, eax
  00cfa	d1 e2		 shl	 edx, 1
  00cfc	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00d00	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00d03	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  00d07	d1 e0		 shl	 eax, 1
  00d09	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00d0d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00d10	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00d14	c1 fe 07	 sar	 esi, 7
  00d17	83 e6 01	 and	 esi, 1
  00d1a	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00d1d	33 c6		 xor	 eax, esi
  00d1f	d1 e0		 shl	 eax, 1
  00d21	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00d25	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00d28	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00d2c	d1 e6		 shl	 esi, 1
  00d2e	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00d32	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00d35	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00d39	c1 ff 07	 sar	 edi, 7
  00d3c	83 e7 01	 and	 edi, 1
  00d3f	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00d42	33 f7		 xor	 esi, edi
  00d44	c1 fe 07	 sar	 esi, 7
  00d47	83 e6 01	 and	 esi, 1
  00d4a	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00d4d	33 c6		 xor	 eax, esi
  00d4f	d1 e0		 shl	 eax, 1
  00d51	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00d55	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00d58	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00d5c	d1 e6		 shl	 esi, 1
  00d5e	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00d62	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00d65	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00d69	c1 ff 07	 sar	 edi, 7
  00d6c	83 e7 01	 and	 edi, 1
  00d6f	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00d72	33 f7		 xor	 esi, edi
  00d74	d1 e6		 shl	 esi, 1
  00d76	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00d7a	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00d7d	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00d81	d1 e7		 shl	 edi, 1
  00d83	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  00d87	89 8d d8 fe ff
	ff		 mov	 DWORD PTR tv9252[ebp], ecx
  00d8d	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  00d90	0f b6 0c 19	 movzx	 ecx, BYTE PTR [ecx+ebx]
  00d94	c1 f9 07	 sar	 ecx, 7
  00d97	83 e1 01	 and	 ecx, 1
  00d9a	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00d9d	33 f9		 xor	 edi, ecx
  00d9f	c1 ff 07	 sar	 edi, 7
  00da2	83 e7 01	 and	 edi, 1
  00da5	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00da8	33 f7		 xor	 esi, edi
  00daa	c1 fe 07	 sar	 esi, 7
  00dad	83 e6 01	 and	 esi, 1
  00db0	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00db3	33 c6		 xor	 eax, esi
  00db5	c1 f8 07	 sar	 eax, 7
  00db8	83 e0 01	 and	 eax, 1
  00dbb	6b c0 1b	 imul	 eax, 27			; 0000001bH
  00dbe	33 d0		 xor	 edx, eax
  00dc0	d1 e2		 shl	 edx, 1
  00dc2	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00dc6	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  00dc9	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  00dcd	d1 e0		 shl	 eax, 1
  00dcf	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  00dd3	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00dd6	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  00dda	c1 f9 07	 sar	 ecx, 7
  00ddd	83 e1 01	 and	 ecx, 1
  00de0	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00de3	33 c1		 xor	 eax, ecx
  00de5	d1 e0		 shl	 eax, 1
  00de7	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  00deb	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00dee	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  00df2	d1 e1		 shl	 ecx, 1
  00df4	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00df8	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00dfb	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00dff	c1 fe 07	 sar	 esi, 7
  00e02	83 e6 01	 and	 esi, 1
  00e05	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00e08	33 ce		 xor	 ecx, esi
  00e0a	c1 f9 07	 sar	 ecx, 7
  00e0d	83 e1 01	 and	 ecx, 1
  00e10	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00e13	33 c1		 xor	 eax, ecx
  00e15	d1 e0		 shl	 eax, 1
  00e17	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  00e1b	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00e1e	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  00e22	d1 e1		 shl	 ecx, 1
  00e24	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00e28	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00e2b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00e2f	c1 fe 07	 sar	 esi, 7
  00e32	83 e6 01	 and	 esi, 1
  00e35	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00e38	33 ce		 xor	 ecx, esi
  00e3a	d1 e1		 shl	 ecx, 1
  00e3c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00e40	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00e43	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00e47	d1 e6		 shl	 esi, 1
  00e49	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00e4d	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00e50	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00e54	c1 ff 07	 sar	 edi, 7
  00e57	83 e7 01	 and	 edi, 1
  00e5a	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00e5d	33 f7		 xor	 esi, edi
  00e5f	c1 fe 07	 sar	 esi, 7
  00e62	83 e6 01	 and	 esi, 1
  00e65	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00e68	33 ce		 xor	 ecx, esi
  00e6a	c1 f9 07	 sar	 ecx, 7
  00e6d	83 e1 01	 and	 ecx, 1
  00e70	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00e73	33 c1		 xor	 eax, ecx
  00e75	d1 e0		 shl	 eax, 1
  00e77	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  00e7b	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00e7e	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  00e82	d1 e1		 shl	 ecx, 1
  00e84	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00e88	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00e8b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00e8f	c1 fe 07	 sar	 esi, 7
  00e92	83 e6 01	 and	 esi, 1
  00e95	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00e98	33 ce		 xor	 ecx, esi
  00e9a	d1 e1		 shl	 ecx, 1
  00e9c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00ea0	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00ea3	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00ea7	d1 e6		 shl	 esi, 1
  00ea9	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00ead	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00eb0	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00eb4	c1 ff 07	 sar	 edi, 7
  00eb7	83 e7 01	 and	 edi, 1
  00eba	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00ebd	33 f7		 xor	 esi, edi
  00ebf	c1 fe 07	 sar	 esi, 7
  00ec2	83 e6 01	 and	 esi, 1
  00ec5	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00ec8	33 ce		 xor	 ecx, esi
  00eca	d1 e1		 shl	 ecx, 1
  00ecc	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00ed0	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00ed3	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00ed7	d1 e6		 shl	 esi, 1
  00ed9	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00edd	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00ee0	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00ee4	c1 ff 07	 sar	 edi, 7
  00ee7	83 e7 01	 and	 edi, 1
  00eea	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00eed	33 f7		 xor	 esi, edi
  00eef	d1 e6		 shl	 esi, 1
  00ef1	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00ef5	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00ef8	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00efc	d1 e7		 shl	 edi, 1
  00efe	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  00f02	89 95 d4 fe ff
	ff		 mov	 DWORD PTR tv9254[ebp], edx
  00f08	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  00f0b	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  00f0f	c1 fa 07	 sar	 edx, 7
  00f12	83 e2 01	 and	 edx, 1
  00f15	6b d2 1b	 imul	 edx, 27			; 0000001bH
  00f18	33 fa		 xor	 edi, edx
  00f1a	c1 ff 07	 sar	 edi, 7
  00f1d	83 e7 01	 and	 edi, 1
  00f20	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00f23	33 f7		 xor	 esi, edi
  00f25	c1 fe 07	 sar	 esi, 7
  00f28	83 e6 01	 and	 esi, 1
  00f2b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00f2e	33 ce		 xor	 ecx, esi
  00f30	c1 f9 07	 sar	 ecx, 7
  00f33	83 e1 01	 and	 ecx, 1
  00f36	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  00f39	33 c1		 xor	 eax, ecx
  00f3b	c1 f8 07	 sar	 eax, 7
  00f3e	83 e0 01	 and	 eax, 1
  00f41	6b c0 1b	 imul	 eax, 27			; 0000001bH
  00f44	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR tv9254[ebp]
  00f4a	33 c8		 xor	 ecx, eax
  00f4c	d1 e1		 shl	 ecx, 1
  00f4e	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  00f52	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  00f55	0f b6 14 10	 movzx	 edx, BYTE PTR [eax+edx]
  00f59	d1 e2		 shl	 edx, 1
  00f5b	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00f5f	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00f62	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  00f66	c1 f8 07	 sar	 eax, 7
  00f69	83 e0 01	 and	 eax, 1
  00f6c	6b c0 1b	 imul	 eax, 27			; 0000001bH
  00f6f	33 d0		 xor	 edx, eax
  00f71	d1 e2		 shl	 edx, 1
  00f73	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00f77	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00f7a	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  00f7e	d1 e0		 shl	 eax, 1
  00f80	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00f84	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00f87	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00f8b	c1 fe 07	 sar	 esi, 7
  00f8e	83 e6 01	 and	 esi, 1
  00f91	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00f94	33 c6		 xor	 eax, esi
  00f96	c1 f8 07	 sar	 eax, 7
  00f99	83 e0 01	 and	 eax, 1
  00f9c	6b c0 1b	 imul	 eax, 27			; 0000001bH
  00f9f	33 d0		 xor	 edx, eax
  00fa1	d1 e2		 shl	 edx, 1
  00fa3	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  00fa7	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  00faa	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  00fae	d1 e0		 shl	 eax, 1
  00fb0	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00fb4	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00fb7	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00fbb	c1 fe 07	 sar	 esi, 7
  00fbe	83 e6 01	 and	 esi, 1
  00fc1	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00fc4	33 c6		 xor	 eax, esi
  00fc6	d1 e0		 shl	 eax, 1
  00fc8	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  00fcc	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  00fcf	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  00fd3	d1 e6		 shl	 esi, 1
  00fd5	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  00fd9	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  00fdc	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  00fe0	c1 ff 07	 sar	 edi, 7
  00fe3	83 e7 01	 and	 edi, 1
  00fe6	6b ff 1b	 imul	 edi, 27			; 0000001bH
  00fe9	33 f7		 xor	 esi, edi
  00feb	c1 fe 07	 sar	 esi, 7
  00fee	83 e6 01	 and	 esi, 1
  00ff1	6b f6 1b	 imul	 esi, 27			; 0000001bH
  00ff4	33 c6		 xor	 eax, esi
  00ff6	c1 f8 07	 sar	 eax, 7
  00ff9	83 e0 01	 and	 eax, 1
  00ffc	6b c0 1b	 imul	 eax, 27			; 0000001bH
  00fff	33 d0		 xor	 edx, eax
  01001	d1 e2		 shl	 edx, 1
  01003	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  01007	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0100a	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  0100e	d1 e0		 shl	 eax, 1
  01010	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01014	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01017	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0101b	c1 fe 07	 sar	 esi, 7
  0101e	83 e6 01	 and	 esi, 1
  01021	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01024	33 c6		 xor	 eax, esi
  01026	d1 e0		 shl	 eax, 1
  01028	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0102c	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0102f	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01033	d1 e6		 shl	 esi, 1
  01035	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01039	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0103c	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01040	c1 ff 07	 sar	 edi, 7
  01043	83 e7 01	 and	 edi, 1
  01046	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01049	33 f7		 xor	 esi, edi
  0104b	c1 fe 07	 sar	 esi, 7
  0104e	83 e6 01	 and	 esi, 1
  01051	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01054	33 c6		 xor	 eax, esi
  01056	d1 e0		 shl	 eax, 1
  01058	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0105c	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0105f	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01063	d1 e6		 shl	 esi, 1
  01065	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01069	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0106c	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01070	c1 ff 07	 sar	 edi, 7
  01073	83 e7 01	 and	 edi, 1
  01076	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01079	33 f7		 xor	 esi, edi
  0107b	d1 e6		 shl	 esi, 1
  0107d	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01081	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01084	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01088	d1 e7		 shl	 edi, 1
  0108a	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  0108e	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv9256[ebp], ecx
  01094	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  01097	0f b6 0c 19	 movzx	 ecx, BYTE PTR [ecx+ebx]
  0109b	c1 f9 07	 sar	 ecx, 7
  0109e	83 e1 01	 and	 ecx, 1
  010a1	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  010a4	33 f9		 xor	 edi, ecx
  010a6	c1 ff 07	 sar	 edi, 7
  010a9	83 e7 01	 and	 edi, 1
  010ac	6b ff 1b	 imul	 edi, 27			; 0000001bH
  010af	33 f7		 xor	 esi, edi
  010b1	c1 fe 07	 sar	 esi, 7
  010b4	83 e6 01	 and	 esi, 1
  010b7	6b f6 1b	 imul	 esi, 27			; 0000001bH
  010ba	33 c6		 xor	 eax, esi
  010bc	c1 f8 07	 sar	 eax, 7
  010bf	83 e0 01	 and	 eax, 1
  010c2	6b c0 1b	 imul	 eax, 27			; 0000001bH
  010c5	33 d0		 xor	 edx, eax
  010c7	d1 e2		 shl	 edx, 1
  010c9	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  010cd	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  010d0	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  010d4	d1 e0		 shl	 eax, 1
  010d6	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  010da	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  010dd	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  010e1	c1 f9 07	 sar	 ecx, 7
  010e4	83 e1 01	 and	 ecx, 1
  010e7	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  010ea	33 c1		 xor	 eax, ecx
  010ec	d1 e0		 shl	 eax, 1
  010ee	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  010f2	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  010f5	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  010f9	d1 e1		 shl	 ecx, 1
  010fb	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  010ff	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01102	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01106	c1 fe 07	 sar	 esi, 7
  01109	83 e6 01	 and	 esi, 1
  0110c	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0110f	33 ce		 xor	 ecx, esi
  01111	c1 f9 07	 sar	 ecx, 7
  01114	83 e1 01	 and	 ecx, 1
  01117	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0111a	33 c1		 xor	 eax, ecx
  0111c	d1 e0		 shl	 eax, 1
  0111e	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01122	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01125	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01129	d1 e1		 shl	 ecx, 1
  0112b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0112f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01132	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01136	c1 fe 07	 sar	 esi, 7
  01139	83 e6 01	 and	 esi, 1
  0113c	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0113f	33 ce		 xor	 ecx, esi
  01141	d1 e1		 shl	 ecx, 1
  01143	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01147	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0114a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0114e	d1 e6		 shl	 esi, 1
  01150	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01154	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01157	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0115b	c1 ff 07	 sar	 edi, 7
  0115e	83 e7 01	 and	 edi, 1
  01161	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01164	33 f7		 xor	 esi, edi
  01166	c1 fe 07	 sar	 esi, 7
  01169	83 e6 01	 and	 esi, 1
  0116c	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0116f	33 ce		 xor	 ecx, esi
  01171	c1 f9 07	 sar	 ecx, 7
  01174	83 e1 01	 and	 ecx, 1
  01177	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0117a	33 c1		 xor	 eax, ecx
  0117c	d1 e0		 shl	 eax, 1
  0117e	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01182	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01185	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01189	d1 e1		 shl	 ecx, 1
  0118b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0118f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01192	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01196	c1 fe 07	 sar	 esi, 7
  01199	83 e6 01	 and	 esi, 1
  0119c	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0119f	33 ce		 xor	 ecx, esi
  011a1	d1 e1		 shl	 ecx, 1
  011a3	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  011a7	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  011aa	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  011ae	d1 e6		 shl	 esi, 1
  011b0	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  011b4	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  011b7	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  011bb	c1 ff 07	 sar	 edi, 7
  011be	83 e7 01	 and	 edi, 1
  011c1	6b ff 1b	 imul	 edi, 27			; 0000001bH
  011c4	33 f7		 xor	 esi, edi
  011c6	c1 fe 07	 sar	 esi, 7
  011c9	83 e6 01	 and	 esi, 1
  011cc	6b f6 1b	 imul	 esi, 27			; 0000001bH
  011cf	33 ce		 xor	 ecx, esi
  011d1	d1 e1		 shl	 ecx, 1
  011d3	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  011d7	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  011da	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  011de	d1 e6		 shl	 esi, 1
  011e0	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  011e4	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  011e7	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  011eb	c1 ff 07	 sar	 edi, 7
  011ee	83 e7 01	 and	 edi, 1
  011f1	6b ff 1b	 imul	 edi, 27			; 0000001bH
  011f4	33 f7		 xor	 esi, edi
  011f6	d1 e6		 shl	 esi, 1
  011f8	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  011fc	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  011ff	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01203	d1 e7		 shl	 edi, 1
  01205	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  01209	89 95 cc fe ff
	ff		 mov	 DWORD PTR tv9258[ebp], edx
  0120f	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  01212	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  01216	c1 fa 07	 sar	 edx, 7
  01219	83 e2 01	 and	 edx, 1
  0121c	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0121f	33 fa		 xor	 edi, edx
  01221	c1 ff 07	 sar	 edi, 7
  01224	83 e7 01	 and	 edi, 1
  01227	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0122a	33 f7		 xor	 esi, edi
  0122c	c1 fe 07	 sar	 esi, 7
  0122f	83 e6 01	 and	 esi, 1
  01232	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01235	33 ce		 xor	 ecx, esi
  01237	c1 f9 07	 sar	 ecx, 7
  0123a	83 e1 01	 and	 ecx, 1
  0123d	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01240	33 c1		 xor	 eax, ecx
  01242	c1 f8 07	 sar	 eax, 7
  01245	83 e0 01	 and	 eax, 1
  01248	6b c0 1b	 imul	 eax, 27			; 0000001bH
  0124b	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR tv9258[ebp]
  01251	33 c8		 xor	 ecx, eax
  01253	c1 f9 07	 sar	 ecx, 7
  01256	83 e1 01	 and	 ecx, 1
  01259	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0125c	8b 95 d0 fe ff
	ff		 mov	 edx, DWORD PTR tv9256[ebp]
  01262	33 d1		 xor	 edx, ecx
  01264	d1 e2		 shl	 edx, 1
  01266	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0126a	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0126d	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  01271	d1 e0		 shl	 eax, 1
  01273	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01277	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0127a	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0127e	c1 f9 07	 sar	 ecx, 7
  01281	83 e1 01	 and	 ecx, 1
  01284	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01287	33 c1		 xor	 eax, ecx
  01289	d1 e0		 shl	 eax, 1
  0128b	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0128f	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01292	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01296	d1 e1		 shl	 ecx, 1
  01298	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0129c	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0129f	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  012a3	c1 fe 07	 sar	 esi, 7
  012a6	83 e6 01	 and	 esi, 1
  012a9	6b f6 1b	 imul	 esi, 27			; 0000001bH
  012ac	33 ce		 xor	 ecx, esi
  012ae	c1 f9 07	 sar	 ecx, 7
  012b1	83 e1 01	 and	 ecx, 1
  012b4	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  012b7	33 c1		 xor	 eax, ecx
  012b9	d1 e0		 shl	 eax, 1
  012bb	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  012bf	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  012c2	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  012c6	d1 e1		 shl	 ecx, 1
  012c8	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  012cc	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  012cf	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  012d3	c1 fe 07	 sar	 esi, 7
  012d6	83 e6 01	 and	 esi, 1
  012d9	6b f6 1b	 imul	 esi, 27			; 0000001bH
  012dc	33 ce		 xor	 ecx, esi
  012de	d1 e1		 shl	 ecx, 1
  012e0	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  012e4	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  012e7	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  012eb	d1 e6		 shl	 esi, 1
  012ed	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  012f1	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  012f4	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  012f8	c1 ff 07	 sar	 edi, 7
  012fb	83 e7 01	 and	 edi, 1
  012fe	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01301	33 f7		 xor	 esi, edi
  01303	c1 fe 07	 sar	 esi, 7
  01306	83 e6 01	 and	 esi, 1
  01309	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0130c	33 ce		 xor	 ecx, esi
  0130e	c1 f9 07	 sar	 ecx, 7
  01311	83 e1 01	 and	 ecx, 1
  01314	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01317	33 c1		 xor	 eax, ecx
  01319	d1 e0		 shl	 eax, 1
  0131b	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0131f	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01322	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01326	d1 e1		 shl	 ecx, 1
  01328	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0132c	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0132f	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01333	c1 fe 07	 sar	 esi, 7
  01336	83 e6 01	 and	 esi, 1
  01339	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0133c	33 ce		 xor	 ecx, esi
  0133e	d1 e1		 shl	 ecx, 1
  01340	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01344	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01347	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0134b	d1 e6		 shl	 esi, 1
  0134d	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01351	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01354	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01358	c1 ff 07	 sar	 edi, 7
  0135b	83 e7 01	 and	 edi, 1
  0135e	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01361	33 f7		 xor	 esi, edi
  01363	c1 fe 07	 sar	 esi, 7
  01366	83 e6 01	 and	 esi, 1
  01369	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0136c	33 ce		 xor	 ecx, esi
  0136e	d1 e1		 shl	 ecx, 1
  01370	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01374	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01377	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0137b	d1 e6		 shl	 esi, 1
  0137d	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01381	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01384	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01388	c1 ff 07	 sar	 edi, 7
  0138b	83 e7 01	 and	 edi, 1
  0138e	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01391	33 f7		 xor	 esi, edi
  01393	d1 e6		 shl	 esi, 1
  01395	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01399	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0139c	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  013a0	d1 e7		 shl	 edi, 1
  013a2	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  013a6	89 95 c8 fe ff
	ff		 mov	 DWORD PTR tv9260[ebp], edx
  013ac	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  013af	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  013b3	c1 fa 07	 sar	 edx, 7
  013b6	83 e2 01	 and	 edx, 1
  013b9	6b d2 1b	 imul	 edx, 27			; 0000001bH
  013bc	33 fa		 xor	 edi, edx
  013be	c1 ff 07	 sar	 edi, 7
  013c1	83 e7 01	 and	 edi, 1
  013c4	6b ff 1b	 imul	 edi, 27			; 0000001bH
  013c7	33 f7		 xor	 esi, edi
  013c9	c1 fe 07	 sar	 esi, 7
  013cc	83 e6 01	 and	 esi, 1
  013cf	6b f6 1b	 imul	 esi, 27			; 0000001bH
  013d2	33 ce		 xor	 ecx, esi
  013d4	c1 f9 07	 sar	 ecx, 7
  013d7	83 e1 01	 and	 ecx, 1
  013da	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  013dd	33 c1		 xor	 eax, ecx
  013df	d1 e0		 shl	 eax, 1
  013e1	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  013e5	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  013e8	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  013ec	d1 e1		 shl	 ecx, 1
  013ee	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  013f2	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  013f5	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  013f9	c1 fa 07	 sar	 edx, 7
  013fc	83 e2 01	 and	 edx, 1
  013ff	6b d2 1b	 imul	 edx, 27			; 0000001bH
  01402	33 ca		 xor	 ecx, edx
  01404	d1 e1		 shl	 ecx, 1
  01406	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  0140a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0140d	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  01411	d1 e2		 shl	 edx, 1
  01413	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01417	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0141a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0141e	c1 fe 07	 sar	 esi, 7
  01421	83 e6 01	 and	 esi, 1
  01424	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01427	33 d6		 xor	 edx, esi
  01429	c1 fa 07	 sar	 edx, 7
  0142c	83 e2 01	 and	 edx, 1
  0142f	6b d2 1b	 imul	 edx, 27			; 0000001bH
  01432	33 ca		 xor	 ecx, edx
  01434	d1 e1		 shl	 ecx, 1
  01436	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  0143a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0143d	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  01441	d1 e2		 shl	 edx, 1
  01443	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01447	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0144a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0144e	c1 fe 07	 sar	 esi, 7
  01451	83 e6 01	 and	 esi, 1
  01454	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01457	33 d6		 xor	 edx, esi
  01459	d1 e2		 shl	 edx, 1
  0145b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0145f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01462	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01466	d1 e6		 shl	 esi, 1
  01468	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0146c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0146f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01473	c1 ff 07	 sar	 edi, 7
  01476	83 e7 01	 and	 edi, 1
  01479	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0147c	33 f7		 xor	 esi, edi
  0147e	c1 fe 07	 sar	 esi, 7
  01481	83 e6 01	 and	 esi, 1
  01484	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01487	33 d6		 xor	 edx, esi
  01489	c1 fa 07	 sar	 edx, 7
  0148c	83 e2 01	 and	 edx, 1
  0148f	6b d2 1b	 imul	 edx, 27			; 0000001bH
  01492	33 ca		 xor	 ecx, edx
  01494	d1 e1		 shl	 ecx, 1
  01496	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  0149a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0149d	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  014a1	d1 e2		 shl	 edx, 1
  014a3	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  014a7	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  014aa	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  014ae	c1 fe 07	 sar	 esi, 7
  014b1	83 e6 01	 and	 esi, 1
  014b4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  014b7	33 d6		 xor	 edx, esi
  014b9	d1 e2		 shl	 edx, 1
  014bb	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  014bf	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  014c2	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  014c6	d1 e6		 shl	 esi, 1
  014c8	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  014cc	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  014cf	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  014d3	c1 ff 07	 sar	 edi, 7
  014d6	83 e7 01	 and	 edi, 1
  014d9	6b ff 1b	 imul	 edi, 27			; 0000001bH
  014dc	33 f7		 xor	 esi, edi
  014de	c1 fe 07	 sar	 esi, 7
  014e1	83 e6 01	 and	 esi, 1
  014e4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  014e7	33 d6		 xor	 edx, esi
  014e9	d1 e2		 shl	 edx, 1
  014eb	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  014ef	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  014f2	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  014f6	d1 e6		 shl	 esi, 1
  014f8	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  014fc	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  014ff	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01503	c1 ff 07	 sar	 edi, 7
  01506	83 e7 01	 and	 edi, 1
  01509	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0150c	33 f7		 xor	 esi, edi
  0150e	d1 e6		 shl	 esi, 1
  01510	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01514	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01517	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0151b	d1 e7		 shl	 edi, 1
  0151d	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  01521	89 85 c4 fe ff
	ff		 mov	 DWORD PTR tv9262[ebp], eax
  01527	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  0152a	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  0152e	c1 f8 07	 sar	 eax, 7
  01531	83 e0 01	 and	 eax, 1
  01534	6b c0 1b	 imul	 eax, 27			; 0000001bH
  01537	33 f8		 xor	 edi, eax
  01539	c1 ff 07	 sar	 edi, 7
  0153c	83 e7 01	 and	 edi, 1
  0153f	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01542	33 f7		 xor	 esi, edi
  01544	c1 fe 07	 sar	 esi, 7
  01547	83 e6 01	 and	 esi, 1
  0154a	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0154d	33 d6		 xor	 edx, esi
  0154f	c1 fa 07	 sar	 edx, 7
  01552	83 e2 01	 and	 edx, 1
  01555	6b d2 1b	 imul	 edx, 27			; 0000001bH
  01558	33 ca		 xor	 ecx, edx
  0155a	c1 f9 07	 sar	 ecx, 7
  0155d	83 e1 01	 and	 ecx, 1
  01560	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01563	8b 95 c4 fe ff
	ff		 mov	 edx, DWORD PTR tv9262[ebp]
  01569	33 d1		 xor	 edx, ecx
  0156b	d1 e2		 shl	 edx, 1
  0156d	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  01571	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  01574	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  01578	d1 e0		 shl	 eax, 1
  0157a	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0157e	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01581	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01585	c1 f9 07	 sar	 ecx, 7
  01588	83 e1 01	 and	 ecx, 1
  0158b	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0158e	33 c1		 xor	 eax, ecx
  01590	d1 e0		 shl	 eax, 1
  01592	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01596	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01599	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0159d	d1 e1		 shl	 ecx, 1
  0159f	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  015a3	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  015a6	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  015aa	c1 fe 07	 sar	 esi, 7
  015ad	83 e6 01	 and	 esi, 1
  015b0	6b f6 1b	 imul	 esi, 27			; 0000001bH
  015b3	33 ce		 xor	 ecx, esi
  015b5	c1 f9 07	 sar	 ecx, 7
  015b8	83 e1 01	 and	 ecx, 1
  015bb	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  015be	33 c1		 xor	 eax, ecx
  015c0	d1 e0		 shl	 eax, 1
  015c2	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  015c6	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  015c9	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  015cd	d1 e1		 shl	 ecx, 1
  015cf	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  015d3	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  015d6	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  015da	c1 fe 07	 sar	 esi, 7
  015dd	83 e6 01	 and	 esi, 1
  015e0	6b f6 1b	 imul	 esi, 27			; 0000001bH
  015e3	33 ce		 xor	 ecx, esi
  015e5	d1 e1		 shl	 ecx, 1
  015e7	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  015eb	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  015ee	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  015f2	d1 e6		 shl	 esi, 1
  015f4	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  015f8	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  015fb	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  015ff	c1 ff 07	 sar	 edi, 7
  01602	83 e7 01	 and	 edi, 1
  01605	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01608	33 f7		 xor	 esi, edi
  0160a	c1 fe 07	 sar	 esi, 7
  0160d	83 e6 01	 and	 esi, 1
  01610	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01613	33 ce		 xor	 ecx, esi
  01615	c1 f9 07	 sar	 ecx, 7
  01618	83 e1 01	 and	 ecx, 1
  0161b	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0161e	33 c1		 xor	 eax, ecx
  01620	d1 e0		 shl	 eax, 1
  01622	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01626	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01629	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0162d	d1 e1		 shl	 ecx, 1
  0162f	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01633	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01636	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0163a	c1 fe 07	 sar	 esi, 7
  0163d	83 e6 01	 and	 esi, 1
  01640	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01643	33 ce		 xor	 ecx, esi
  01645	d1 e1		 shl	 ecx, 1
  01647	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0164b	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0164e	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01652	d1 e6		 shl	 esi, 1
  01654	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01658	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0165b	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0165f	c1 ff 07	 sar	 edi, 7
  01662	83 e7 01	 and	 edi, 1
  01665	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01668	33 f7		 xor	 esi, edi
  0166a	c1 fe 07	 sar	 esi, 7
  0166d	83 e6 01	 and	 esi, 1
  01670	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01673	33 ce		 xor	 ecx, esi
  01675	d1 e1		 shl	 ecx, 1
  01677	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0167b	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0167e	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01682	d1 e6		 shl	 esi, 1
  01684	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01688	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0168b	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0168f	c1 ff 07	 sar	 edi, 7
  01692	83 e7 01	 and	 edi, 1
  01695	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01698	33 f7		 xor	 esi, edi
  0169a	d1 e6		 shl	 esi, 1
  0169c	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  016a0	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  016a3	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  016a7	d1 e7		 shl	 edi, 1
  016a9	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  016ad	89 95 c0 fe ff
	ff		 mov	 DWORD PTR tv9264[ebp], edx
  016b3	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  016b6	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  016ba	c1 fa 07	 sar	 edx, 7
  016bd	83 e2 01	 and	 edx, 1
  016c0	6b d2 1b	 imul	 edx, 27			; 0000001bH
  016c3	33 fa		 xor	 edi, edx
  016c5	c1 ff 07	 sar	 edi, 7
  016c8	83 e7 01	 and	 edi, 1
  016cb	6b ff 1b	 imul	 edi, 27			; 0000001bH
  016ce	33 f7		 xor	 esi, edi
  016d0	c1 fe 07	 sar	 esi, 7
  016d3	83 e6 01	 and	 esi, 1
  016d6	6b f6 1b	 imul	 esi, 27			; 0000001bH
  016d9	33 ce		 xor	 ecx, esi
  016db	c1 f9 07	 sar	 ecx, 7
  016de	83 e1 01	 and	 ecx, 1
  016e1	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  016e4	33 c1		 xor	 eax, ecx
  016e6	d1 e0		 shl	 eax, 1
  016e8	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  016ec	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  016ef	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  016f3	d1 e1		 shl	 ecx, 1
  016f5	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  016f9	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  016fc	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  01700	c1 fa 07	 sar	 edx, 7
  01703	83 e2 01	 and	 edx, 1
  01706	6b d2 1b	 imul	 edx, 27			; 0000001bH
  01709	33 ca		 xor	 ecx, edx
  0170b	d1 e1		 shl	 ecx, 1
  0170d	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  01711	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01714	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  01718	d1 e2		 shl	 edx, 1
  0171a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0171e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01721	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01725	c1 fe 07	 sar	 esi, 7
  01728	83 e6 01	 and	 esi, 1
  0172b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0172e	33 d6		 xor	 edx, esi
  01730	c1 fa 07	 sar	 edx, 7
  01733	83 e2 01	 and	 edx, 1
  01736	6b d2 1b	 imul	 edx, 27			; 0000001bH
  01739	33 ca		 xor	 ecx, edx
  0173b	d1 e1		 shl	 ecx, 1
  0173d	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  01741	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01744	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  01748	d1 e2		 shl	 edx, 1
  0174a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0174e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01751	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01755	c1 fe 07	 sar	 esi, 7
  01758	83 e6 01	 and	 esi, 1
  0175b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0175e	33 d6		 xor	 edx, esi
  01760	d1 e2		 shl	 edx, 1
  01762	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01766	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01769	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0176d	d1 e6		 shl	 esi, 1
  0176f	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01773	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01776	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0177a	c1 ff 07	 sar	 edi, 7
  0177d	83 e7 01	 and	 edi, 1
  01780	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01783	33 f7		 xor	 esi, edi
  01785	c1 fe 07	 sar	 esi, 7
  01788	83 e6 01	 and	 esi, 1
  0178b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0178e	33 d6		 xor	 edx, esi
  01790	c1 fa 07	 sar	 edx, 7
  01793	83 e2 01	 and	 edx, 1
  01796	6b d2 1b	 imul	 edx, 27			; 0000001bH
  01799	33 ca		 xor	 ecx, edx
  0179b	d1 e1		 shl	 ecx, 1
  0179d	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  017a1	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  017a4	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  017a8	d1 e2		 shl	 edx, 1
  017aa	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  017ae	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  017b1	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  017b5	c1 fe 07	 sar	 esi, 7
  017b8	83 e6 01	 and	 esi, 1
  017bb	6b f6 1b	 imul	 esi, 27			; 0000001bH
  017be	33 d6		 xor	 edx, esi
  017c0	d1 e2		 shl	 edx, 1
  017c2	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  017c6	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  017c9	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  017cd	d1 e6		 shl	 esi, 1
  017cf	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  017d3	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  017d6	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  017da	c1 ff 07	 sar	 edi, 7
  017dd	83 e7 01	 and	 edi, 1
  017e0	6b ff 1b	 imul	 edi, 27			; 0000001bH
  017e3	33 f7		 xor	 esi, edi
  017e5	c1 fe 07	 sar	 esi, 7
  017e8	83 e6 01	 and	 esi, 1
  017eb	6b f6 1b	 imul	 esi, 27			; 0000001bH
  017ee	33 d6		 xor	 edx, esi
  017f0	d1 e2		 shl	 edx, 1
  017f2	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  017f6	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  017f9	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  017fd	d1 e6		 shl	 esi, 1
  017ff	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01803	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01806	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0180a	c1 ff 07	 sar	 edi, 7
  0180d	83 e7 01	 and	 edi, 1
  01810	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01813	33 f7		 xor	 esi, edi
  01815	d1 e6		 shl	 esi, 1
  01817	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0181b	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0181e	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01822	d1 e7		 shl	 edi, 1
  01824	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  01828	89 85 bc fe ff
	ff		 mov	 DWORD PTR tv9266[ebp], eax
  0182e	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  01831	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  01835	c1 f8 07	 sar	 eax, 7
  01838	83 e0 01	 and	 eax, 1
  0183b	6b c0 1b	 imul	 eax, 27			; 0000001bH
  0183e	33 f8		 xor	 edi, eax
  01840	c1 ff 07	 sar	 edi, 7
  01843	83 e7 01	 and	 edi, 1
  01846	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01849	33 f7		 xor	 esi, edi
  0184b	c1 fe 07	 sar	 esi, 7
  0184e	83 e6 01	 and	 esi, 1
  01851	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01854	33 d6		 xor	 edx, esi
  01856	c1 fa 07	 sar	 edx, 7
  01859	83 e2 01	 and	 edx, 1
  0185c	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0185f	33 ca		 xor	 ecx, edx
  01861	c1 f9 07	 sar	 ecx, 7
  01864	83 e1 01	 and	 ecx, 1
  01867	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0186a	8b 95 bc fe ff
	ff		 mov	 edx, DWORD PTR tv9266[ebp]
  01870	33 d1		 xor	 edx, ecx
  01872	c1 fa 07	 sar	 edx, 7
  01875	83 e2 01	 and	 edx, 1
  01878	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0187b	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR tv9264[ebp]
  01881	33 c2		 xor	 eax, edx
  01883	c1 f8 07	 sar	 eax, 7
  01886	83 e0 01	 and	 eax, 1
  01889	6b c0 1b	 imul	 eax, 27			; 0000001bH
  0188c	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR tv9260[ebp]
  01892	33 c8		 xor	 ecx, eax
  01894	6b c9 00	 imul	 ecx, 0
  01897	8b 95 d8 fe ff
	ff		 mov	 edx, DWORD PTR tv9252[ebp]
  0189d	33 d1		 xor	 edx, ecx
  0189f	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  018a3	88 54 05 ec	 mov	 BYTE PTR _t9$[ebp+eax], dl

; 599  : 		tb[c] = MULTIPLY(r[c],0xb);

  018a7	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  018ab	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  018ae	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  018b2	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  018b6	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  018b9	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  018bd	d1 e0		 shl	 eax, 1
  018bf	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  018c3	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  018c6	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  018ca	c1 f9 07	 sar	 ecx, 7
  018cd	83 e1 01	 and	 ecx, 1
  018d0	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  018d3	33 c1		 xor	 eax, ecx
  018d5	33 d0		 xor	 edx, eax
  018d7	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  018db	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  018de	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  018e2	d1 e0		 shl	 eax, 1
  018e4	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  018e8	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  018eb	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  018ef	c1 f9 07	 sar	 ecx, 7
  018f2	83 e1 01	 and	 ecx, 1
  018f5	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  018f8	33 c1		 xor	 eax, ecx
  018fa	d1 e0		 shl	 eax, 1
  018fc	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01900	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01903	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01907	d1 e1		 shl	 ecx, 1
  01909	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0190d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01910	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01914	c1 fe 07	 sar	 esi, 7
  01917	83 e6 01	 and	 esi, 1
  0191a	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0191d	33 ce		 xor	 ecx, esi
  0191f	c1 f9 07	 sar	 ecx, 7
  01922	83 e1 01	 and	 ecx, 1
  01925	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01928	33 c1		 xor	 eax, ecx
  0192a	6b c0 00	 imul	 eax, 0
  0192d	33 d0		 xor	 edx, eax
  0192f	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  01933	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  01936	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  0193a	d1 e0		 shl	 eax, 1
  0193c	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01940	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01943	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01947	c1 f9 07	 sar	 ecx, 7
  0194a	83 e1 01	 and	 ecx, 1
  0194d	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01950	33 c1		 xor	 eax, ecx
  01952	d1 e0		 shl	 eax, 1
  01954	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01958	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0195b	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0195f	d1 e1		 shl	 ecx, 1
  01961	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01965	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01968	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0196c	c1 fe 07	 sar	 esi, 7
  0196f	83 e6 01	 and	 esi, 1
  01972	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01975	33 ce		 xor	 ecx, esi
  01977	c1 f9 07	 sar	 ecx, 7
  0197a	83 e1 01	 and	 ecx, 1
  0197d	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01980	33 c1		 xor	 eax, ecx
  01982	d1 e0		 shl	 eax, 1
  01984	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01988	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0198b	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0198f	d1 e1		 shl	 ecx, 1
  01991	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01995	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01998	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0199c	c1 fe 07	 sar	 esi, 7
  0199f	83 e6 01	 and	 esi, 1
  019a2	6b f6 1b	 imul	 esi, 27			; 0000001bH
  019a5	33 ce		 xor	 ecx, esi
  019a7	d1 e1		 shl	 ecx, 1
  019a9	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  019ad	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  019b0	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  019b4	d1 e6		 shl	 esi, 1
  019b6	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  019ba	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  019bd	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  019c1	c1 ff 07	 sar	 edi, 7
  019c4	83 e7 01	 and	 edi, 1
  019c7	6b ff 1b	 imul	 edi, 27			; 0000001bH
  019ca	33 f7		 xor	 esi, edi
  019cc	c1 fe 07	 sar	 esi, 7
  019cf	83 e6 01	 and	 esi, 1
  019d2	6b f6 1b	 imul	 esi, 27			; 0000001bH
  019d5	33 ce		 xor	 ecx, esi
  019d7	c1 f9 07	 sar	 ecx, 7
  019da	83 e1 01	 and	 ecx, 1
  019dd	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  019e0	33 c1		 xor	 eax, ecx
  019e2	33 d0		 xor	 edx, eax
  019e4	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  019e8	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  019eb	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  019ef	d1 e0		 shl	 eax, 1
  019f1	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  019f5	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  019f8	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  019fc	c1 f9 07	 sar	 ecx, 7
  019ff	83 e1 01	 and	 ecx, 1
  01a02	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01a05	33 c1		 xor	 eax, ecx
  01a07	d1 e0		 shl	 eax, 1
  01a09	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01a0d	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01a10	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01a14	d1 e1		 shl	 ecx, 1
  01a16	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01a1a	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01a1d	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01a21	c1 fe 07	 sar	 esi, 7
  01a24	83 e6 01	 and	 esi, 1
  01a27	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01a2a	33 ce		 xor	 ecx, esi
  01a2c	c1 f9 07	 sar	 ecx, 7
  01a2f	83 e1 01	 and	 ecx, 1
  01a32	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01a35	33 c1		 xor	 eax, ecx
  01a37	d1 e0		 shl	 eax, 1
  01a39	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01a3d	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01a40	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01a44	d1 e1		 shl	 ecx, 1
  01a46	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01a4a	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01a4d	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01a51	c1 fe 07	 sar	 esi, 7
  01a54	83 e6 01	 and	 esi, 1
  01a57	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01a5a	33 ce		 xor	 ecx, esi
  01a5c	d1 e1		 shl	 ecx, 1
  01a5e	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01a62	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01a65	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01a69	d1 e6		 shl	 esi, 1
  01a6b	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01a6f	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01a72	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01a76	c1 ff 07	 sar	 edi, 7
  01a79	83 e7 01	 and	 edi, 1
  01a7c	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01a7f	33 f7		 xor	 esi, edi
  01a81	c1 fe 07	 sar	 esi, 7
  01a84	83 e6 01	 and	 esi, 1
  01a87	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01a8a	33 ce		 xor	 ecx, esi
  01a8c	c1 f9 07	 sar	 ecx, 7
  01a8f	83 e1 01	 and	 ecx, 1
  01a92	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01a95	33 c1		 xor	 eax, ecx
  01a97	d1 e0		 shl	 eax, 1
  01a99	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01a9d	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01aa0	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01aa4	d1 e1		 shl	 ecx, 1
  01aa6	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01aaa	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01aad	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01ab1	c1 fe 07	 sar	 esi, 7
  01ab4	83 e6 01	 and	 esi, 1
  01ab7	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01aba	33 ce		 xor	 ecx, esi
  01abc	d1 e1		 shl	 ecx, 1
  01abe	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01ac2	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01ac5	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01ac9	d1 e6		 shl	 esi, 1
  01acb	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01acf	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01ad2	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01ad6	c1 ff 07	 sar	 edi, 7
  01ad9	83 e7 01	 and	 edi, 1
  01adc	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01adf	33 f7		 xor	 esi, edi
  01ae1	c1 fe 07	 sar	 esi, 7
  01ae4	83 e6 01	 and	 esi, 1
  01ae7	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01aea	33 ce		 xor	 ecx, esi
  01aec	d1 e1		 shl	 ecx, 1
  01aee	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01af2	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01af5	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01af9	d1 e6		 shl	 esi, 1
  01afb	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01aff	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01b02	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01b06	c1 ff 07	 sar	 edi, 7
  01b09	83 e7 01	 and	 edi, 1
  01b0c	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01b0f	33 f7		 xor	 esi, edi
  01b11	d1 e6		 shl	 esi, 1
  01b13	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01b17	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01b1a	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01b1e	d1 e7		 shl	 edi, 1
  01b20	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  01b24	89 95 f4 fe ff
	ff		 mov	 DWORD PTR tv9268[ebp], edx
  01b2a	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  01b2d	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  01b31	c1 fa 07	 sar	 edx, 7
  01b34	83 e2 01	 and	 edx, 1
  01b37	6b d2 1b	 imul	 edx, 27			; 0000001bH
  01b3a	33 fa		 xor	 edi, edx
  01b3c	c1 ff 07	 sar	 edi, 7
  01b3f	83 e7 01	 and	 edi, 1
  01b42	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01b45	33 f7		 xor	 esi, edi
  01b47	c1 fe 07	 sar	 esi, 7
  01b4a	83 e6 01	 and	 esi, 1
  01b4d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01b50	33 ce		 xor	 ecx, esi
  01b52	c1 f9 07	 sar	 ecx, 7
  01b55	83 e1 01	 and	 ecx, 1
  01b58	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01b5b	33 c1		 xor	 eax, ecx
  01b5d	6b c0 00	 imul	 eax, 0
  01b60	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv9268[ebp]
  01b66	33 c8		 xor	 ecx, eax
  01b68	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  01b6c	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  01b6f	0f b6 14 10	 movzx	 edx, BYTE PTR [eax+edx]
  01b73	d1 e2		 shl	 edx, 1
  01b75	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  01b79	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01b7c	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  01b80	c1 f8 07	 sar	 eax, 7
  01b83	83 e0 01	 and	 eax, 1
  01b86	6b c0 1b	 imul	 eax, 27			; 0000001bH
  01b89	33 d0		 xor	 edx, eax
  01b8b	d1 e2		 shl	 edx, 1
  01b8d	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  01b91	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01b94	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  01b98	d1 e0		 shl	 eax, 1
  01b9a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01b9e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01ba1	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01ba5	c1 fe 07	 sar	 esi, 7
  01ba8	83 e6 01	 and	 esi, 1
  01bab	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01bae	33 c6		 xor	 eax, esi
  01bb0	c1 f8 07	 sar	 eax, 7
  01bb3	83 e0 01	 and	 eax, 1
  01bb6	6b c0 1b	 imul	 eax, 27			; 0000001bH
  01bb9	33 d0		 xor	 edx, eax
  01bbb	d1 e2		 shl	 edx, 1
  01bbd	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  01bc1	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01bc4	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  01bc8	d1 e0		 shl	 eax, 1
  01bca	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01bce	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01bd1	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01bd5	c1 fe 07	 sar	 esi, 7
  01bd8	83 e6 01	 and	 esi, 1
  01bdb	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01bde	33 c6		 xor	 eax, esi
  01be0	d1 e0		 shl	 eax, 1
  01be2	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01be6	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01be9	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01bed	d1 e6		 shl	 esi, 1
  01bef	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01bf3	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01bf6	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01bfa	c1 ff 07	 sar	 edi, 7
  01bfd	83 e7 01	 and	 edi, 1
  01c00	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01c03	33 f7		 xor	 esi, edi
  01c05	c1 fe 07	 sar	 esi, 7
  01c08	83 e6 01	 and	 esi, 1
  01c0b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01c0e	33 c6		 xor	 eax, esi
  01c10	c1 f8 07	 sar	 eax, 7
  01c13	83 e0 01	 and	 eax, 1
  01c16	6b c0 1b	 imul	 eax, 27			; 0000001bH
  01c19	33 d0		 xor	 edx, eax
  01c1b	d1 e2		 shl	 edx, 1
  01c1d	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  01c21	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01c24	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  01c28	d1 e0		 shl	 eax, 1
  01c2a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01c2e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01c31	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01c35	c1 fe 07	 sar	 esi, 7
  01c38	83 e6 01	 and	 esi, 1
  01c3b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01c3e	33 c6		 xor	 eax, esi
  01c40	d1 e0		 shl	 eax, 1
  01c42	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01c46	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01c49	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01c4d	d1 e6		 shl	 esi, 1
  01c4f	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01c53	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01c56	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01c5a	c1 ff 07	 sar	 edi, 7
  01c5d	83 e7 01	 and	 edi, 1
  01c60	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01c63	33 f7		 xor	 esi, edi
  01c65	c1 fe 07	 sar	 esi, 7
  01c68	83 e6 01	 and	 esi, 1
  01c6b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01c6e	33 c6		 xor	 eax, esi
  01c70	d1 e0		 shl	 eax, 1
  01c72	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01c76	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01c79	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01c7d	d1 e6		 shl	 esi, 1
  01c7f	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01c83	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01c86	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01c8a	c1 ff 07	 sar	 edi, 7
  01c8d	83 e7 01	 and	 edi, 1
  01c90	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01c93	33 f7		 xor	 esi, edi
  01c95	d1 e6		 shl	 esi, 1
  01c97	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01c9b	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01c9e	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01ca2	d1 e7		 shl	 edi, 1
  01ca4	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  01ca8	89 8d f0 fe ff
	ff		 mov	 DWORD PTR tv9270[ebp], ecx
  01cae	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  01cb1	0f b6 0c 19	 movzx	 ecx, BYTE PTR [ecx+ebx]
  01cb5	c1 f9 07	 sar	 ecx, 7
  01cb8	83 e1 01	 and	 ecx, 1
  01cbb	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01cbe	33 f9		 xor	 edi, ecx
  01cc0	c1 ff 07	 sar	 edi, 7
  01cc3	83 e7 01	 and	 edi, 1
  01cc6	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01cc9	33 f7		 xor	 esi, edi
  01ccb	c1 fe 07	 sar	 esi, 7
  01cce	83 e6 01	 and	 esi, 1
  01cd1	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01cd4	33 c6		 xor	 eax, esi
  01cd6	c1 f8 07	 sar	 eax, 7
  01cd9	83 e0 01	 and	 eax, 1
  01cdc	6b c0 1b	 imul	 eax, 27			; 0000001bH
  01cdf	33 d0		 xor	 edx, eax
  01ce1	d1 e2		 shl	 edx, 1
  01ce3	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  01ce7	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  01cea	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  01cee	d1 e0		 shl	 eax, 1
  01cf0	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01cf4	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01cf7	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01cfb	c1 f9 07	 sar	 ecx, 7
  01cfe	83 e1 01	 and	 ecx, 1
  01d01	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01d04	33 c1		 xor	 eax, ecx
  01d06	d1 e0		 shl	 eax, 1
  01d08	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01d0c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01d0f	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01d13	d1 e1		 shl	 ecx, 1
  01d15	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01d19	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01d1c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01d20	c1 fe 07	 sar	 esi, 7
  01d23	83 e6 01	 and	 esi, 1
  01d26	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01d29	33 ce		 xor	 ecx, esi
  01d2b	c1 f9 07	 sar	 ecx, 7
  01d2e	83 e1 01	 and	 ecx, 1
  01d31	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01d34	33 c1		 xor	 eax, ecx
  01d36	d1 e0		 shl	 eax, 1
  01d38	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01d3c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01d3f	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01d43	d1 e1		 shl	 ecx, 1
  01d45	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01d49	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01d4c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01d50	c1 fe 07	 sar	 esi, 7
  01d53	83 e6 01	 and	 esi, 1
  01d56	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01d59	33 ce		 xor	 ecx, esi
  01d5b	d1 e1		 shl	 ecx, 1
  01d5d	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01d61	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01d64	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01d68	d1 e6		 shl	 esi, 1
  01d6a	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01d6e	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01d71	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01d75	c1 ff 07	 sar	 edi, 7
  01d78	83 e7 01	 and	 edi, 1
  01d7b	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01d7e	33 f7		 xor	 esi, edi
  01d80	c1 fe 07	 sar	 esi, 7
  01d83	83 e6 01	 and	 esi, 1
  01d86	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01d89	33 ce		 xor	 ecx, esi
  01d8b	c1 f9 07	 sar	 ecx, 7
  01d8e	83 e1 01	 and	 ecx, 1
  01d91	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01d94	33 c1		 xor	 eax, ecx
  01d96	d1 e0		 shl	 eax, 1
  01d98	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01d9c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01d9f	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01da3	d1 e1		 shl	 ecx, 1
  01da5	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01da9	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01dac	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01db0	c1 fe 07	 sar	 esi, 7
  01db3	83 e6 01	 and	 esi, 1
  01db6	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01db9	33 ce		 xor	 ecx, esi
  01dbb	d1 e1		 shl	 ecx, 1
  01dbd	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01dc1	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01dc4	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01dc8	d1 e6		 shl	 esi, 1
  01dca	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01dce	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01dd1	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01dd5	c1 ff 07	 sar	 edi, 7
  01dd8	83 e7 01	 and	 edi, 1
  01ddb	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01dde	33 f7		 xor	 esi, edi
  01de0	c1 fe 07	 sar	 esi, 7
  01de3	83 e6 01	 and	 esi, 1
  01de6	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01de9	33 ce		 xor	 ecx, esi
  01deb	d1 e1		 shl	 ecx, 1
  01ded	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01df1	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01df4	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01df8	d1 e6		 shl	 esi, 1
  01dfa	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01dfe	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01e01	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01e05	c1 ff 07	 sar	 edi, 7
  01e08	83 e7 01	 and	 edi, 1
  01e0b	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01e0e	33 f7		 xor	 esi, edi
  01e10	d1 e6		 shl	 esi, 1
  01e12	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01e16	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01e19	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01e1d	d1 e7		 shl	 edi, 1
  01e1f	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  01e23	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv9272[ebp], edx
  01e29	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  01e2c	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  01e30	c1 fa 07	 sar	 edx, 7
  01e33	83 e2 01	 and	 edx, 1
  01e36	6b d2 1b	 imul	 edx, 27			; 0000001bH
  01e39	33 fa		 xor	 edi, edx
  01e3b	c1 ff 07	 sar	 edi, 7
  01e3e	83 e7 01	 and	 edi, 1
  01e41	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01e44	33 f7		 xor	 esi, edi
  01e46	c1 fe 07	 sar	 esi, 7
  01e49	83 e6 01	 and	 esi, 1
  01e4c	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01e4f	33 ce		 xor	 ecx, esi
  01e51	c1 f9 07	 sar	 ecx, 7
  01e54	83 e1 01	 and	 ecx, 1
  01e57	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01e5a	33 c1		 xor	 eax, ecx
  01e5c	c1 f8 07	 sar	 eax, 7
  01e5f	83 e0 01	 and	 eax, 1
  01e62	6b c0 1b	 imul	 eax, 27			; 0000001bH
  01e65	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR tv9272[ebp]
  01e6b	33 c8		 xor	 ecx, eax
  01e6d	6b c9 00	 imul	 ecx, 0
  01e70	8b 95 f0 fe ff
	ff		 mov	 edx, DWORD PTR tv9270[ebp]
  01e76	33 d1		 xor	 edx, ecx
  01e78	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  01e7c	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  01e7f	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  01e83	d1 e0		 shl	 eax, 1
  01e85	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01e89	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01e8c	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01e90	c1 f9 07	 sar	 ecx, 7
  01e93	83 e1 01	 and	 ecx, 1
  01e96	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01e99	33 c1		 xor	 eax, ecx
  01e9b	d1 e0		 shl	 eax, 1
  01e9d	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01ea1	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01ea4	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01ea8	d1 e1		 shl	 ecx, 1
  01eaa	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01eae	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01eb1	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01eb5	c1 fe 07	 sar	 esi, 7
  01eb8	83 e6 01	 and	 esi, 1
  01ebb	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01ebe	33 ce		 xor	 ecx, esi
  01ec0	c1 f9 07	 sar	 ecx, 7
  01ec3	83 e1 01	 and	 ecx, 1
  01ec6	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01ec9	33 c1		 xor	 eax, ecx
  01ecb	d1 e0		 shl	 eax, 1
  01ecd	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01ed1	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01ed4	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01ed8	d1 e1		 shl	 ecx, 1
  01eda	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01ede	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01ee1	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01ee5	c1 fe 07	 sar	 esi, 7
  01ee8	83 e6 01	 and	 esi, 1
  01eeb	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01eee	33 ce		 xor	 ecx, esi
  01ef0	d1 e1		 shl	 ecx, 1
  01ef2	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01ef6	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01ef9	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01efd	d1 e6		 shl	 esi, 1
  01eff	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01f03	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01f06	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01f0a	c1 ff 07	 sar	 edi, 7
  01f0d	83 e7 01	 and	 edi, 1
  01f10	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01f13	33 f7		 xor	 esi, edi
  01f15	c1 fe 07	 sar	 esi, 7
  01f18	83 e6 01	 and	 esi, 1
  01f1b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01f1e	33 ce		 xor	 ecx, esi
  01f20	c1 f9 07	 sar	 ecx, 7
  01f23	83 e1 01	 and	 ecx, 1
  01f26	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01f29	33 c1		 xor	 eax, ecx
  01f2b	d1 e0		 shl	 eax, 1
  01f2d	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01f31	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  01f34	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  01f38	d1 e1		 shl	 ecx, 1
  01f3a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01f3e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01f41	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01f45	c1 fe 07	 sar	 esi, 7
  01f48	83 e6 01	 and	 esi, 1
  01f4b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01f4e	33 ce		 xor	 ecx, esi
  01f50	d1 e1		 shl	 ecx, 1
  01f52	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01f56	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01f59	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01f5d	d1 e6		 shl	 esi, 1
  01f5f	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01f63	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01f66	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01f6a	c1 ff 07	 sar	 edi, 7
  01f6d	83 e7 01	 and	 edi, 1
  01f70	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01f73	33 f7		 xor	 esi, edi
  01f75	c1 fe 07	 sar	 esi, 7
  01f78	83 e6 01	 and	 esi, 1
  01f7b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01f7e	33 ce		 xor	 ecx, esi
  01f80	d1 e1		 shl	 ecx, 1
  01f82	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  01f86	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  01f89	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  01f8d	d1 e6		 shl	 esi, 1
  01f8f	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01f93	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01f96	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01f9a	c1 ff 07	 sar	 edi, 7
  01f9d	83 e7 01	 and	 edi, 1
  01fa0	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01fa3	33 f7		 xor	 esi, edi
  01fa5	d1 e6		 shl	 esi, 1
  01fa7	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  01fab	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  01fae	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  01fb2	d1 e7		 shl	 edi, 1
  01fb4	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  01fb8	89 95 e8 fe ff
	ff		 mov	 DWORD PTR tv9274[ebp], edx
  01fbe	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  01fc1	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  01fc5	c1 fa 07	 sar	 edx, 7
  01fc8	83 e2 01	 and	 edx, 1
  01fcb	6b d2 1b	 imul	 edx, 27			; 0000001bH
  01fce	33 fa		 xor	 edi, edx
  01fd0	c1 ff 07	 sar	 edi, 7
  01fd3	83 e7 01	 and	 edi, 1
  01fd6	6b ff 1b	 imul	 edi, 27			; 0000001bH
  01fd9	33 f7		 xor	 esi, edi
  01fdb	c1 fe 07	 sar	 esi, 7
  01fde	83 e6 01	 and	 esi, 1
  01fe1	6b f6 1b	 imul	 esi, 27			; 0000001bH
  01fe4	33 ce		 xor	 ecx, esi
  01fe6	c1 f9 07	 sar	 ecx, 7
  01fe9	83 e1 01	 and	 ecx, 1
  01fec	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  01fef	33 c1		 xor	 eax, ecx
  01ff1	d1 e0		 shl	 eax, 1
  01ff3	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  01ff7	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  01ffa	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  01ffe	d1 e1		 shl	 ecx, 1
  02000	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  02004	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02007	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  0200b	c1 fa 07	 sar	 edx, 7
  0200e	83 e2 01	 and	 edx, 1
  02011	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02014	33 ca		 xor	 ecx, edx
  02016	d1 e1		 shl	 ecx, 1
  02018	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  0201c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0201f	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  02023	d1 e2		 shl	 edx, 1
  02025	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02029	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0202c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02030	c1 fe 07	 sar	 esi, 7
  02033	83 e6 01	 and	 esi, 1
  02036	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02039	33 d6		 xor	 edx, esi
  0203b	c1 fa 07	 sar	 edx, 7
  0203e	83 e2 01	 and	 edx, 1
  02041	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02044	33 ca		 xor	 ecx, edx
  02046	d1 e1		 shl	 ecx, 1
  02048	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  0204c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0204f	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  02053	d1 e2		 shl	 edx, 1
  02055	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02059	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0205c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02060	c1 fe 07	 sar	 esi, 7
  02063	83 e6 01	 and	 esi, 1
  02066	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02069	33 d6		 xor	 edx, esi
  0206b	d1 e2		 shl	 edx, 1
  0206d	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02071	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02074	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02078	d1 e6		 shl	 esi, 1
  0207a	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0207e	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02081	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02085	c1 ff 07	 sar	 edi, 7
  02088	83 e7 01	 and	 edi, 1
  0208b	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0208e	33 f7		 xor	 esi, edi
  02090	c1 fe 07	 sar	 esi, 7
  02093	83 e6 01	 and	 esi, 1
  02096	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02099	33 d6		 xor	 edx, esi
  0209b	c1 fa 07	 sar	 edx, 7
  0209e	83 e2 01	 and	 edx, 1
  020a1	6b d2 1b	 imul	 edx, 27			; 0000001bH
  020a4	33 ca		 xor	 ecx, edx
  020a6	d1 e1		 shl	 ecx, 1
  020a8	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  020ac	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  020af	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  020b3	d1 e2		 shl	 edx, 1
  020b5	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  020b9	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  020bc	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  020c0	c1 fe 07	 sar	 esi, 7
  020c3	83 e6 01	 and	 esi, 1
  020c6	6b f6 1b	 imul	 esi, 27			; 0000001bH
  020c9	33 d6		 xor	 edx, esi
  020cb	d1 e2		 shl	 edx, 1
  020cd	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  020d1	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  020d4	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  020d8	d1 e6		 shl	 esi, 1
  020da	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  020de	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  020e1	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  020e5	c1 ff 07	 sar	 edi, 7
  020e8	83 e7 01	 and	 edi, 1
  020eb	6b ff 1b	 imul	 edi, 27			; 0000001bH
  020ee	33 f7		 xor	 esi, edi
  020f0	c1 fe 07	 sar	 esi, 7
  020f3	83 e6 01	 and	 esi, 1
  020f6	6b f6 1b	 imul	 esi, 27			; 0000001bH
  020f9	33 d6		 xor	 edx, esi
  020fb	d1 e2		 shl	 edx, 1
  020fd	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02101	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02104	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02108	d1 e6		 shl	 esi, 1
  0210a	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0210e	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02111	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02115	c1 ff 07	 sar	 edi, 7
  02118	83 e7 01	 and	 edi, 1
  0211b	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0211e	33 f7		 xor	 esi, edi
  02120	d1 e6		 shl	 esi, 1
  02122	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02126	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02129	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0212d	d1 e7		 shl	 edi, 1
  0212f	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  02133	89 85 e4 fe ff
	ff		 mov	 DWORD PTR tv9276[ebp], eax
  02139	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  0213c	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  02140	c1 f8 07	 sar	 eax, 7
  02143	83 e0 01	 and	 eax, 1
  02146	6b c0 1b	 imul	 eax, 27			; 0000001bH
  02149	33 f8		 xor	 edi, eax
  0214b	c1 ff 07	 sar	 edi, 7
  0214e	83 e7 01	 and	 edi, 1
  02151	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02154	33 f7		 xor	 esi, edi
  02156	c1 fe 07	 sar	 esi, 7
  02159	83 e6 01	 and	 esi, 1
  0215c	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0215f	33 d6		 xor	 edx, esi
  02161	c1 fa 07	 sar	 edx, 7
  02164	83 e2 01	 and	 edx, 1
  02167	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0216a	33 ca		 xor	 ecx, edx
  0216c	c1 f9 07	 sar	 ecx, 7
  0216f	83 e1 01	 and	 ecx, 1
  02172	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02175	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR tv9276[ebp]
  0217b	33 d1		 xor	 edx, ecx
  0217d	d1 e2		 shl	 edx, 1
  0217f	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  02183	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  02186	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  0218a	d1 e0		 shl	 eax, 1
  0218c	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02190	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02193	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  02197	c1 f9 07	 sar	 ecx, 7
  0219a	83 e1 01	 and	 ecx, 1
  0219d	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  021a0	33 c1		 xor	 eax, ecx
  021a2	d1 e0		 shl	 eax, 1
  021a4	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  021a8	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  021ab	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  021af	d1 e1		 shl	 ecx, 1
  021b1	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  021b5	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  021b8	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  021bc	c1 fe 07	 sar	 esi, 7
  021bf	83 e6 01	 and	 esi, 1
  021c2	6b f6 1b	 imul	 esi, 27			; 0000001bH
  021c5	33 ce		 xor	 ecx, esi
  021c7	c1 f9 07	 sar	 ecx, 7
  021ca	83 e1 01	 and	 ecx, 1
  021cd	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  021d0	33 c1		 xor	 eax, ecx
  021d2	d1 e0		 shl	 eax, 1
  021d4	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  021d8	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  021db	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  021df	d1 e1		 shl	 ecx, 1
  021e1	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  021e5	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  021e8	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  021ec	c1 fe 07	 sar	 esi, 7
  021ef	83 e6 01	 and	 esi, 1
  021f2	6b f6 1b	 imul	 esi, 27			; 0000001bH
  021f5	33 ce		 xor	 ecx, esi
  021f7	d1 e1		 shl	 ecx, 1
  021f9	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  021fd	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02200	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02204	d1 e6		 shl	 esi, 1
  02206	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0220a	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0220d	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02211	c1 ff 07	 sar	 edi, 7
  02214	83 e7 01	 and	 edi, 1
  02217	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0221a	33 f7		 xor	 esi, edi
  0221c	c1 fe 07	 sar	 esi, 7
  0221f	83 e6 01	 and	 esi, 1
  02222	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02225	33 ce		 xor	 ecx, esi
  02227	c1 f9 07	 sar	 ecx, 7
  0222a	83 e1 01	 and	 ecx, 1
  0222d	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02230	33 c1		 xor	 eax, ecx
  02232	d1 e0		 shl	 eax, 1
  02234	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02238	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0223b	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0223f	d1 e1		 shl	 ecx, 1
  02241	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02245	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02248	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0224c	c1 fe 07	 sar	 esi, 7
  0224f	83 e6 01	 and	 esi, 1
  02252	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02255	33 ce		 xor	 ecx, esi
  02257	d1 e1		 shl	 ecx, 1
  02259	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0225d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02260	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02264	d1 e6		 shl	 esi, 1
  02266	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0226a	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0226d	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02271	c1 ff 07	 sar	 edi, 7
  02274	83 e7 01	 and	 edi, 1
  02277	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0227a	33 f7		 xor	 esi, edi
  0227c	c1 fe 07	 sar	 esi, 7
  0227f	83 e6 01	 and	 esi, 1
  02282	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02285	33 ce		 xor	 ecx, esi
  02287	d1 e1		 shl	 ecx, 1
  02289	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0228d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02290	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02294	d1 e6		 shl	 esi, 1
  02296	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0229a	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0229d	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  022a1	c1 ff 07	 sar	 edi, 7
  022a4	83 e7 01	 and	 edi, 1
  022a7	6b ff 1b	 imul	 edi, 27			; 0000001bH
  022aa	33 f7		 xor	 esi, edi
  022ac	d1 e6		 shl	 esi, 1
  022ae	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  022b2	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  022b5	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  022b9	d1 e7		 shl	 edi, 1
  022bb	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  022bf	89 95 e0 fe ff
	ff		 mov	 DWORD PTR tv9278[ebp], edx
  022c5	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  022c8	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  022cc	c1 fa 07	 sar	 edx, 7
  022cf	83 e2 01	 and	 edx, 1
  022d2	6b d2 1b	 imul	 edx, 27			; 0000001bH
  022d5	33 fa		 xor	 edi, edx
  022d7	c1 ff 07	 sar	 edi, 7
  022da	83 e7 01	 and	 edi, 1
  022dd	6b ff 1b	 imul	 edi, 27			; 0000001bH
  022e0	33 f7		 xor	 esi, edi
  022e2	c1 fe 07	 sar	 esi, 7
  022e5	83 e6 01	 and	 esi, 1
  022e8	6b f6 1b	 imul	 esi, 27			; 0000001bH
  022eb	33 ce		 xor	 ecx, esi
  022ed	c1 f9 07	 sar	 ecx, 7
  022f0	83 e1 01	 and	 ecx, 1
  022f3	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  022f6	33 c1		 xor	 eax, ecx
  022f8	d1 e0		 shl	 eax, 1
  022fa	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  022fe	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  02301	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  02305	d1 e1		 shl	 ecx, 1
  02307	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  0230b	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0230e	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  02312	c1 fa 07	 sar	 edx, 7
  02315	83 e2 01	 and	 edx, 1
  02318	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0231b	33 ca		 xor	 ecx, edx
  0231d	d1 e1		 shl	 ecx, 1
  0231f	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  02323	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02326	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  0232a	d1 e2		 shl	 edx, 1
  0232c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02330	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02333	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02337	c1 fe 07	 sar	 esi, 7
  0233a	83 e6 01	 and	 esi, 1
  0233d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02340	33 d6		 xor	 edx, esi
  02342	c1 fa 07	 sar	 edx, 7
  02345	83 e2 01	 and	 edx, 1
  02348	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0234b	33 ca		 xor	 ecx, edx
  0234d	d1 e1		 shl	 ecx, 1
  0234f	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  02353	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02356	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  0235a	d1 e2		 shl	 edx, 1
  0235c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02360	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02363	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02367	c1 fe 07	 sar	 esi, 7
  0236a	83 e6 01	 and	 esi, 1
  0236d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02370	33 d6		 xor	 edx, esi
  02372	d1 e2		 shl	 edx, 1
  02374	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02378	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0237b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0237f	d1 e6		 shl	 esi, 1
  02381	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02385	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02388	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0238c	c1 ff 07	 sar	 edi, 7
  0238f	83 e7 01	 and	 edi, 1
  02392	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02395	33 f7		 xor	 esi, edi
  02397	c1 fe 07	 sar	 esi, 7
  0239a	83 e6 01	 and	 esi, 1
  0239d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  023a0	33 d6		 xor	 edx, esi
  023a2	c1 fa 07	 sar	 edx, 7
  023a5	83 e2 01	 and	 edx, 1
  023a8	6b d2 1b	 imul	 edx, 27			; 0000001bH
  023ab	33 ca		 xor	 ecx, edx
  023ad	d1 e1		 shl	 ecx, 1
  023af	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  023b3	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  023b6	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  023ba	d1 e2		 shl	 edx, 1
  023bc	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  023c0	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  023c3	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  023c7	c1 fe 07	 sar	 esi, 7
  023ca	83 e6 01	 and	 esi, 1
  023cd	6b f6 1b	 imul	 esi, 27			; 0000001bH
  023d0	33 d6		 xor	 edx, esi
  023d2	d1 e2		 shl	 edx, 1
  023d4	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  023d8	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  023db	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  023df	d1 e6		 shl	 esi, 1
  023e1	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  023e5	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  023e8	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  023ec	c1 ff 07	 sar	 edi, 7
  023ef	83 e7 01	 and	 edi, 1
  023f2	6b ff 1b	 imul	 edi, 27			; 0000001bH
  023f5	33 f7		 xor	 esi, edi
  023f7	c1 fe 07	 sar	 esi, 7
  023fa	83 e6 01	 and	 esi, 1
  023fd	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02400	33 d6		 xor	 edx, esi
  02402	d1 e2		 shl	 edx, 1
  02404	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02408	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0240b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0240f	d1 e6		 shl	 esi, 1
  02411	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02415	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02418	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0241c	c1 ff 07	 sar	 edi, 7
  0241f	83 e7 01	 and	 edi, 1
  02422	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02425	33 f7		 xor	 esi, edi
  02427	d1 e6		 shl	 esi, 1
  02429	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0242d	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02430	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02434	d1 e7		 shl	 edi, 1
  02436	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  0243a	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv9280[ebp], eax
  02440	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  02443	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  02447	c1 f8 07	 sar	 eax, 7
  0244a	83 e0 01	 and	 eax, 1
  0244d	6b c0 1b	 imul	 eax, 27			; 0000001bH
  02450	33 f8		 xor	 edi, eax
  02452	c1 ff 07	 sar	 edi, 7
  02455	83 e7 01	 and	 edi, 1
  02458	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0245b	33 f7		 xor	 esi, edi
  0245d	c1 fe 07	 sar	 esi, 7
  02460	83 e6 01	 and	 esi, 1
  02463	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02466	33 d6		 xor	 edx, esi
  02468	c1 fa 07	 sar	 edx, 7
  0246b	83 e2 01	 and	 edx, 1
  0246e	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02471	33 ca		 xor	 ecx, edx
  02473	c1 f9 07	 sar	 ecx, 7
  02476	83 e1 01	 and	 ecx, 1
  02479	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0247c	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR tv9280[ebp]
  02482	33 d1		 xor	 edx, ecx
  02484	c1 fa 07	 sar	 edx, 7
  02487	83 e2 01	 and	 edx, 1
  0248a	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0248d	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv9278[ebp]
  02493	33 c2		 xor	 eax, edx
  02495	6b c0 00	 imul	 eax, 0
  02498	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR tv9274[ebp]
  0249e	33 c8		 xor	 ecx, eax
  024a0	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  024a4	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  024a7	0f b6 14 10	 movzx	 edx, BYTE PTR [eax+edx]
  024ab	d1 e2		 shl	 edx, 1
  024ad	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  024b1	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  024b4	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  024b8	c1 f8 07	 sar	 eax, 7
  024bb	83 e0 01	 and	 eax, 1
  024be	6b c0 1b	 imul	 eax, 27			; 0000001bH
  024c1	33 d0		 xor	 edx, eax
  024c3	d1 e2		 shl	 edx, 1
  024c5	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  024c9	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  024cc	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  024d0	d1 e0		 shl	 eax, 1
  024d2	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  024d6	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  024d9	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  024dd	c1 fe 07	 sar	 esi, 7
  024e0	83 e6 01	 and	 esi, 1
  024e3	6b f6 1b	 imul	 esi, 27			; 0000001bH
  024e6	33 c6		 xor	 eax, esi
  024e8	c1 f8 07	 sar	 eax, 7
  024eb	83 e0 01	 and	 eax, 1
  024ee	6b c0 1b	 imul	 eax, 27			; 0000001bH
  024f1	33 d0		 xor	 edx, eax
  024f3	d1 e2		 shl	 edx, 1
  024f5	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  024f9	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  024fc	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  02500	d1 e0		 shl	 eax, 1
  02502	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02506	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02509	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0250d	c1 fe 07	 sar	 esi, 7
  02510	83 e6 01	 and	 esi, 1
  02513	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02516	33 c6		 xor	 eax, esi
  02518	d1 e0		 shl	 eax, 1
  0251a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0251e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02521	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02525	d1 e6		 shl	 esi, 1
  02527	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0252b	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0252e	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02532	c1 ff 07	 sar	 edi, 7
  02535	83 e7 01	 and	 edi, 1
  02538	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0253b	33 f7		 xor	 esi, edi
  0253d	c1 fe 07	 sar	 esi, 7
  02540	83 e6 01	 and	 esi, 1
  02543	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02546	33 c6		 xor	 eax, esi
  02548	c1 f8 07	 sar	 eax, 7
  0254b	83 e0 01	 and	 eax, 1
  0254e	6b c0 1b	 imul	 eax, 27			; 0000001bH
  02551	33 d0		 xor	 edx, eax
  02553	d1 e2		 shl	 edx, 1
  02555	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  02559	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0255c	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  02560	d1 e0		 shl	 eax, 1
  02562	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02566	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02569	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0256d	c1 fe 07	 sar	 esi, 7
  02570	83 e6 01	 and	 esi, 1
  02573	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02576	33 c6		 xor	 eax, esi
  02578	d1 e0		 shl	 eax, 1
  0257a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0257e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02581	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02585	d1 e6		 shl	 esi, 1
  02587	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0258b	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0258e	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02592	c1 ff 07	 sar	 edi, 7
  02595	83 e7 01	 and	 edi, 1
  02598	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0259b	33 f7		 xor	 esi, edi
  0259d	c1 fe 07	 sar	 esi, 7
  025a0	83 e6 01	 and	 esi, 1
  025a3	6b f6 1b	 imul	 esi, 27			; 0000001bH
  025a6	33 c6		 xor	 eax, esi
  025a8	d1 e0		 shl	 eax, 1
  025aa	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  025ae	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  025b1	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  025b5	d1 e6		 shl	 esi, 1
  025b7	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  025bb	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  025be	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  025c2	c1 ff 07	 sar	 edi, 7
  025c5	83 e7 01	 and	 edi, 1
  025c8	6b ff 1b	 imul	 edi, 27			; 0000001bH
  025cb	33 f7		 xor	 esi, edi
  025cd	d1 e6		 shl	 esi, 1
  025cf	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  025d3	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  025d6	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  025da	d1 e7		 shl	 edi, 1
  025dc	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  025e0	89 8d d8 fe ff
	ff		 mov	 DWORD PTR tv9282[ebp], ecx
  025e6	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  025e9	0f b6 0c 19	 movzx	 ecx, BYTE PTR [ecx+ebx]
  025ed	c1 f9 07	 sar	 ecx, 7
  025f0	83 e1 01	 and	 ecx, 1
  025f3	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  025f6	33 f9		 xor	 edi, ecx
  025f8	c1 ff 07	 sar	 edi, 7
  025fb	83 e7 01	 and	 edi, 1
  025fe	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02601	33 f7		 xor	 esi, edi
  02603	c1 fe 07	 sar	 esi, 7
  02606	83 e6 01	 and	 esi, 1
  02609	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0260c	33 c6		 xor	 eax, esi
  0260e	c1 f8 07	 sar	 eax, 7
  02611	83 e0 01	 and	 eax, 1
  02614	6b c0 1b	 imul	 eax, 27			; 0000001bH
  02617	33 d0		 xor	 edx, eax
  02619	d1 e2		 shl	 edx, 1
  0261b	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0261f	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  02622	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  02626	d1 e0		 shl	 eax, 1
  02628	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0262c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0262f	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  02633	c1 f9 07	 sar	 ecx, 7
  02636	83 e1 01	 and	 ecx, 1
  02639	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0263c	33 c1		 xor	 eax, ecx
  0263e	d1 e0		 shl	 eax, 1
  02640	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02644	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02647	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0264b	d1 e1		 shl	 ecx, 1
  0264d	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02651	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02654	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02658	c1 fe 07	 sar	 esi, 7
  0265b	83 e6 01	 and	 esi, 1
  0265e	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02661	33 ce		 xor	 ecx, esi
  02663	c1 f9 07	 sar	 ecx, 7
  02666	83 e1 01	 and	 ecx, 1
  02669	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0266c	33 c1		 xor	 eax, ecx
  0266e	d1 e0		 shl	 eax, 1
  02670	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02674	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02677	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0267b	d1 e1		 shl	 ecx, 1
  0267d	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02681	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02684	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02688	c1 fe 07	 sar	 esi, 7
  0268b	83 e6 01	 and	 esi, 1
  0268e	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02691	33 ce		 xor	 ecx, esi
  02693	d1 e1		 shl	 ecx, 1
  02695	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02699	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0269c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  026a0	d1 e6		 shl	 esi, 1
  026a2	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  026a6	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  026a9	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  026ad	c1 ff 07	 sar	 edi, 7
  026b0	83 e7 01	 and	 edi, 1
  026b3	6b ff 1b	 imul	 edi, 27			; 0000001bH
  026b6	33 f7		 xor	 esi, edi
  026b8	c1 fe 07	 sar	 esi, 7
  026bb	83 e6 01	 and	 esi, 1
  026be	6b f6 1b	 imul	 esi, 27			; 0000001bH
  026c1	33 ce		 xor	 ecx, esi
  026c3	c1 f9 07	 sar	 ecx, 7
  026c6	83 e1 01	 and	 ecx, 1
  026c9	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  026cc	33 c1		 xor	 eax, ecx
  026ce	d1 e0		 shl	 eax, 1
  026d0	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  026d4	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  026d7	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  026db	d1 e1		 shl	 ecx, 1
  026dd	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  026e1	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  026e4	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  026e8	c1 fe 07	 sar	 esi, 7
  026eb	83 e6 01	 and	 esi, 1
  026ee	6b f6 1b	 imul	 esi, 27			; 0000001bH
  026f1	33 ce		 xor	 ecx, esi
  026f3	d1 e1		 shl	 ecx, 1
  026f5	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  026f9	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  026fc	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02700	d1 e6		 shl	 esi, 1
  02702	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02706	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02709	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0270d	c1 ff 07	 sar	 edi, 7
  02710	83 e7 01	 and	 edi, 1
  02713	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02716	33 f7		 xor	 esi, edi
  02718	c1 fe 07	 sar	 esi, 7
  0271b	83 e6 01	 and	 esi, 1
  0271e	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02721	33 ce		 xor	 ecx, esi
  02723	d1 e1		 shl	 ecx, 1
  02725	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02729	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0272c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02730	d1 e6		 shl	 esi, 1
  02732	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02736	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02739	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0273d	c1 ff 07	 sar	 edi, 7
  02740	83 e7 01	 and	 edi, 1
  02743	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02746	33 f7		 xor	 esi, edi
  02748	d1 e6		 shl	 esi, 1
  0274a	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0274e	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02751	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02755	d1 e7		 shl	 edi, 1
  02757	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  0275b	89 95 d4 fe ff
	ff		 mov	 DWORD PTR tv9284[ebp], edx
  02761	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  02764	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  02768	c1 fa 07	 sar	 edx, 7
  0276b	83 e2 01	 and	 edx, 1
  0276e	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02771	33 fa		 xor	 edi, edx
  02773	c1 ff 07	 sar	 edi, 7
  02776	83 e7 01	 and	 edi, 1
  02779	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0277c	33 f7		 xor	 esi, edi
  0277e	c1 fe 07	 sar	 esi, 7
  02781	83 e6 01	 and	 esi, 1
  02784	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02787	33 ce		 xor	 ecx, esi
  02789	c1 f9 07	 sar	 ecx, 7
  0278c	83 e1 01	 and	 ecx, 1
  0278f	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02792	33 c1		 xor	 eax, ecx
  02794	c1 f8 07	 sar	 eax, 7
  02797	83 e0 01	 and	 eax, 1
  0279a	6b c0 1b	 imul	 eax, 27			; 0000001bH
  0279d	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR tv9284[ebp]
  027a3	33 c8		 xor	 ecx, eax
  027a5	d1 e1		 shl	 ecx, 1
  027a7	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  027ab	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  027ae	0f b6 14 10	 movzx	 edx, BYTE PTR [eax+edx]
  027b2	d1 e2		 shl	 edx, 1
  027b4	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  027b8	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  027bb	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  027bf	c1 f8 07	 sar	 eax, 7
  027c2	83 e0 01	 and	 eax, 1
  027c5	6b c0 1b	 imul	 eax, 27			; 0000001bH
  027c8	33 d0		 xor	 edx, eax
  027ca	d1 e2		 shl	 edx, 1
  027cc	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  027d0	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  027d3	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  027d7	d1 e0		 shl	 eax, 1
  027d9	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  027dd	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  027e0	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  027e4	c1 fe 07	 sar	 esi, 7
  027e7	83 e6 01	 and	 esi, 1
  027ea	6b f6 1b	 imul	 esi, 27			; 0000001bH
  027ed	33 c6		 xor	 eax, esi
  027ef	c1 f8 07	 sar	 eax, 7
  027f2	83 e0 01	 and	 eax, 1
  027f5	6b c0 1b	 imul	 eax, 27			; 0000001bH
  027f8	33 d0		 xor	 edx, eax
  027fa	d1 e2		 shl	 edx, 1
  027fc	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  02800	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02803	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  02807	d1 e0		 shl	 eax, 1
  02809	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0280d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02810	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02814	c1 fe 07	 sar	 esi, 7
  02817	83 e6 01	 and	 esi, 1
  0281a	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0281d	33 c6		 xor	 eax, esi
  0281f	d1 e0		 shl	 eax, 1
  02821	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02825	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02828	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0282c	d1 e6		 shl	 esi, 1
  0282e	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02832	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02835	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02839	c1 ff 07	 sar	 edi, 7
  0283c	83 e7 01	 and	 edi, 1
  0283f	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02842	33 f7		 xor	 esi, edi
  02844	c1 fe 07	 sar	 esi, 7
  02847	83 e6 01	 and	 esi, 1
  0284a	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0284d	33 c6		 xor	 eax, esi
  0284f	c1 f8 07	 sar	 eax, 7
  02852	83 e0 01	 and	 eax, 1
  02855	6b c0 1b	 imul	 eax, 27			; 0000001bH
  02858	33 d0		 xor	 edx, eax
  0285a	d1 e2		 shl	 edx, 1
  0285c	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  02860	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02863	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  02867	d1 e0		 shl	 eax, 1
  02869	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0286d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02870	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02874	c1 fe 07	 sar	 esi, 7
  02877	83 e6 01	 and	 esi, 1
  0287a	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0287d	33 c6		 xor	 eax, esi
  0287f	d1 e0		 shl	 eax, 1
  02881	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02885	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02888	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0288c	d1 e6		 shl	 esi, 1
  0288e	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02892	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02895	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02899	c1 ff 07	 sar	 edi, 7
  0289c	83 e7 01	 and	 edi, 1
  0289f	6b ff 1b	 imul	 edi, 27			; 0000001bH
  028a2	33 f7		 xor	 esi, edi
  028a4	c1 fe 07	 sar	 esi, 7
  028a7	83 e6 01	 and	 esi, 1
  028aa	6b f6 1b	 imul	 esi, 27			; 0000001bH
  028ad	33 c6		 xor	 eax, esi
  028af	d1 e0		 shl	 eax, 1
  028b1	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  028b5	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  028b8	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  028bc	d1 e6		 shl	 esi, 1
  028be	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  028c2	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  028c5	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  028c9	c1 ff 07	 sar	 edi, 7
  028cc	83 e7 01	 and	 edi, 1
  028cf	6b ff 1b	 imul	 edi, 27			; 0000001bH
  028d2	33 f7		 xor	 esi, edi
  028d4	d1 e6		 shl	 esi, 1
  028d6	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  028da	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  028dd	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  028e1	d1 e7		 shl	 edi, 1
  028e3	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  028e7	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv9286[ebp], ecx
  028ed	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  028f0	0f b6 0c 19	 movzx	 ecx, BYTE PTR [ecx+ebx]
  028f4	c1 f9 07	 sar	 ecx, 7
  028f7	83 e1 01	 and	 ecx, 1
  028fa	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  028fd	33 f9		 xor	 edi, ecx
  028ff	c1 ff 07	 sar	 edi, 7
  02902	83 e7 01	 and	 edi, 1
  02905	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02908	33 f7		 xor	 esi, edi
  0290a	c1 fe 07	 sar	 esi, 7
  0290d	83 e6 01	 and	 esi, 1
  02910	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02913	33 c6		 xor	 eax, esi
  02915	c1 f8 07	 sar	 eax, 7
  02918	83 e0 01	 and	 eax, 1
  0291b	6b c0 1b	 imul	 eax, 27			; 0000001bH
  0291e	33 d0		 xor	 edx, eax
  02920	d1 e2		 shl	 edx, 1
  02922	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  02926	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  02929	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  0292d	d1 e0		 shl	 eax, 1
  0292f	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02933	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02936	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0293a	c1 f9 07	 sar	 ecx, 7
  0293d	83 e1 01	 and	 ecx, 1
  02940	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02943	33 c1		 xor	 eax, ecx
  02945	d1 e0		 shl	 eax, 1
  02947	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0294b	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0294e	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  02952	d1 e1		 shl	 ecx, 1
  02954	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02958	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0295b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0295f	c1 fe 07	 sar	 esi, 7
  02962	83 e6 01	 and	 esi, 1
  02965	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02968	33 ce		 xor	 ecx, esi
  0296a	c1 f9 07	 sar	 ecx, 7
  0296d	83 e1 01	 and	 ecx, 1
  02970	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02973	33 c1		 xor	 eax, ecx
  02975	d1 e0		 shl	 eax, 1
  02977	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0297b	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0297e	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  02982	d1 e1		 shl	 ecx, 1
  02984	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02988	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0298b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0298f	c1 fe 07	 sar	 esi, 7
  02992	83 e6 01	 and	 esi, 1
  02995	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02998	33 ce		 xor	 ecx, esi
  0299a	d1 e1		 shl	 ecx, 1
  0299c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  029a0	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  029a3	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  029a7	d1 e6		 shl	 esi, 1
  029a9	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  029ad	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  029b0	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  029b4	c1 ff 07	 sar	 edi, 7
  029b7	83 e7 01	 and	 edi, 1
  029ba	6b ff 1b	 imul	 edi, 27			; 0000001bH
  029bd	33 f7		 xor	 esi, edi
  029bf	c1 fe 07	 sar	 esi, 7
  029c2	83 e6 01	 and	 esi, 1
  029c5	6b f6 1b	 imul	 esi, 27			; 0000001bH
  029c8	33 ce		 xor	 ecx, esi
  029ca	c1 f9 07	 sar	 ecx, 7
  029cd	83 e1 01	 and	 ecx, 1
  029d0	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  029d3	33 c1		 xor	 eax, ecx
  029d5	d1 e0		 shl	 eax, 1
  029d7	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  029db	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  029de	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  029e2	d1 e1		 shl	 ecx, 1
  029e4	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  029e8	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  029eb	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  029ef	c1 fe 07	 sar	 esi, 7
  029f2	83 e6 01	 and	 esi, 1
  029f5	6b f6 1b	 imul	 esi, 27			; 0000001bH
  029f8	33 ce		 xor	 ecx, esi
  029fa	d1 e1		 shl	 ecx, 1
  029fc	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02a00	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02a03	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02a07	d1 e6		 shl	 esi, 1
  02a09	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02a0d	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02a10	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02a14	c1 ff 07	 sar	 edi, 7
  02a17	83 e7 01	 and	 edi, 1
  02a1a	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02a1d	33 f7		 xor	 esi, edi
  02a1f	c1 fe 07	 sar	 esi, 7
  02a22	83 e6 01	 and	 esi, 1
  02a25	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02a28	33 ce		 xor	 ecx, esi
  02a2a	d1 e1		 shl	 ecx, 1
  02a2c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02a30	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02a33	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02a37	d1 e6		 shl	 esi, 1
  02a39	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02a3d	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02a40	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02a44	c1 ff 07	 sar	 edi, 7
  02a47	83 e7 01	 and	 edi, 1
  02a4a	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02a4d	33 f7		 xor	 esi, edi
  02a4f	d1 e6		 shl	 esi, 1
  02a51	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02a55	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02a58	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02a5c	d1 e7		 shl	 edi, 1
  02a5e	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  02a62	89 95 cc fe ff
	ff		 mov	 DWORD PTR tv9288[ebp], edx
  02a68	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  02a6b	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  02a6f	c1 fa 07	 sar	 edx, 7
  02a72	83 e2 01	 and	 edx, 1
  02a75	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02a78	33 fa		 xor	 edi, edx
  02a7a	c1 ff 07	 sar	 edi, 7
  02a7d	83 e7 01	 and	 edi, 1
  02a80	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02a83	33 f7		 xor	 esi, edi
  02a85	c1 fe 07	 sar	 esi, 7
  02a88	83 e6 01	 and	 esi, 1
  02a8b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02a8e	33 ce		 xor	 ecx, esi
  02a90	c1 f9 07	 sar	 ecx, 7
  02a93	83 e1 01	 and	 ecx, 1
  02a96	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02a99	33 c1		 xor	 eax, ecx
  02a9b	c1 f8 07	 sar	 eax, 7
  02a9e	83 e0 01	 and	 eax, 1
  02aa1	6b c0 1b	 imul	 eax, 27			; 0000001bH
  02aa4	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR tv9288[ebp]
  02aaa	33 c8		 xor	 ecx, eax
  02aac	c1 f9 07	 sar	 ecx, 7
  02aaf	83 e1 01	 and	 ecx, 1
  02ab2	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02ab5	8b 95 d0 fe ff
	ff		 mov	 edx, DWORD PTR tv9286[ebp]
  02abb	33 d1		 xor	 edx, ecx
  02abd	d1 e2		 shl	 edx, 1
  02abf	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  02ac3	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  02ac6	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  02aca	d1 e0		 shl	 eax, 1
  02acc	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02ad0	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02ad3	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  02ad7	c1 f9 07	 sar	 ecx, 7
  02ada	83 e1 01	 and	 ecx, 1
  02add	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02ae0	33 c1		 xor	 eax, ecx
  02ae2	d1 e0		 shl	 eax, 1
  02ae4	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02ae8	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02aeb	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  02aef	d1 e1		 shl	 ecx, 1
  02af1	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02af5	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02af8	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02afc	c1 fe 07	 sar	 esi, 7
  02aff	83 e6 01	 and	 esi, 1
  02b02	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02b05	33 ce		 xor	 ecx, esi
  02b07	c1 f9 07	 sar	 ecx, 7
  02b0a	83 e1 01	 and	 ecx, 1
  02b0d	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02b10	33 c1		 xor	 eax, ecx
  02b12	d1 e0		 shl	 eax, 1
  02b14	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02b18	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02b1b	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  02b1f	d1 e1		 shl	 ecx, 1
  02b21	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02b25	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02b28	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02b2c	c1 fe 07	 sar	 esi, 7
  02b2f	83 e6 01	 and	 esi, 1
  02b32	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02b35	33 ce		 xor	 ecx, esi
  02b37	d1 e1		 shl	 ecx, 1
  02b39	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02b3d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02b40	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02b44	d1 e6		 shl	 esi, 1
  02b46	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02b4a	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02b4d	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02b51	c1 ff 07	 sar	 edi, 7
  02b54	83 e7 01	 and	 edi, 1
  02b57	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02b5a	33 f7		 xor	 esi, edi
  02b5c	c1 fe 07	 sar	 esi, 7
  02b5f	83 e6 01	 and	 esi, 1
  02b62	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02b65	33 ce		 xor	 ecx, esi
  02b67	c1 f9 07	 sar	 ecx, 7
  02b6a	83 e1 01	 and	 ecx, 1
  02b6d	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02b70	33 c1		 xor	 eax, ecx
  02b72	d1 e0		 shl	 eax, 1
  02b74	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02b78	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02b7b	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  02b7f	d1 e1		 shl	 ecx, 1
  02b81	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02b85	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02b88	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02b8c	c1 fe 07	 sar	 esi, 7
  02b8f	83 e6 01	 and	 esi, 1
  02b92	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02b95	33 ce		 xor	 ecx, esi
  02b97	d1 e1		 shl	 ecx, 1
  02b99	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02b9d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02ba0	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02ba4	d1 e6		 shl	 esi, 1
  02ba6	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02baa	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02bad	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02bb1	c1 ff 07	 sar	 edi, 7
  02bb4	83 e7 01	 and	 edi, 1
  02bb7	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02bba	33 f7		 xor	 esi, edi
  02bbc	c1 fe 07	 sar	 esi, 7
  02bbf	83 e6 01	 and	 esi, 1
  02bc2	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02bc5	33 ce		 xor	 ecx, esi
  02bc7	d1 e1		 shl	 ecx, 1
  02bc9	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02bcd	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02bd0	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02bd4	d1 e6		 shl	 esi, 1
  02bd6	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02bda	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02bdd	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02be1	c1 ff 07	 sar	 edi, 7
  02be4	83 e7 01	 and	 edi, 1
  02be7	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02bea	33 f7		 xor	 esi, edi
  02bec	d1 e6		 shl	 esi, 1
  02bee	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02bf2	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02bf5	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02bf9	d1 e7		 shl	 edi, 1
  02bfb	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  02bff	89 95 c8 fe ff
	ff		 mov	 DWORD PTR tv9290[ebp], edx
  02c05	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  02c08	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  02c0c	c1 fa 07	 sar	 edx, 7
  02c0f	83 e2 01	 and	 edx, 1
  02c12	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02c15	33 fa		 xor	 edi, edx
  02c17	c1 ff 07	 sar	 edi, 7
  02c1a	83 e7 01	 and	 edi, 1
  02c1d	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02c20	33 f7		 xor	 esi, edi
  02c22	c1 fe 07	 sar	 esi, 7
  02c25	83 e6 01	 and	 esi, 1
  02c28	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02c2b	33 ce		 xor	 ecx, esi
  02c2d	c1 f9 07	 sar	 ecx, 7
  02c30	83 e1 01	 and	 ecx, 1
  02c33	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02c36	33 c1		 xor	 eax, ecx
  02c38	d1 e0		 shl	 eax, 1
  02c3a	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02c3e	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  02c41	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  02c45	d1 e1		 shl	 ecx, 1
  02c47	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  02c4b	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02c4e	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  02c52	c1 fa 07	 sar	 edx, 7
  02c55	83 e2 01	 and	 edx, 1
  02c58	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02c5b	33 ca		 xor	 ecx, edx
  02c5d	d1 e1		 shl	 ecx, 1
  02c5f	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  02c63	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02c66	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  02c6a	d1 e2		 shl	 edx, 1
  02c6c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02c70	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02c73	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02c77	c1 fe 07	 sar	 esi, 7
  02c7a	83 e6 01	 and	 esi, 1
  02c7d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02c80	33 d6		 xor	 edx, esi
  02c82	c1 fa 07	 sar	 edx, 7
  02c85	83 e2 01	 and	 edx, 1
  02c88	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02c8b	33 ca		 xor	 ecx, edx
  02c8d	d1 e1		 shl	 ecx, 1
  02c8f	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  02c93	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02c96	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  02c9a	d1 e2		 shl	 edx, 1
  02c9c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02ca0	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02ca3	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02ca7	c1 fe 07	 sar	 esi, 7
  02caa	83 e6 01	 and	 esi, 1
  02cad	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02cb0	33 d6		 xor	 edx, esi
  02cb2	d1 e2		 shl	 edx, 1
  02cb4	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02cb8	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02cbb	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02cbf	d1 e6		 shl	 esi, 1
  02cc1	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02cc5	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02cc8	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02ccc	c1 ff 07	 sar	 edi, 7
  02ccf	83 e7 01	 and	 edi, 1
  02cd2	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02cd5	33 f7		 xor	 esi, edi
  02cd7	c1 fe 07	 sar	 esi, 7
  02cda	83 e6 01	 and	 esi, 1
  02cdd	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02ce0	33 d6		 xor	 edx, esi
  02ce2	c1 fa 07	 sar	 edx, 7
  02ce5	83 e2 01	 and	 edx, 1
  02ce8	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02ceb	33 ca		 xor	 ecx, edx
  02ced	d1 e1		 shl	 ecx, 1
  02cef	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  02cf3	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02cf6	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  02cfa	d1 e2		 shl	 edx, 1
  02cfc	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02d00	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02d03	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02d07	c1 fe 07	 sar	 esi, 7
  02d0a	83 e6 01	 and	 esi, 1
  02d0d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02d10	33 d6		 xor	 edx, esi
  02d12	d1 e2		 shl	 edx, 1
  02d14	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02d18	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02d1b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02d1f	d1 e6		 shl	 esi, 1
  02d21	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02d25	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02d28	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02d2c	c1 ff 07	 sar	 edi, 7
  02d2f	83 e7 01	 and	 edi, 1
  02d32	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02d35	33 f7		 xor	 esi, edi
  02d37	c1 fe 07	 sar	 esi, 7
  02d3a	83 e6 01	 and	 esi, 1
  02d3d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02d40	33 d6		 xor	 edx, esi
  02d42	d1 e2		 shl	 edx, 1
  02d44	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02d48	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02d4b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02d4f	d1 e6		 shl	 esi, 1
  02d51	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02d55	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02d58	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02d5c	c1 ff 07	 sar	 edi, 7
  02d5f	83 e7 01	 and	 edi, 1
  02d62	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02d65	33 f7		 xor	 esi, edi
  02d67	d1 e6		 shl	 esi, 1
  02d69	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02d6d	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02d70	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02d74	d1 e7		 shl	 edi, 1
  02d76	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  02d7a	89 85 c4 fe ff
	ff		 mov	 DWORD PTR tv9292[ebp], eax
  02d80	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  02d83	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  02d87	c1 f8 07	 sar	 eax, 7
  02d8a	83 e0 01	 and	 eax, 1
  02d8d	6b c0 1b	 imul	 eax, 27			; 0000001bH
  02d90	33 f8		 xor	 edi, eax
  02d92	c1 ff 07	 sar	 edi, 7
  02d95	83 e7 01	 and	 edi, 1
  02d98	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02d9b	33 f7		 xor	 esi, edi
  02d9d	c1 fe 07	 sar	 esi, 7
  02da0	83 e6 01	 and	 esi, 1
  02da3	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02da6	33 d6		 xor	 edx, esi
  02da8	c1 fa 07	 sar	 edx, 7
  02dab	83 e2 01	 and	 edx, 1
  02dae	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02db1	33 ca		 xor	 ecx, edx
  02db3	c1 f9 07	 sar	 ecx, 7
  02db6	83 e1 01	 and	 ecx, 1
  02db9	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02dbc	8b 95 c4 fe ff
	ff		 mov	 edx, DWORD PTR tv9292[ebp]
  02dc2	33 d1		 xor	 edx, ecx
  02dc4	d1 e2		 shl	 edx, 1
  02dc6	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  02dca	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  02dcd	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  02dd1	d1 e0		 shl	 eax, 1
  02dd3	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02dd7	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02dda	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  02dde	c1 f9 07	 sar	 ecx, 7
  02de1	83 e1 01	 and	 ecx, 1
  02de4	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02de7	33 c1		 xor	 eax, ecx
  02de9	d1 e0		 shl	 eax, 1
  02deb	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02def	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02df2	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  02df6	d1 e1		 shl	 ecx, 1
  02df8	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02dfc	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02dff	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02e03	c1 fe 07	 sar	 esi, 7
  02e06	83 e6 01	 and	 esi, 1
  02e09	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02e0c	33 ce		 xor	 ecx, esi
  02e0e	c1 f9 07	 sar	 ecx, 7
  02e11	83 e1 01	 and	 ecx, 1
  02e14	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02e17	33 c1		 xor	 eax, ecx
  02e19	d1 e0		 shl	 eax, 1
  02e1b	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02e1f	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02e22	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  02e26	d1 e1		 shl	 ecx, 1
  02e28	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02e2c	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02e2f	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02e33	c1 fe 07	 sar	 esi, 7
  02e36	83 e6 01	 and	 esi, 1
  02e39	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02e3c	33 ce		 xor	 ecx, esi
  02e3e	d1 e1		 shl	 ecx, 1
  02e40	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02e44	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02e47	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02e4b	d1 e6		 shl	 esi, 1
  02e4d	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02e51	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02e54	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02e58	c1 ff 07	 sar	 edi, 7
  02e5b	83 e7 01	 and	 edi, 1
  02e5e	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02e61	33 f7		 xor	 esi, edi
  02e63	c1 fe 07	 sar	 esi, 7
  02e66	83 e6 01	 and	 esi, 1
  02e69	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02e6c	33 ce		 xor	 ecx, esi
  02e6e	c1 f9 07	 sar	 ecx, 7
  02e71	83 e1 01	 and	 ecx, 1
  02e74	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02e77	33 c1		 xor	 eax, ecx
  02e79	d1 e0		 shl	 eax, 1
  02e7b	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02e7f	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02e82	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  02e86	d1 e1		 shl	 ecx, 1
  02e88	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02e8c	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02e8f	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02e93	c1 fe 07	 sar	 esi, 7
  02e96	83 e6 01	 and	 esi, 1
  02e99	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02e9c	33 ce		 xor	 ecx, esi
  02e9e	d1 e1		 shl	 ecx, 1
  02ea0	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02ea4	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02ea7	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02eab	d1 e6		 shl	 esi, 1
  02ead	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02eb1	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02eb4	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02eb8	c1 ff 07	 sar	 edi, 7
  02ebb	83 e7 01	 and	 edi, 1
  02ebe	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02ec1	33 f7		 xor	 esi, edi
  02ec3	c1 fe 07	 sar	 esi, 7
  02ec6	83 e6 01	 and	 esi, 1
  02ec9	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02ecc	33 ce		 xor	 ecx, esi
  02ece	d1 e1		 shl	 ecx, 1
  02ed0	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02ed4	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02ed7	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02edb	d1 e6		 shl	 esi, 1
  02edd	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02ee1	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02ee4	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02ee8	c1 ff 07	 sar	 edi, 7
  02eeb	83 e7 01	 and	 edi, 1
  02eee	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02ef1	33 f7		 xor	 esi, edi
  02ef3	d1 e6		 shl	 esi, 1
  02ef5	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02ef9	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02efc	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02f00	d1 e7		 shl	 edi, 1
  02f02	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  02f06	89 95 c0 fe ff
	ff		 mov	 DWORD PTR tv9294[ebp], edx
  02f0c	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  02f0f	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  02f13	c1 fa 07	 sar	 edx, 7
  02f16	83 e2 01	 and	 edx, 1
  02f19	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02f1c	33 fa		 xor	 edi, edx
  02f1e	c1 ff 07	 sar	 edi, 7
  02f21	83 e7 01	 and	 edi, 1
  02f24	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02f27	33 f7		 xor	 esi, edi
  02f29	c1 fe 07	 sar	 esi, 7
  02f2c	83 e6 01	 and	 esi, 1
  02f2f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02f32	33 ce		 xor	 ecx, esi
  02f34	c1 f9 07	 sar	 ecx, 7
  02f37	83 e1 01	 and	 ecx, 1
  02f3a	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  02f3d	33 c1		 xor	 eax, ecx
  02f3f	d1 e0		 shl	 eax, 1
  02f41	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  02f45	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  02f48	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  02f4c	d1 e1		 shl	 ecx, 1
  02f4e	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  02f52	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02f55	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  02f59	c1 fa 07	 sar	 edx, 7
  02f5c	83 e2 01	 and	 edx, 1
  02f5f	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02f62	33 ca		 xor	 ecx, edx
  02f64	d1 e1		 shl	 ecx, 1
  02f66	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  02f6a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02f6d	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  02f71	d1 e2		 shl	 edx, 1
  02f73	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02f77	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02f7a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02f7e	c1 fe 07	 sar	 esi, 7
  02f81	83 e6 01	 and	 esi, 1
  02f84	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02f87	33 d6		 xor	 edx, esi
  02f89	c1 fa 07	 sar	 edx, 7
  02f8c	83 e2 01	 and	 edx, 1
  02f8f	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02f92	33 ca		 xor	 ecx, edx
  02f94	d1 e1		 shl	 ecx, 1
  02f96	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  02f9a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02f9d	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  02fa1	d1 e2		 shl	 edx, 1
  02fa3	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02fa7	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02faa	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02fae	c1 fe 07	 sar	 esi, 7
  02fb1	83 e6 01	 and	 esi, 1
  02fb4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02fb7	33 d6		 xor	 edx, esi
  02fb9	d1 e2		 shl	 edx, 1
  02fbb	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  02fbf	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  02fc2	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  02fc6	d1 e6		 shl	 esi, 1
  02fc8	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  02fcc	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  02fcf	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  02fd3	c1 ff 07	 sar	 edi, 7
  02fd6	83 e7 01	 and	 edi, 1
  02fd9	6b ff 1b	 imul	 edi, 27			; 0000001bH
  02fdc	33 f7		 xor	 esi, edi
  02fde	c1 fe 07	 sar	 esi, 7
  02fe1	83 e6 01	 and	 esi, 1
  02fe4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  02fe7	33 d6		 xor	 edx, esi
  02fe9	c1 fa 07	 sar	 edx, 7
  02fec	83 e2 01	 and	 edx, 1
  02fef	6b d2 1b	 imul	 edx, 27			; 0000001bH
  02ff2	33 ca		 xor	 ecx, edx
  02ff4	d1 e1		 shl	 ecx, 1
  02ff6	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  02ffa	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  02ffd	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  03001	d1 e2		 shl	 edx, 1
  03003	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03007	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0300a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0300e	c1 fe 07	 sar	 esi, 7
  03011	83 e6 01	 and	 esi, 1
  03014	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03017	33 d6		 xor	 edx, esi
  03019	d1 e2		 shl	 edx, 1
  0301b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0301f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03022	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03026	d1 e6		 shl	 esi, 1
  03028	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0302c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0302f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03033	c1 ff 07	 sar	 edi, 7
  03036	83 e7 01	 and	 edi, 1
  03039	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0303c	33 f7		 xor	 esi, edi
  0303e	c1 fe 07	 sar	 esi, 7
  03041	83 e6 01	 and	 esi, 1
  03044	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03047	33 d6		 xor	 edx, esi
  03049	d1 e2		 shl	 edx, 1
  0304b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0304f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03052	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03056	d1 e6		 shl	 esi, 1
  03058	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0305c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0305f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03063	c1 ff 07	 sar	 edi, 7
  03066	83 e7 01	 and	 edi, 1
  03069	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0306c	33 f7		 xor	 esi, edi
  0306e	d1 e6		 shl	 esi, 1
  03070	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03074	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03077	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0307b	d1 e7		 shl	 edi, 1
  0307d	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  03081	89 85 bc fe ff
	ff		 mov	 DWORD PTR tv9296[ebp], eax
  03087	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  0308a	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  0308e	c1 f8 07	 sar	 eax, 7
  03091	83 e0 01	 and	 eax, 1
  03094	6b c0 1b	 imul	 eax, 27			; 0000001bH
  03097	33 f8		 xor	 edi, eax
  03099	c1 ff 07	 sar	 edi, 7
  0309c	83 e7 01	 and	 edi, 1
  0309f	6b ff 1b	 imul	 edi, 27			; 0000001bH
  030a2	33 f7		 xor	 esi, edi
  030a4	c1 fe 07	 sar	 esi, 7
  030a7	83 e6 01	 and	 esi, 1
  030aa	6b f6 1b	 imul	 esi, 27			; 0000001bH
  030ad	33 d6		 xor	 edx, esi
  030af	c1 fa 07	 sar	 edx, 7
  030b2	83 e2 01	 and	 edx, 1
  030b5	6b d2 1b	 imul	 edx, 27			; 0000001bH
  030b8	33 ca		 xor	 ecx, edx
  030ba	c1 f9 07	 sar	 ecx, 7
  030bd	83 e1 01	 and	 ecx, 1
  030c0	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  030c3	8b 95 bc fe ff
	ff		 mov	 edx, DWORD PTR tv9296[ebp]
  030c9	33 d1		 xor	 edx, ecx
  030cb	c1 fa 07	 sar	 edx, 7
  030ce	83 e2 01	 and	 edx, 1
  030d1	6b d2 1b	 imul	 edx, 27			; 0000001bH
  030d4	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR tv9294[ebp]
  030da	33 c2		 xor	 eax, edx
  030dc	c1 f8 07	 sar	 eax, 7
  030df	83 e0 01	 and	 eax, 1
  030e2	6b c0 1b	 imul	 eax, 27			; 0000001bH
  030e5	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR tv9290[ebp]
  030eb	33 c8		 xor	 ecx, eax
  030ed	6b c9 00	 imul	 ecx, 0
  030f0	8b 95 d8 fe ff
	ff		 mov	 edx, DWORD PTR tv9282[ebp]
  030f6	33 d1		 xor	 edx, ecx
  030f8	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  030fc	88 54 05 e0	 mov	 BYTE PTR _tb$[ebp+eax], dl

; 600  : 		td[c] = MULTIPLY(r[c],0xd);

  03100	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  03104	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  03107	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  0310b	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0310f	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  03112	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  03116	d1 e0		 shl	 eax, 1
  03118	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0311c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0311f	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03123	c1 f9 07	 sar	 ecx, 7
  03126	83 e1 01	 and	 ecx, 1
  03129	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0312c	33 c1		 xor	 eax, ecx
  0312e	6b c0 00	 imul	 eax, 0
  03131	33 d0		 xor	 edx, eax
  03133	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  03137	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0313a	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  0313e	d1 e0		 shl	 eax, 1
  03140	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03144	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03147	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0314b	c1 f9 07	 sar	 ecx, 7
  0314e	83 e1 01	 and	 ecx, 1
  03151	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03154	33 c1		 xor	 eax, ecx
  03156	d1 e0		 shl	 eax, 1
  03158	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0315c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0315f	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03163	d1 e1		 shl	 ecx, 1
  03165	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03169	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0316c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03170	c1 fe 07	 sar	 esi, 7
  03173	83 e6 01	 and	 esi, 1
  03176	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03179	33 ce		 xor	 ecx, esi
  0317b	c1 f9 07	 sar	 ecx, 7
  0317e	83 e1 01	 and	 ecx, 1
  03181	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03184	33 c1		 xor	 eax, ecx
  03186	33 d0		 xor	 edx, eax
  03188	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0318c	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0318f	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  03193	d1 e0		 shl	 eax, 1
  03195	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03199	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0319c	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  031a0	c1 f9 07	 sar	 ecx, 7
  031a3	83 e1 01	 and	 ecx, 1
  031a6	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  031a9	33 c1		 xor	 eax, ecx
  031ab	d1 e0		 shl	 eax, 1
  031ad	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  031b1	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  031b4	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  031b8	d1 e1		 shl	 ecx, 1
  031ba	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  031be	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  031c1	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  031c5	c1 fe 07	 sar	 esi, 7
  031c8	83 e6 01	 and	 esi, 1
  031cb	6b f6 1b	 imul	 esi, 27			; 0000001bH
  031ce	33 ce		 xor	 ecx, esi
  031d0	c1 f9 07	 sar	 ecx, 7
  031d3	83 e1 01	 and	 ecx, 1
  031d6	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  031d9	33 c1		 xor	 eax, ecx
  031db	d1 e0		 shl	 eax, 1
  031dd	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  031e1	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  031e4	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  031e8	d1 e1		 shl	 ecx, 1
  031ea	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  031ee	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  031f1	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  031f5	c1 fe 07	 sar	 esi, 7
  031f8	83 e6 01	 and	 esi, 1
  031fb	6b f6 1b	 imul	 esi, 27			; 0000001bH
  031fe	33 ce		 xor	 ecx, esi
  03200	d1 e1		 shl	 ecx, 1
  03202	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03206	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03209	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0320d	d1 e6		 shl	 esi, 1
  0320f	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03213	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03216	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0321a	c1 ff 07	 sar	 edi, 7
  0321d	83 e7 01	 and	 edi, 1
  03220	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03223	33 f7		 xor	 esi, edi
  03225	c1 fe 07	 sar	 esi, 7
  03228	83 e6 01	 and	 esi, 1
  0322b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0322e	33 ce		 xor	 ecx, esi
  03230	c1 f9 07	 sar	 ecx, 7
  03233	83 e1 01	 and	 ecx, 1
  03236	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03239	33 c1		 xor	 eax, ecx
  0323b	33 d0		 xor	 edx, eax
  0323d	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  03241	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  03244	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  03248	d1 e0		 shl	 eax, 1
  0324a	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0324e	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03251	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03255	c1 f9 07	 sar	 ecx, 7
  03258	83 e1 01	 and	 ecx, 1
  0325b	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0325e	33 c1		 xor	 eax, ecx
  03260	d1 e0		 shl	 eax, 1
  03262	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03266	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03269	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0326d	d1 e1		 shl	 ecx, 1
  0326f	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03273	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03276	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0327a	c1 fe 07	 sar	 esi, 7
  0327d	83 e6 01	 and	 esi, 1
  03280	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03283	33 ce		 xor	 ecx, esi
  03285	c1 f9 07	 sar	 ecx, 7
  03288	83 e1 01	 and	 ecx, 1
  0328b	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0328e	33 c1		 xor	 eax, ecx
  03290	d1 e0		 shl	 eax, 1
  03292	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03296	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03299	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0329d	d1 e1		 shl	 ecx, 1
  0329f	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  032a3	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  032a6	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  032aa	c1 fe 07	 sar	 esi, 7
  032ad	83 e6 01	 and	 esi, 1
  032b0	6b f6 1b	 imul	 esi, 27			; 0000001bH
  032b3	33 ce		 xor	 ecx, esi
  032b5	d1 e1		 shl	 ecx, 1
  032b7	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  032bb	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  032be	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  032c2	d1 e6		 shl	 esi, 1
  032c4	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  032c8	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  032cb	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  032cf	c1 ff 07	 sar	 edi, 7
  032d2	83 e7 01	 and	 edi, 1
  032d5	6b ff 1b	 imul	 edi, 27			; 0000001bH
  032d8	33 f7		 xor	 esi, edi
  032da	c1 fe 07	 sar	 esi, 7
  032dd	83 e6 01	 and	 esi, 1
  032e0	6b f6 1b	 imul	 esi, 27			; 0000001bH
  032e3	33 ce		 xor	 ecx, esi
  032e5	c1 f9 07	 sar	 ecx, 7
  032e8	83 e1 01	 and	 ecx, 1
  032eb	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  032ee	33 c1		 xor	 eax, ecx
  032f0	d1 e0		 shl	 eax, 1
  032f2	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  032f6	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  032f9	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  032fd	d1 e1		 shl	 ecx, 1
  032ff	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03303	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03306	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0330a	c1 fe 07	 sar	 esi, 7
  0330d	83 e6 01	 and	 esi, 1
  03310	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03313	33 ce		 xor	 ecx, esi
  03315	d1 e1		 shl	 ecx, 1
  03317	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0331b	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0331e	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03322	d1 e6		 shl	 esi, 1
  03324	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03328	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0332b	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0332f	c1 ff 07	 sar	 edi, 7
  03332	83 e7 01	 and	 edi, 1
  03335	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03338	33 f7		 xor	 esi, edi
  0333a	c1 fe 07	 sar	 esi, 7
  0333d	83 e6 01	 and	 esi, 1
  03340	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03343	33 ce		 xor	 ecx, esi
  03345	d1 e1		 shl	 ecx, 1
  03347	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0334b	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0334e	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03352	d1 e6		 shl	 esi, 1
  03354	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03358	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0335b	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0335f	c1 ff 07	 sar	 edi, 7
  03362	83 e7 01	 and	 edi, 1
  03365	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03368	33 f7		 xor	 esi, edi
  0336a	d1 e6		 shl	 esi, 1
  0336c	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03370	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03373	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03377	d1 e7		 shl	 edi, 1
  03379	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  0337d	89 95 f4 fe ff
	ff		 mov	 DWORD PTR tv9298[ebp], edx
  03383	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  03386	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  0338a	c1 fa 07	 sar	 edx, 7
  0338d	83 e2 01	 and	 edx, 1
  03390	6b d2 1b	 imul	 edx, 27			; 0000001bH
  03393	33 fa		 xor	 edi, edx
  03395	c1 ff 07	 sar	 edi, 7
  03398	83 e7 01	 and	 edi, 1
  0339b	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0339e	33 f7		 xor	 esi, edi
  033a0	c1 fe 07	 sar	 esi, 7
  033a3	83 e6 01	 and	 esi, 1
  033a6	6b f6 1b	 imul	 esi, 27			; 0000001bH
  033a9	33 ce		 xor	 ecx, esi
  033ab	c1 f9 07	 sar	 ecx, 7
  033ae	83 e1 01	 and	 ecx, 1
  033b1	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  033b4	33 c1		 xor	 eax, ecx
  033b6	6b c0 00	 imul	 eax, 0
  033b9	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv9298[ebp]
  033bf	33 c8		 xor	 ecx, eax
  033c1	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  033c5	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  033c8	0f b6 14 10	 movzx	 edx, BYTE PTR [eax+edx]
  033cc	d1 e2		 shl	 edx, 1
  033ce	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  033d2	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  033d5	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  033d9	c1 f8 07	 sar	 eax, 7
  033dc	83 e0 01	 and	 eax, 1
  033df	6b c0 1b	 imul	 eax, 27			; 0000001bH
  033e2	33 d0		 xor	 edx, eax
  033e4	d1 e2		 shl	 edx, 1
  033e6	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  033ea	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  033ed	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  033f1	d1 e0		 shl	 eax, 1
  033f3	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  033f7	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  033fa	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  033fe	c1 fe 07	 sar	 esi, 7
  03401	83 e6 01	 and	 esi, 1
  03404	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03407	33 c6		 xor	 eax, esi
  03409	c1 f8 07	 sar	 eax, 7
  0340c	83 e0 01	 and	 eax, 1
  0340f	6b c0 1b	 imul	 eax, 27			; 0000001bH
  03412	33 d0		 xor	 edx, eax
  03414	d1 e2		 shl	 edx, 1
  03416	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0341a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0341d	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  03421	d1 e0		 shl	 eax, 1
  03423	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03427	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0342a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0342e	c1 fe 07	 sar	 esi, 7
  03431	83 e6 01	 and	 esi, 1
  03434	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03437	33 c6		 xor	 eax, esi
  03439	d1 e0		 shl	 eax, 1
  0343b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0343f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03442	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03446	d1 e6		 shl	 esi, 1
  03448	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0344c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0344f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03453	c1 ff 07	 sar	 edi, 7
  03456	83 e7 01	 and	 edi, 1
  03459	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0345c	33 f7		 xor	 esi, edi
  0345e	c1 fe 07	 sar	 esi, 7
  03461	83 e6 01	 and	 esi, 1
  03464	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03467	33 c6		 xor	 eax, esi
  03469	c1 f8 07	 sar	 eax, 7
  0346c	83 e0 01	 and	 eax, 1
  0346f	6b c0 1b	 imul	 eax, 27			; 0000001bH
  03472	33 d0		 xor	 edx, eax
  03474	d1 e2		 shl	 edx, 1
  03476	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0347a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0347d	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  03481	d1 e0		 shl	 eax, 1
  03483	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03487	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0348a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0348e	c1 fe 07	 sar	 esi, 7
  03491	83 e6 01	 and	 esi, 1
  03494	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03497	33 c6		 xor	 eax, esi
  03499	d1 e0		 shl	 eax, 1
  0349b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0349f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  034a2	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  034a6	d1 e6		 shl	 esi, 1
  034a8	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  034ac	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  034af	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  034b3	c1 ff 07	 sar	 edi, 7
  034b6	83 e7 01	 and	 edi, 1
  034b9	6b ff 1b	 imul	 edi, 27			; 0000001bH
  034bc	33 f7		 xor	 esi, edi
  034be	c1 fe 07	 sar	 esi, 7
  034c1	83 e6 01	 and	 esi, 1
  034c4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  034c7	33 c6		 xor	 eax, esi
  034c9	d1 e0		 shl	 eax, 1
  034cb	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  034cf	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  034d2	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  034d6	d1 e6		 shl	 esi, 1
  034d8	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  034dc	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  034df	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  034e3	c1 ff 07	 sar	 edi, 7
  034e6	83 e7 01	 and	 edi, 1
  034e9	6b ff 1b	 imul	 edi, 27			; 0000001bH
  034ec	33 f7		 xor	 esi, edi
  034ee	d1 e6		 shl	 esi, 1
  034f0	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  034f4	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  034f7	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  034fb	d1 e7		 shl	 edi, 1
  034fd	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  03501	89 8d f0 fe ff
	ff		 mov	 DWORD PTR tv9300[ebp], ecx
  03507	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0350a	0f b6 0c 19	 movzx	 ecx, BYTE PTR [ecx+ebx]
  0350e	c1 f9 07	 sar	 ecx, 7
  03511	83 e1 01	 and	 ecx, 1
  03514	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03517	33 f9		 xor	 edi, ecx
  03519	c1 ff 07	 sar	 edi, 7
  0351c	83 e7 01	 and	 edi, 1
  0351f	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03522	33 f7		 xor	 esi, edi
  03524	c1 fe 07	 sar	 esi, 7
  03527	83 e6 01	 and	 esi, 1
  0352a	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0352d	33 c6		 xor	 eax, esi
  0352f	c1 f8 07	 sar	 eax, 7
  03532	83 e0 01	 and	 eax, 1
  03535	6b c0 1b	 imul	 eax, 27			; 0000001bH
  03538	33 d0		 xor	 edx, eax
  0353a	d1 e2		 shl	 edx, 1
  0353c	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  03540	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  03543	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  03547	d1 e0		 shl	 eax, 1
  03549	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0354d	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03550	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03554	c1 f9 07	 sar	 ecx, 7
  03557	83 e1 01	 and	 ecx, 1
  0355a	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0355d	33 c1		 xor	 eax, ecx
  0355f	d1 e0		 shl	 eax, 1
  03561	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03565	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03568	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0356c	d1 e1		 shl	 ecx, 1
  0356e	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03572	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03575	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03579	c1 fe 07	 sar	 esi, 7
  0357c	83 e6 01	 and	 esi, 1
  0357f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03582	33 ce		 xor	 ecx, esi
  03584	c1 f9 07	 sar	 ecx, 7
  03587	83 e1 01	 and	 ecx, 1
  0358a	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0358d	33 c1		 xor	 eax, ecx
  0358f	d1 e0		 shl	 eax, 1
  03591	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03595	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03598	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0359c	d1 e1		 shl	 ecx, 1
  0359e	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  035a2	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  035a5	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  035a9	c1 fe 07	 sar	 esi, 7
  035ac	83 e6 01	 and	 esi, 1
  035af	6b f6 1b	 imul	 esi, 27			; 0000001bH
  035b2	33 ce		 xor	 ecx, esi
  035b4	d1 e1		 shl	 ecx, 1
  035b6	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  035ba	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  035bd	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  035c1	d1 e6		 shl	 esi, 1
  035c3	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  035c7	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  035ca	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  035ce	c1 ff 07	 sar	 edi, 7
  035d1	83 e7 01	 and	 edi, 1
  035d4	6b ff 1b	 imul	 edi, 27			; 0000001bH
  035d7	33 f7		 xor	 esi, edi
  035d9	c1 fe 07	 sar	 esi, 7
  035dc	83 e6 01	 and	 esi, 1
  035df	6b f6 1b	 imul	 esi, 27			; 0000001bH
  035e2	33 ce		 xor	 ecx, esi
  035e4	c1 f9 07	 sar	 ecx, 7
  035e7	83 e1 01	 and	 ecx, 1
  035ea	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  035ed	33 c1		 xor	 eax, ecx
  035ef	d1 e0		 shl	 eax, 1
  035f1	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  035f5	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  035f8	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  035fc	d1 e1		 shl	 ecx, 1
  035fe	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03602	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03605	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03609	c1 fe 07	 sar	 esi, 7
  0360c	83 e6 01	 and	 esi, 1
  0360f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03612	33 ce		 xor	 ecx, esi
  03614	d1 e1		 shl	 ecx, 1
  03616	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0361a	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0361d	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03621	d1 e6		 shl	 esi, 1
  03623	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03627	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0362a	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0362e	c1 ff 07	 sar	 edi, 7
  03631	83 e7 01	 and	 edi, 1
  03634	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03637	33 f7		 xor	 esi, edi
  03639	c1 fe 07	 sar	 esi, 7
  0363c	83 e6 01	 and	 esi, 1
  0363f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03642	33 ce		 xor	 ecx, esi
  03644	d1 e1		 shl	 ecx, 1
  03646	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0364a	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0364d	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03651	d1 e6		 shl	 esi, 1
  03653	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03657	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0365a	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0365e	c1 ff 07	 sar	 edi, 7
  03661	83 e7 01	 and	 edi, 1
  03664	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03667	33 f7		 xor	 esi, edi
  03669	d1 e6		 shl	 esi, 1
  0366b	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0366f	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03672	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03676	d1 e7		 shl	 edi, 1
  03678	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  0367c	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv9302[ebp], edx
  03682	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  03685	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  03689	c1 fa 07	 sar	 edx, 7
  0368c	83 e2 01	 and	 edx, 1
  0368f	6b d2 1b	 imul	 edx, 27			; 0000001bH
  03692	33 fa		 xor	 edi, edx
  03694	c1 ff 07	 sar	 edi, 7
  03697	83 e7 01	 and	 edi, 1
  0369a	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0369d	33 f7		 xor	 esi, edi
  0369f	c1 fe 07	 sar	 esi, 7
  036a2	83 e6 01	 and	 esi, 1
  036a5	6b f6 1b	 imul	 esi, 27			; 0000001bH
  036a8	33 ce		 xor	 ecx, esi
  036aa	c1 f9 07	 sar	 ecx, 7
  036ad	83 e1 01	 and	 ecx, 1
  036b0	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  036b3	33 c1		 xor	 eax, ecx
  036b5	c1 f8 07	 sar	 eax, 7
  036b8	83 e0 01	 and	 eax, 1
  036bb	6b c0 1b	 imul	 eax, 27			; 0000001bH
  036be	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR tv9302[ebp]
  036c4	33 c8		 xor	 ecx, eax
  036c6	6b c9 00	 imul	 ecx, 0
  036c9	8b 95 f0 fe ff
	ff		 mov	 edx, DWORD PTR tv9300[ebp]
  036cf	33 d1		 xor	 edx, ecx
  036d1	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  036d5	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  036d8	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  036dc	d1 e0		 shl	 eax, 1
  036de	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  036e2	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  036e5	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  036e9	c1 f9 07	 sar	 ecx, 7
  036ec	83 e1 01	 and	 ecx, 1
  036ef	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  036f2	33 c1		 xor	 eax, ecx
  036f4	d1 e0		 shl	 eax, 1
  036f6	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  036fa	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  036fd	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03701	d1 e1		 shl	 ecx, 1
  03703	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03707	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0370a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0370e	c1 fe 07	 sar	 esi, 7
  03711	83 e6 01	 and	 esi, 1
  03714	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03717	33 ce		 xor	 ecx, esi
  03719	c1 f9 07	 sar	 ecx, 7
  0371c	83 e1 01	 and	 ecx, 1
  0371f	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03722	33 c1		 xor	 eax, ecx
  03724	d1 e0		 shl	 eax, 1
  03726	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0372a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0372d	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03731	d1 e1		 shl	 ecx, 1
  03733	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03737	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0373a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0373e	c1 fe 07	 sar	 esi, 7
  03741	83 e6 01	 and	 esi, 1
  03744	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03747	33 ce		 xor	 ecx, esi
  03749	d1 e1		 shl	 ecx, 1
  0374b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0374f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03752	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03756	d1 e6		 shl	 esi, 1
  03758	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0375c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0375f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03763	c1 ff 07	 sar	 edi, 7
  03766	83 e7 01	 and	 edi, 1
  03769	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0376c	33 f7		 xor	 esi, edi
  0376e	c1 fe 07	 sar	 esi, 7
  03771	83 e6 01	 and	 esi, 1
  03774	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03777	33 ce		 xor	 ecx, esi
  03779	c1 f9 07	 sar	 ecx, 7
  0377c	83 e1 01	 and	 ecx, 1
  0377f	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03782	33 c1		 xor	 eax, ecx
  03784	d1 e0		 shl	 eax, 1
  03786	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0378a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0378d	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03791	d1 e1		 shl	 ecx, 1
  03793	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03797	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0379a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0379e	c1 fe 07	 sar	 esi, 7
  037a1	83 e6 01	 and	 esi, 1
  037a4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  037a7	33 ce		 xor	 ecx, esi
  037a9	d1 e1		 shl	 ecx, 1
  037ab	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  037af	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  037b2	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  037b6	d1 e6		 shl	 esi, 1
  037b8	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  037bc	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  037bf	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  037c3	c1 ff 07	 sar	 edi, 7
  037c6	83 e7 01	 and	 edi, 1
  037c9	6b ff 1b	 imul	 edi, 27			; 0000001bH
  037cc	33 f7		 xor	 esi, edi
  037ce	c1 fe 07	 sar	 esi, 7
  037d1	83 e6 01	 and	 esi, 1
  037d4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  037d7	33 ce		 xor	 ecx, esi
  037d9	d1 e1		 shl	 ecx, 1
  037db	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  037df	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  037e2	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  037e6	d1 e6		 shl	 esi, 1
  037e8	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  037ec	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  037ef	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  037f3	c1 ff 07	 sar	 edi, 7
  037f6	83 e7 01	 and	 edi, 1
  037f9	6b ff 1b	 imul	 edi, 27			; 0000001bH
  037fc	33 f7		 xor	 esi, edi
  037fe	d1 e6		 shl	 esi, 1
  03800	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03804	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03807	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0380b	d1 e7		 shl	 edi, 1
  0380d	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  03811	89 95 e8 fe ff
	ff		 mov	 DWORD PTR tv9304[ebp], edx
  03817	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  0381a	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  0381e	c1 fa 07	 sar	 edx, 7
  03821	83 e2 01	 and	 edx, 1
  03824	6b d2 1b	 imul	 edx, 27			; 0000001bH
  03827	33 fa		 xor	 edi, edx
  03829	c1 ff 07	 sar	 edi, 7
  0382c	83 e7 01	 and	 edi, 1
  0382f	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03832	33 f7		 xor	 esi, edi
  03834	c1 fe 07	 sar	 esi, 7
  03837	83 e6 01	 and	 esi, 1
  0383a	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0383d	33 ce		 xor	 ecx, esi
  0383f	c1 f9 07	 sar	 ecx, 7
  03842	83 e1 01	 and	 ecx, 1
  03845	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03848	33 c1		 xor	 eax, ecx
  0384a	d1 e0		 shl	 eax, 1
  0384c	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03850	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  03853	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  03857	d1 e1		 shl	 ecx, 1
  03859	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  0385d	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03860	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  03864	c1 fa 07	 sar	 edx, 7
  03867	83 e2 01	 and	 edx, 1
  0386a	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0386d	33 ca		 xor	 ecx, edx
  0386f	d1 e1		 shl	 ecx, 1
  03871	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  03875	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03878	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  0387c	d1 e2		 shl	 edx, 1
  0387e	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03882	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03885	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03889	c1 fe 07	 sar	 esi, 7
  0388c	83 e6 01	 and	 esi, 1
  0388f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03892	33 d6		 xor	 edx, esi
  03894	c1 fa 07	 sar	 edx, 7
  03897	83 e2 01	 and	 edx, 1
  0389a	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0389d	33 ca		 xor	 ecx, edx
  0389f	d1 e1		 shl	 ecx, 1
  038a1	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  038a5	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  038a8	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  038ac	d1 e2		 shl	 edx, 1
  038ae	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  038b2	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  038b5	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  038b9	c1 fe 07	 sar	 esi, 7
  038bc	83 e6 01	 and	 esi, 1
  038bf	6b f6 1b	 imul	 esi, 27			; 0000001bH
  038c2	33 d6		 xor	 edx, esi
  038c4	d1 e2		 shl	 edx, 1
  038c6	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  038ca	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  038cd	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  038d1	d1 e6		 shl	 esi, 1
  038d3	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  038d7	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  038da	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  038de	c1 ff 07	 sar	 edi, 7
  038e1	83 e7 01	 and	 edi, 1
  038e4	6b ff 1b	 imul	 edi, 27			; 0000001bH
  038e7	33 f7		 xor	 esi, edi
  038e9	c1 fe 07	 sar	 esi, 7
  038ec	83 e6 01	 and	 esi, 1
  038ef	6b f6 1b	 imul	 esi, 27			; 0000001bH
  038f2	33 d6		 xor	 edx, esi
  038f4	c1 fa 07	 sar	 edx, 7
  038f7	83 e2 01	 and	 edx, 1
  038fa	6b d2 1b	 imul	 edx, 27			; 0000001bH
  038fd	33 ca		 xor	 ecx, edx
  038ff	d1 e1		 shl	 ecx, 1
  03901	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  03905	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03908	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  0390c	d1 e2		 shl	 edx, 1
  0390e	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03912	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03915	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03919	c1 fe 07	 sar	 esi, 7
  0391c	83 e6 01	 and	 esi, 1
  0391f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03922	33 d6		 xor	 edx, esi
  03924	d1 e2		 shl	 edx, 1
  03926	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0392a	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0392d	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03931	d1 e6		 shl	 esi, 1
  03933	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03937	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0393a	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0393e	c1 ff 07	 sar	 edi, 7
  03941	83 e7 01	 and	 edi, 1
  03944	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03947	33 f7		 xor	 esi, edi
  03949	c1 fe 07	 sar	 esi, 7
  0394c	83 e6 01	 and	 esi, 1
  0394f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03952	33 d6		 xor	 edx, esi
  03954	d1 e2		 shl	 edx, 1
  03956	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0395a	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0395d	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03961	d1 e6		 shl	 esi, 1
  03963	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03967	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0396a	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0396e	c1 ff 07	 sar	 edi, 7
  03971	83 e7 01	 and	 edi, 1
  03974	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03977	33 f7		 xor	 esi, edi
  03979	d1 e6		 shl	 esi, 1
  0397b	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0397f	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03982	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03986	d1 e7		 shl	 edi, 1
  03988	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  0398c	89 85 e4 fe ff
	ff		 mov	 DWORD PTR tv9306[ebp], eax
  03992	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  03995	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  03999	c1 f8 07	 sar	 eax, 7
  0399c	83 e0 01	 and	 eax, 1
  0399f	6b c0 1b	 imul	 eax, 27			; 0000001bH
  039a2	33 f8		 xor	 edi, eax
  039a4	c1 ff 07	 sar	 edi, 7
  039a7	83 e7 01	 and	 edi, 1
  039aa	6b ff 1b	 imul	 edi, 27			; 0000001bH
  039ad	33 f7		 xor	 esi, edi
  039af	c1 fe 07	 sar	 esi, 7
  039b2	83 e6 01	 and	 esi, 1
  039b5	6b f6 1b	 imul	 esi, 27			; 0000001bH
  039b8	33 d6		 xor	 edx, esi
  039ba	c1 fa 07	 sar	 edx, 7
  039bd	83 e2 01	 and	 edx, 1
  039c0	6b d2 1b	 imul	 edx, 27			; 0000001bH
  039c3	33 ca		 xor	 ecx, edx
  039c5	c1 f9 07	 sar	 ecx, 7
  039c8	83 e1 01	 and	 ecx, 1
  039cb	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  039ce	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR tv9306[ebp]
  039d4	33 d1		 xor	 edx, ecx
  039d6	d1 e2		 shl	 edx, 1
  039d8	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  039dc	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  039df	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  039e3	d1 e0		 shl	 eax, 1
  039e5	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  039e9	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  039ec	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  039f0	c1 f9 07	 sar	 ecx, 7
  039f3	83 e1 01	 and	 ecx, 1
  039f6	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  039f9	33 c1		 xor	 eax, ecx
  039fb	d1 e0		 shl	 eax, 1
  039fd	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03a01	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03a04	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03a08	d1 e1		 shl	 ecx, 1
  03a0a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03a0e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03a11	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03a15	c1 fe 07	 sar	 esi, 7
  03a18	83 e6 01	 and	 esi, 1
  03a1b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03a1e	33 ce		 xor	 ecx, esi
  03a20	c1 f9 07	 sar	 ecx, 7
  03a23	83 e1 01	 and	 ecx, 1
  03a26	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03a29	33 c1		 xor	 eax, ecx
  03a2b	d1 e0		 shl	 eax, 1
  03a2d	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03a31	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03a34	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03a38	d1 e1		 shl	 ecx, 1
  03a3a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03a3e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03a41	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03a45	c1 fe 07	 sar	 esi, 7
  03a48	83 e6 01	 and	 esi, 1
  03a4b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03a4e	33 ce		 xor	 ecx, esi
  03a50	d1 e1		 shl	 ecx, 1
  03a52	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03a56	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03a59	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03a5d	d1 e6		 shl	 esi, 1
  03a5f	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03a63	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03a66	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03a6a	c1 ff 07	 sar	 edi, 7
  03a6d	83 e7 01	 and	 edi, 1
  03a70	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03a73	33 f7		 xor	 esi, edi
  03a75	c1 fe 07	 sar	 esi, 7
  03a78	83 e6 01	 and	 esi, 1
  03a7b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03a7e	33 ce		 xor	 ecx, esi
  03a80	c1 f9 07	 sar	 ecx, 7
  03a83	83 e1 01	 and	 ecx, 1
  03a86	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03a89	33 c1		 xor	 eax, ecx
  03a8b	d1 e0		 shl	 eax, 1
  03a8d	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03a91	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03a94	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03a98	d1 e1		 shl	 ecx, 1
  03a9a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03a9e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03aa1	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03aa5	c1 fe 07	 sar	 esi, 7
  03aa8	83 e6 01	 and	 esi, 1
  03aab	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03aae	33 ce		 xor	 ecx, esi
  03ab0	d1 e1		 shl	 ecx, 1
  03ab2	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03ab6	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03ab9	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03abd	d1 e6		 shl	 esi, 1
  03abf	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03ac3	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03ac6	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03aca	c1 ff 07	 sar	 edi, 7
  03acd	83 e7 01	 and	 edi, 1
  03ad0	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03ad3	33 f7		 xor	 esi, edi
  03ad5	c1 fe 07	 sar	 esi, 7
  03ad8	83 e6 01	 and	 esi, 1
  03adb	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03ade	33 ce		 xor	 ecx, esi
  03ae0	d1 e1		 shl	 ecx, 1
  03ae2	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03ae6	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03ae9	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03aed	d1 e6		 shl	 esi, 1
  03aef	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03af3	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03af6	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03afa	c1 ff 07	 sar	 edi, 7
  03afd	83 e7 01	 and	 edi, 1
  03b00	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03b03	33 f7		 xor	 esi, edi
  03b05	d1 e6		 shl	 esi, 1
  03b07	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03b0b	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03b0e	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03b12	d1 e7		 shl	 edi, 1
  03b14	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  03b18	89 95 e0 fe ff
	ff		 mov	 DWORD PTR tv9308[ebp], edx
  03b1e	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  03b21	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  03b25	c1 fa 07	 sar	 edx, 7
  03b28	83 e2 01	 and	 edx, 1
  03b2b	6b d2 1b	 imul	 edx, 27			; 0000001bH
  03b2e	33 fa		 xor	 edi, edx
  03b30	c1 ff 07	 sar	 edi, 7
  03b33	83 e7 01	 and	 edi, 1
  03b36	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03b39	33 f7		 xor	 esi, edi
  03b3b	c1 fe 07	 sar	 esi, 7
  03b3e	83 e6 01	 and	 esi, 1
  03b41	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03b44	33 ce		 xor	 ecx, esi
  03b46	c1 f9 07	 sar	 ecx, 7
  03b49	83 e1 01	 and	 ecx, 1
  03b4c	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03b4f	33 c1		 xor	 eax, ecx
  03b51	d1 e0		 shl	 eax, 1
  03b53	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03b57	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  03b5a	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  03b5e	d1 e1		 shl	 ecx, 1
  03b60	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  03b64	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03b67	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  03b6b	c1 fa 07	 sar	 edx, 7
  03b6e	83 e2 01	 and	 edx, 1
  03b71	6b d2 1b	 imul	 edx, 27			; 0000001bH
  03b74	33 ca		 xor	 ecx, edx
  03b76	d1 e1		 shl	 ecx, 1
  03b78	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  03b7c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03b7f	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  03b83	d1 e2		 shl	 edx, 1
  03b85	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03b89	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03b8c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03b90	c1 fe 07	 sar	 esi, 7
  03b93	83 e6 01	 and	 esi, 1
  03b96	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03b99	33 d6		 xor	 edx, esi
  03b9b	c1 fa 07	 sar	 edx, 7
  03b9e	83 e2 01	 and	 edx, 1
  03ba1	6b d2 1b	 imul	 edx, 27			; 0000001bH
  03ba4	33 ca		 xor	 ecx, edx
  03ba6	d1 e1		 shl	 ecx, 1
  03ba8	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  03bac	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03baf	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  03bb3	d1 e2		 shl	 edx, 1
  03bb5	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03bb9	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03bbc	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03bc0	c1 fe 07	 sar	 esi, 7
  03bc3	83 e6 01	 and	 esi, 1
  03bc6	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03bc9	33 d6		 xor	 edx, esi
  03bcb	d1 e2		 shl	 edx, 1
  03bcd	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03bd1	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03bd4	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03bd8	d1 e6		 shl	 esi, 1
  03bda	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03bde	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03be1	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03be5	c1 ff 07	 sar	 edi, 7
  03be8	83 e7 01	 and	 edi, 1
  03beb	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03bee	33 f7		 xor	 esi, edi
  03bf0	c1 fe 07	 sar	 esi, 7
  03bf3	83 e6 01	 and	 esi, 1
  03bf6	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03bf9	33 d6		 xor	 edx, esi
  03bfb	c1 fa 07	 sar	 edx, 7
  03bfe	83 e2 01	 and	 edx, 1
  03c01	6b d2 1b	 imul	 edx, 27			; 0000001bH
  03c04	33 ca		 xor	 ecx, edx
  03c06	d1 e1		 shl	 ecx, 1
  03c08	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  03c0c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03c0f	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  03c13	d1 e2		 shl	 edx, 1
  03c15	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03c19	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03c1c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03c20	c1 fe 07	 sar	 esi, 7
  03c23	83 e6 01	 and	 esi, 1
  03c26	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03c29	33 d6		 xor	 edx, esi
  03c2b	d1 e2		 shl	 edx, 1
  03c2d	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03c31	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03c34	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03c38	d1 e6		 shl	 esi, 1
  03c3a	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03c3e	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03c41	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03c45	c1 ff 07	 sar	 edi, 7
  03c48	83 e7 01	 and	 edi, 1
  03c4b	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03c4e	33 f7		 xor	 esi, edi
  03c50	c1 fe 07	 sar	 esi, 7
  03c53	83 e6 01	 and	 esi, 1
  03c56	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03c59	33 d6		 xor	 edx, esi
  03c5b	d1 e2		 shl	 edx, 1
  03c5d	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03c61	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03c64	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03c68	d1 e6		 shl	 esi, 1
  03c6a	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03c6e	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03c71	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03c75	c1 ff 07	 sar	 edi, 7
  03c78	83 e7 01	 and	 edi, 1
  03c7b	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03c7e	33 f7		 xor	 esi, edi
  03c80	d1 e6		 shl	 esi, 1
  03c82	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03c86	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03c89	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03c8d	d1 e7		 shl	 edi, 1
  03c8f	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  03c93	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv9310[ebp], eax
  03c99	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  03c9c	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  03ca0	c1 f8 07	 sar	 eax, 7
  03ca3	83 e0 01	 and	 eax, 1
  03ca6	6b c0 1b	 imul	 eax, 27			; 0000001bH
  03ca9	33 f8		 xor	 edi, eax
  03cab	c1 ff 07	 sar	 edi, 7
  03cae	83 e7 01	 and	 edi, 1
  03cb1	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03cb4	33 f7		 xor	 esi, edi
  03cb6	c1 fe 07	 sar	 esi, 7
  03cb9	83 e6 01	 and	 esi, 1
  03cbc	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03cbf	33 d6		 xor	 edx, esi
  03cc1	c1 fa 07	 sar	 edx, 7
  03cc4	83 e2 01	 and	 edx, 1
  03cc7	6b d2 1b	 imul	 edx, 27			; 0000001bH
  03cca	33 ca		 xor	 ecx, edx
  03ccc	c1 f9 07	 sar	 ecx, 7
  03ccf	83 e1 01	 and	 ecx, 1
  03cd2	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03cd5	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR tv9310[ebp]
  03cdb	33 d1		 xor	 edx, ecx
  03cdd	c1 fa 07	 sar	 edx, 7
  03ce0	83 e2 01	 and	 edx, 1
  03ce3	6b d2 1b	 imul	 edx, 27			; 0000001bH
  03ce6	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv9308[ebp]
  03cec	33 c2		 xor	 eax, edx
  03cee	6b c0 00	 imul	 eax, 0
  03cf1	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR tv9304[ebp]
  03cf7	33 c8		 xor	 ecx, eax
  03cf9	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  03cfd	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  03d00	0f b6 14 10	 movzx	 edx, BYTE PTR [eax+edx]
  03d04	d1 e2		 shl	 edx, 1
  03d06	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  03d0a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03d0d	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  03d11	c1 f8 07	 sar	 eax, 7
  03d14	83 e0 01	 and	 eax, 1
  03d17	6b c0 1b	 imul	 eax, 27			; 0000001bH
  03d1a	33 d0		 xor	 edx, eax
  03d1c	d1 e2		 shl	 edx, 1
  03d1e	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  03d22	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03d25	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  03d29	d1 e0		 shl	 eax, 1
  03d2b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03d2f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03d32	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03d36	c1 fe 07	 sar	 esi, 7
  03d39	83 e6 01	 and	 esi, 1
  03d3c	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03d3f	33 c6		 xor	 eax, esi
  03d41	c1 f8 07	 sar	 eax, 7
  03d44	83 e0 01	 and	 eax, 1
  03d47	6b c0 1b	 imul	 eax, 27			; 0000001bH
  03d4a	33 d0		 xor	 edx, eax
  03d4c	d1 e2		 shl	 edx, 1
  03d4e	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  03d52	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03d55	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  03d59	d1 e0		 shl	 eax, 1
  03d5b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03d5f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03d62	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03d66	c1 fe 07	 sar	 esi, 7
  03d69	83 e6 01	 and	 esi, 1
  03d6c	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03d6f	33 c6		 xor	 eax, esi
  03d71	d1 e0		 shl	 eax, 1
  03d73	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03d77	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03d7a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03d7e	d1 e6		 shl	 esi, 1
  03d80	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03d84	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03d87	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03d8b	c1 ff 07	 sar	 edi, 7
  03d8e	83 e7 01	 and	 edi, 1
  03d91	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03d94	33 f7		 xor	 esi, edi
  03d96	c1 fe 07	 sar	 esi, 7
  03d99	83 e6 01	 and	 esi, 1
  03d9c	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03d9f	33 c6		 xor	 eax, esi
  03da1	c1 f8 07	 sar	 eax, 7
  03da4	83 e0 01	 and	 eax, 1
  03da7	6b c0 1b	 imul	 eax, 27			; 0000001bH
  03daa	33 d0		 xor	 edx, eax
  03dac	d1 e2		 shl	 edx, 1
  03dae	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  03db2	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03db5	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  03db9	d1 e0		 shl	 eax, 1
  03dbb	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03dbf	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03dc2	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03dc6	c1 fe 07	 sar	 esi, 7
  03dc9	83 e6 01	 and	 esi, 1
  03dcc	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03dcf	33 c6		 xor	 eax, esi
  03dd1	d1 e0		 shl	 eax, 1
  03dd3	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03dd7	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03dda	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03dde	d1 e6		 shl	 esi, 1
  03de0	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03de4	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03de7	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03deb	c1 ff 07	 sar	 edi, 7
  03dee	83 e7 01	 and	 edi, 1
  03df1	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03df4	33 f7		 xor	 esi, edi
  03df6	c1 fe 07	 sar	 esi, 7
  03df9	83 e6 01	 and	 esi, 1
  03dfc	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03dff	33 c6		 xor	 eax, esi
  03e01	d1 e0		 shl	 eax, 1
  03e03	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03e07	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03e0a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03e0e	d1 e6		 shl	 esi, 1
  03e10	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03e14	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03e17	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03e1b	c1 ff 07	 sar	 edi, 7
  03e1e	83 e7 01	 and	 edi, 1
  03e21	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03e24	33 f7		 xor	 esi, edi
  03e26	d1 e6		 shl	 esi, 1
  03e28	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03e2c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03e2f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03e33	d1 e7		 shl	 edi, 1
  03e35	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  03e39	89 8d d8 fe ff
	ff		 mov	 DWORD PTR tv9312[ebp], ecx
  03e3f	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  03e42	0f b6 0c 19	 movzx	 ecx, BYTE PTR [ecx+ebx]
  03e46	c1 f9 07	 sar	 ecx, 7
  03e49	83 e1 01	 and	 ecx, 1
  03e4c	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03e4f	33 f9		 xor	 edi, ecx
  03e51	c1 ff 07	 sar	 edi, 7
  03e54	83 e7 01	 and	 edi, 1
  03e57	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03e5a	33 f7		 xor	 esi, edi
  03e5c	c1 fe 07	 sar	 esi, 7
  03e5f	83 e6 01	 and	 esi, 1
  03e62	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03e65	33 c6		 xor	 eax, esi
  03e67	c1 f8 07	 sar	 eax, 7
  03e6a	83 e0 01	 and	 eax, 1
  03e6d	6b c0 1b	 imul	 eax, 27			; 0000001bH
  03e70	33 d0		 xor	 edx, eax
  03e72	d1 e2		 shl	 edx, 1
  03e74	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  03e78	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  03e7b	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  03e7f	d1 e0		 shl	 eax, 1
  03e81	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03e85	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03e88	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03e8c	c1 f9 07	 sar	 ecx, 7
  03e8f	83 e1 01	 and	 ecx, 1
  03e92	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03e95	33 c1		 xor	 eax, ecx
  03e97	d1 e0		 shl	 eax, 1
  03e99	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03e9d	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03ea0	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03ea4	d1 e1		 shl	 ecx, 1
  03ea6	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03eaa	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03ead	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03eb1	c1 fe 07	 sar	 esi, 7
  03eb4	83 e6 01	 and	 esi, 1
  03eb7	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03eba	33 ce		 xor	 ecx, esi
  03ebc	c1 f9 07	 sar	 ecx, 7
  03ebf	83 e1 01	 and	 ecx, 1
  03ec2	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03ec5	33 c1		 xor	 eax, ecx
  03ec7	d1 e0		 shl	 eax, 1
  03ec9	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03ecd	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03ed0	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03ed4	d1 e1		 shl	 ecx, 1
  03ed6	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03eda	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03edd	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03ee1	c1 fe 07	 sar	 esi, 7
  03ee4	83 e6 01	 and	 esi, 1
  03ee7	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03eea	33 ce		 xor	 ecx, esi
  03eec	d1 e1		 shl	 ecx, 1
  03eee	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03ef2	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03ef5	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03ef9	d1 e6		 shl	 esi, 1
  03efb	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03eff	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03f02	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03f06	c1 ff 07	 sar	 edi, 7
  03f09	83 e7 01	 and	 edi, 1
  03f0c	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03f0f	33 f7		 xor	 esi, edi
  03f11	c1 fe 07	 sar	 esi, 7
  03f14	83 e6 01	 and	 esi, 1
  03f17	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03f1a	33 ce		 xor	 ecx, esi
  03f1c	c1 f9 07	 sar	 ecx, 7
  03f1f	83 e1 01	 and	 ecx, 1
  03f22	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03f25	33 c1		 xor	 eax, ecx
  03f27	d1 e0		 shl	 eax, 1
  03f29	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  03f2d	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  03f30	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  03f34	d1 e1		 shl	 ecx, 1
  03f36	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03f3a	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03f3d	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03f41	c1 fe 07	 sar	 esi, 7
  03f44	83 e6 01	 and	 esi, 1
  03f47	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03f4a	33 ce		 xor	 ecx, esi
  03f4c	d1 e1		 shl	 ecx, 1
  03f4e	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03f52	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03f55	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03f59	d1 e6		 shl	 esi, 1
  03f5b	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03f5f	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03f62	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03f66	c1 ff 07	 sar	 edi, 7
  03f69	83 e7 01	 and	 edi, 1
  03f6c	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03f6f	33 f7		 xor	 esi, edi
  03f71	c1 fe 07	 sar	 esi, 7
  03f74	83 e6 01	 and	 esi, 1
  03f77	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03f7a	33 ce		 xor	 ecx, esi
  03f7c	d1 e1		 shl	 ecx, 1
  03f7e	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  03f82	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  03f85	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  03f89	d1 e6		 shl	 esi, 1
  03f8b	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03f8f	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03f92	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03f96	c1 ff 07	 sar	 edi, 7
  03f99	83 e7 01	 and	 edi, 1
  03f9c	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03f9f	33 f7		 xor	 esi, edi
  03fa1	d1 e6		 shl	 esi, 1
  03fa3	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  03fa7	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  03faa	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  03fae	d1 e7		 shl	 edi, 1
  03fb0	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  03fb4	89 95 d4 fe ff
	ff		 mov	 DWORD PTR tv9314[ebp], edx
  03fba	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  03fbd	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  03fc1	c1 fa 07	 sar	 edx, 7
  03fc4	83 e2 01	 and	 edx, 1
  03fc7	6b d2 1b	 imul	 edx, 27			; 0000001bH
  03fca	33 fa		 xor	 edi, edx
  03fcc	c1 ff 07	 sar	 edi, 7
  03fcf	83 e7 01	 and	 edi, 1
  03fd2	6b ff 1b	 imul	 edi, 27			; 0000001bH
  03fd5	33 f7		 xor	 esi, edi
  03fd7	c1 fe 07	 sar	 esi, 7
  03fda	83 e6 01	 and	 esi, 1
  03fdd	6b f6 1b	 imul	 esi, 27			; 0000001bH
  03fe0	33 ce		 xor	 ecx, esi
  03fe2	c1 f9 07	 sar	 ecx, 7
  03fe5	83 e1 01	 and	 ecx, 1
  03fe8	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  03feb	33 c1		 xor	 eax, ecx
  03fed	c1 f8 07	 sar	 eax, 7
  03ff0	83 e0 01	 and	 eax, 1
  03ff3	6b c0 1b	 imul	 eax, 27			; 0000001bH
  03ff6	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR tv9314[ebp]
  03ffc	33 c8		 xor	 ecx, eax
  03ffe	d1 e1		 shl	 ecx, 1
  04000	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  04004	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  04007	0f b6 14 10	 movzx	 edx, BYTE PTR [eax+edx]
  0400b	d1 e2		 shl	 edx, 1
  0400d	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  04011	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04014	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  04018	c1 f8 07	 sar	 eax, 7
  0401b	83 e0 01	 and	 eax, 1
  0401e	6b c0 1b	 imul	 eax, 27			; 0000001bH
  04021	33 d0		 xor	 edx, eax
  04023	d1 e2		 shl	 edx, 1
  04025	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  04029	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0402c	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  04030	d1 e0		 shl	 eax, 1
  04032	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04036	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04039	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0403d	c1 fe 07	 sar	 esi, 7
  04040	83 e6 01	 and	 esi, 1
  04043	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04046	33 c6		 xor	 eax, esi
  04048	c1 f8 07	 sar	 eax, 7
  0404b	83 e0 01	 and	 eax, 1
  0404e	6b c0 1b	 imul	 eax, 27			; 0000001bH
  04051	33 d0		 xor	 edx, eax
  04053	d1 e2		 shl	 edx, 1
  04055	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  04059	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0405c	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  04060	d1 e0		 shl	 eax, 1
  04062	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04066	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04069	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0406d	c1 fe 07	 sar	 esi, 7
  04070	83 e6 01	 and	 esi, 1
  04073	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04076	33 c6		 xor	 eax, esi
  04078	d1 e0		 shl	 eax, 1
  0407a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0407e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04081	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04085	d1 e6		 shl	 esi, 1
  04087	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0408b	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0408e	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04092	c1 ff 07	 sar	 edi, 7
  04095	83 e7 01	 and	 edi, 1
  04098	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0409b	33 f7		 xor	 esi, edi
  0409d	c1 fe 07	 sar	 esi, 7
  040a0	83 e6 01	 and	 esi, 1
  040a3	6b f6 1b	 imul	 esi, 27			; 0000001bH
  040a6	33 c6		 xor	 eax, esi
  040a8	c1 f8 07	 sar	 eax, 7
  040ab	83 e0 01	 and	 eax, 1
  040ae	6b c0 1b	 imul	 eax, 27			; 0000001bH
  040b1	33 d0		 xor	 edx, eax
  040b3	d1 e2		 shl	 edx, 1
  040b5	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  040b9	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  040bc	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  040c0	d1 e0		 shl	 eax, 1
  040c2	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  040c6	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  040c9	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  040cd	c1 fe 07	 sar	 esi, 7
  040d0	83 e6 01	 and	 esi, 1
  040d3	6b f6 1b	 imul	 esi, 27			; 0000001bH
  040d6	33 c6		 xor	 eax, esi
  040d8	d1 e0		 shl	 eax, 1
  040da	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  040de	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  040e1	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  040e5	d1 e6		 shl	 esi, 1
  040e7	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  040eb	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  040ee	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  040f2	c1 ff 07	 sar	 edi, 7
  040f5	83 e7 01	 and	 edi, 1
  040f8	6b ff 1b	 imul	 edi, 27			; 0000001bH
  040fb	33 f7		 xor	 esi, edi
  040fd	c1 fe 07	 sar	 esi, 7
  04100	83 e6 01	 and	 esi, 1
  04103	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04106	33 c6		 xor	 eax, esi
  04108	d1 e0		 shl	 eax, 1
  0410a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0410e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04111	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04115	d1 e6		 shl	 esi, 1
  04117	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0411b	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0411e	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04122	c1 ff 07	 sar	 edi, 7
  04125	83 e7 01	 and	 edi, 1
  04128	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0412b	33 f7		 xor	 esi, edi
  0412d	d1 e6		 shl	 esi, 1
  0412f	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04133	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04136	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0413a	d1 e7		 shl	 edi, 1
  0413c	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  04140	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv9316[ebp], ecx
  04146	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  04149	0f b6 0c 19	 movzx	 ecx, BYTE PTR [ecx+ebx]
  0414d	c1 f9 07	 sar	 ecx, 7
  04150	83 e1 01	 and	 ecx, 1
  04153	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04156	33 f9		 xor	 edi, ecx
  04158	c1 ff 07	 sar	 edi, 7
  0415b	83 e7 01	 and	 edi, 1
  0415e	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04161	33 f7		 xor	 esi, edi
  04163	c1 fe 07	 sar	 esi, 7
  04166	83 e6 01	 and	 esi, 1
  04169	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0416c	33 c6		 xor	 eax, esi
  0416e	c1 f8 07	 sar	 eax, 7
  04171	83 e0 01	 and	 eax, 1
  04174	6b c0 1b	 imul	 eax, 27			; 0000001bH
  04177	33 d0		 xor	 edx, eax
  04179	d1 e2		 shl	 edx, 1
  0417b	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0417f	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  04182	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  04186	d1 e0		 shl	 eax, 1
  04188	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0418c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0418f	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04193	c1 f9 07	 sar	 ecx, 7
  04196	83 e1 01	 and	 ecx, 1
  04199	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0419c	33 c1		 xor	 eax, ecx
  0419e	d1 e0		 shl	 eax, 1
  041a0	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  041a4	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  041a7	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  041ab	d1 e1		 shl	 ecx, 1
  041ad	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  041b1	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  041b4	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  041b8	c1 fe 07	 sar	 esi, 7
  041bb	83 e6 01	 and	 esi, 1
  041be	6b f6 1b	 imul	 esi, 27			; 0000001bH
  041c1	33 ce		 xor	 ecx, esi
  041c3	c1 f9 07	 sar	 ecx, 7
  041c6	83 e1 01	 and	 ecx, 1
  041c9	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  041cc	33 c1		 xor	 eax, ecx
  041ce	d1 e0		 shl	 eax, 1
  041d0	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  041d4	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  041d7	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  041db	d1 e1		 shl	 ecx, 1
  041dd	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  041e1	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  041e4	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  041e8	c1 fe 07	 sar	 esi, 7
  041eb	83 e6 01	 and	 esi, 1
  041ee	6b f6 1b	 imul	 esi, 27			; 0000001bH
  041f1	33 ce		 xor	 ecx, esi
  041f3	d1 e1		 shl	 ecx, 1
  041f5	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  041f9	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  041fc	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04200	d1 e6		 shl	 esi, 1
  04202	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04206	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04209	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0420d	c1 ff 07	 sar	 edi, 7
  04210	83 e7 01	 and	 edi, 1
  04213	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04216	33 f7		 xor	 esi, edi
  04218	c1 fe 07	 sar	 esi, 7
  0421b	83 e6 01	 and	 esi, 1
  0421e	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04221	33 ce		 xor	 ecx, esi
  04223	c1 f9 07	 sar	 ecx, 7
  04226	83 e1 01	 and	 ecx, 1
  04229	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0422c	33 c1		 xor	 eax, ecx
  0422e	d1 e0		 shl	 eax, 1
  04230	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04234	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04237	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0423b	d1 e1		 shl	 ecx, 1
  0423d	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04241	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04244	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04248	c1 fe 07	 sar	 esi, 7
  0424b	83 e6 01	 and	 esi, 1
  0424e	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04251	33 ce		 xor	 ecx, esi
  04253	d1 e1		 shl	 ecx, 1
  04255	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04259	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0425c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04260	d1 e6		 shl	 esi, 1
  04262	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04266	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04269	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0426d	c1 ff 07	 sar	 edi, 7
  04270	83 e7 01	 and	 edi, 1
  04273	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04276	33 f7		 xor	 esi, edi
  04278	c1 fe 07	 sar	 esi, 7
  0427b	83 e6 01	 and	 esi, 1
  0427e	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04281	33 ce		 xor	 ecx, esi
  04283	d1 e1		 shl	 ecx, 1
  04285	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04289	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0428c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04290	d1 e6		 shl	 esi, 1
  04292	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04296	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04299	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0429d	c1 ff 07	 sar	 edi, 7
  042a0	83 e7 01	 and	 edi, 1
  042a3	6b ff 1b	 imul	 edi, 27			; 0000001bH
  042a6	33 f7		 xor	 esi, edi
  042a8	d1 e6		 shl	 esi, 1
  042aa	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  042ae	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  042b1	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  042b5	d1 e7		 shl	 edi, 1
  042b7	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  042bb	89 95 cc fe ff
	ff		 mov	 DWORD PTR tv9318[ebp], edx
  042c1	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  042c4	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  042c8	c1 fa 07	 sar	 edx, 7
  042cb	83 e2 01	 and	 edx, 1
  042ce	6b d2 1b	 imul	 edx, 27			; 0000001bH
  042d1	33 fa		 xor	 edi, edx
  042d3	c1 ff 07	 sar	 edi, 7
  042d6	83 e7 01	 and	 edi, 1
  042d9	6b ff 1b	 imul	 edi, 27			; 0000001bH
  042dc	33 f7		 xor	 esi, edi
  042de	c1 fe 07	 sar	 esi, 7
  042e1	83 e6 01	 and	 esi, 1
  042e4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  042e7	33 ce		 xor	 ecx, esi
  042e9	c1 f9 07	 sar	 ecx, 7
  042ec	83 e1 01	 and	 ecx, 1
  042ef	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  042f2	33 c1		 xor	 eax, ecx
  042f4	c1 f8 07	 sar	 eax, 7
  042f7	83 e0 01	 and	 eax, 1
  042fa	6b c0 1b	 imul	 eax, 27			; 0000001bH
  042fd	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR tv9318[ebp]
  04303	33 c8		 xor	 ecx, eax
  04305	c1 f9 07	 sar	 ecx, 7
  04308	83 e1 01	 and	 ecx, 1
  0430b	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0430e	8b 95 d0 fe ff
	ff		 mov	 edx, DWORD PTR tv9316[ebp]
  04314	33 d1		 xor	 edx, ecx
  04316	d1 e2		 shl	 edx, 1
  04318	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0431c	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0431f	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  04323	d1 e0		 shl	 eax, 1
  04325	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04329	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0432c	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04330	c1 f9 07	 sar	 ecx, 7
  04333	83 e1 01	 and	 ecx, 1
  04336	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04339	33 c1		 xor	 eax, ecx
  0433b	d1 e0		 shl	 eax, 1
  0433d	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04341	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04344	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04348	d1 e1		 shl	 ecx, 1
  0434a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0434e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04351	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04355	c1 fe 07	 sar	 esi, 7
  04358	83 e6 01	 and	 esi, 1
  0435b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0435e	33 ce		 xor	 ecx, esi
  04360	c1 f9 07	 sar	 ecx, 7
  04363	83 e1 01	 and	 ecx, 1
  04366	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04369	33 c1		 xor	 eax, ecx
  0436b	d1 e0		 shl	 eax, 1
  0436d	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04371	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04374	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04378	d1 e1		 shl	 ecx, 1
  0437a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0437e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04381	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04385	c1 fe 07	 sar	 esi, 7
  04388	83 e6 01	 and	 esi, 1
  0438b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0438e	33 ce		 xor	 ecx, esi
  04390	d1 e1		 shl	 ecx, 1
  04392	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04396	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04399	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0439d	d1 e6		 shl	 esi, 1
  0439f	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  043a3	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  043a6	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  043aa	c1 ff 07	 sar	 edi, 7
  043ad	83 e7 01	 and	 edi, 1
  043b0	6b ff 1b	 imul	 edi, 27			; 0000001bH
  043b3	33 f7		 xor	 esi, edi
  043b5	c1 fe 07	 sar	 esi, 7
  043b8	83 e6 01	 and	 esi, 1
  043bb	6b f6 1b	 imul	 esi, 27			; 0000001bH
  043be	33 ce		 xor	 ecx, esi
  043c0	c1 f9 07	 sar	 ecx, 7
  043c3	83 e1 01	 and	 ecx, 1
  043c6	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  043c9	33 c1		 xor	 eax, ecx
  043cb	d1 e0		 shl	 eax, 1
  043cd	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  043d1	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  043d4	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  043d8	d1 e1		 shl	 ecx, 1
  043da	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  043de	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  043e1	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  043e5	c1 fe 07	 sar	 esi, 7
  043e8	83 e6 01	 and	 esi, 1
  043eb	6b f6 1b	 imul	 esi, 27			; 0000001bH
  043ee	33 ce		 xor	 ecx, esi
  043f0	d1 e1		 shl	 ecx, 1
  043f2	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  043f6	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  043f9	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  043fd	d1 e6		 shl	 esi, 1
  043ff	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04403	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04406	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0440a	c1 ff 07	 sar	 edi, 7
  0440d	83 e7 01	 and	 edi, 1
  04410	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04413	33 f7		 xor	 esi, edi
  04415	c1 fe 07	 sar	 esi, 7
  04418	83 e6 01	 and	 esi, 1
  0441b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0441e	33 ce		 xor	 ecx, esi
  04420	d1 e1		 shl	 ecx, 1
  04422	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04426	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04429	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0442d	d1 e6		 shl	 esi, 1
  0442f	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04433	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04436	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0443a	c1 ff 07	 sar	 edi, 7
  0443d	83 e7 01	 and	 edi, 1
  04440	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04443	33 f7		 xor	 esi, edi
  04445	d1 e6		 shl	 esi, 1
  04447	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0444b	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0444e	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04452	d1 e7		 shl	 edi, 1
  04454	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  04458	89 95 c8 fe ff
	ff		 mov	 DWORD PTR tv9320[ebp], edx
  0445e	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  04461	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  04465	c1 fa 07	 sar	 edx, 7
  04468	83 e2 01	 and	 edx, 1
  0446b	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0446e	33 fa		 xor	 edi, edx
  04470	c1 ff 07	 sar	 edi, 7
  04473	83 e7 01	 and	 edi, 1
  04476	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04479	33 f7		 xor	 esi, edi
  0447b	c1 fe 07	 sar	 esi, 7
  0447e	83 e6 01	 and	 esi, 1
  04481	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04484	33 ce		 xor	 ecx, esi
  04486	c1 f9 07	 sar	 ecx, 7
  04489	83 e1 01	 and	 ecx, 1
  0448c	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0448f	33 c1		 xor	 eax, ecx
  04491	d1 e0		 shl	 eax, 1
  04493	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04497	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  0449a	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  0449e	d1 e1		 shl	 ecx, 1
  044a0	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  044a4	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  044a7	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  044ab	c1 fa 07	 sar	 edx, 7
  044ae	83 e2 01	 and	 edx, 1
  044b1	6b d2 1b	 imul	 edx, 27			; 0000001bH
  044b4	33 ca		 xor	 ecx, edx
  044b6	d1 e1		 shl	 ecx, 1
  044b8	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  044bc	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  044bf	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  044c3	d1 e2		 shl	 edx, 1
  044c5	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  044c9	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  044cc	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  044d0	c1 fe 07	 sar	 esi, 7
  044d3	83 e6 01	 and	 esi, 1
  044d6	6b f6 1b	 imul	 esi, 27			; 0000001bH
  044d9	33 d6		 xor	 edx, esi
  044db	c1 fa 07	 sar	 edx, 7
  044de	83 e2 01	 and	 edx, 1
  044e1	6b d2 1b	 imul	 edx, 27			; 0000001bH
  044e4	33 ca		 xor	 ecx, edx
  044e6	d1 e1		 shl	 ecx, 1
  044e8	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  044ec	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  044ef	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  044f3	d1 e2		 shl	 edx, 1
  044f5	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  044f9	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  044fc	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04500	c1 fe 07	 sar	 esi, 7
  04503	83 e6 01	 and	 esi, 1
  04506	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04509	33 d6		 xor	 edx, esi
  0450b	d1 e2		 shl	 edx, 1
  0450d	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04511	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04514	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04518	d1 e6		 shl	 esi, 1
  0451a	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0451e	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04521	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04525	c1 ff 07	 sar	 edi, 7
  04528	83 e7 01	 and	 edi, 1
  0452b	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0452e	33 f7		 xor	 esi, edi
  04530	c1 fe 07	 sar	 esi, 7
  04533	83 e6 01	 and	 esi, 1
  04536	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04539	33 d6		 xor	 edx, esi
  0453b	c1 fa 07	 sar	 edx, 7
  0453e	83 e2 01	 and	 edx, 1
  04541	6b d2 1b	 imul	 edx, 27			; 0000001bH
  04544	33 ca		 xor	 ecx, edx
  04546	d1 e1		 shl	 ecx, 1
  04548	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  0454c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0454f	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  04553	d1 e2		 shl	 edx, 1
  04555	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04559	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0455c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04560	c1 fe 07	 sar	 esi, 7
  04563	83 e6 01	 and	 esi, 1
  04566	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04569	33 d6		 xor	 edx, esi
  0456b	d1 e2		 shl	 edx, 1
  0456d	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04571	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04574	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04578	d1 e6		 shl	 esi, 1
  0457a	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0457e	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04581	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04585	c1 ff 07	 sar	 edi, 7
  04588	83 e7 01	 and	 edi, 1
  0458b	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0458e	33 f7		 xor	 esi, edi
  04590	c1 fe 07	 sar	 esi, 7
  04593	83 e6 01	 and	 esi, 1
  04596	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04599	33 d6		 xor	 edx, esi
  0459b	d1 e2		 shl	 edx, 1
  0459d	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  045a1	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  045a4	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  045a8	d1 e6		 shl	 esi, 1
  045aa	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  045ae	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  045b1	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  045b5	c1 ff 07	 sar	 edi, 7
  045b8	83 e7 01	 and	 edi, 1
  045bb	6b ff 1b	 imul	 edi, 27			; 0000001bH
  045be	33 f7		 xor	 esi, edi
  045c0	d1 e6		 shl	 esi, 1
  045c2	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  045c6	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  045c9	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  045cd	d1 e7		 shl	 edi, 1
  045cf	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  045d3	89 85 c4 fe ff
	ff		 mov	 DWORD PTR tv9322[ebp], eax
  045d9	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  045dc	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  045e0	c1 f8 07	 sar	 eax, 7
  045e3	83 e0 01	 and	 eax, 1
  045e6	6b c0 1b	 imul	 eax, 27			; 0000001bH
  045e9	33 f8		 xor	 edi, eax
  045eb	c1 ff 07	 sar	 edi, 7
  045ee	83 e7 01	 and	 edi, 1
  045f1	6b ff 1b	 imul	 edi, 27			; 0000001bH
  045f4	33 f7		 xor	 esi, edi
  045f6	c1 fe 07	 sar	 esi, 7
  045f9	83 e6 01	 and	 esi, 1
  045fc	6b f6 1b	 imul	 esi, 27			; 0000001bH
  045ff	33 d6		 xor	 edx, esi
  04601	c1 fa 07	 sar	 edx, 7
  04604	83 e2 01	 and	 edx, 1
  04607	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0460a	33 ca		 xor	 ecx, edx
  0460c	c1 f9 07	 sar	 ecx, 7
  0460f	83 e1 01	 and	 ecx, 1
  04612	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04615	8b 95 c4 fe ff
	ff		 mov	 edx, DWORD PTR tv9322[ebp]
  0461b	33 d1		 xor	 edx, ecx
  0461d	d1 e2		 shl	 edx, 1
  0461f	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  04623	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  04626	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  0462a	d1 e0		 shl	 eax, 1
  0462c	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04630	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04633	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04637	c1 f9 07	 sar	 ecx, 7
  0463a	83 e1 01	 and	 ecx, 1
  0463d	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04640	33 c1		 xor	 eax, ecx
  04642	d1 e0		 shl	 eax, 1
  04644	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04648	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0464b	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0464f	d1 e1		 shl	 ecx, 1
  04651	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04655	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04658	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0465c	c1 fe 07	 sar	 esi, 7
  0465f	83 e6 01	 and	 esi, 1
  04662	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04665	33 ce		 xor	 ecx, esi
  04667	c1 f9 07	 sar	 ecx, 7
  0466a	83 e1 01	 and	 ecx, 1
  0466d	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04670	33 c1		 xor	 eax, ecx
  04672	d1 e0		 shl	 eax, 1
  04674	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04678	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0467b	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0467f	d1 e1		 shl	 ecx, 1
  04681	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04685	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04688	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0468c	c1 fe 07	 sar	 esi, 7
  0468f	83 e6 01	 and	 esi, 1
  04692	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04695	33 ce		 xor	 ecx, esi
  04697	d1 e1		 shl	 ecx, 1
  04699	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0469d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  046a0	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  046a4	d1 e6		 shl	 esi, 1
  046a6	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  046aa	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  046ad	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  046b1	c1 ff 07	 sar	 edi, 7
  046b4	83 e7 01	 and	 edi, 1
  046b7	6b ff 1b	 imul	 edi, 27			; 0000001bH
  046ba	33 f7		 xor	 esi, edi
  046bc	c1 fe 07	 sar	 esi, 7
  046bf	83 e6 01	 and	 esi, 1
  046c2	6b f6 1b	 imul	 esi, 27			; 0000001bH
  046c5	33 ce		 xor	 ecx, esi
  046c7	c1 f9 07	 sar	 ecx, 7
  046ca	83 e1 01	 and	 ecx, 1
  046cd	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  046d0	33 c1		 xor	 eax, ecx
  046d2	d1 e0		 shl	 eax, 1
  046d4	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  046d8	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  046db	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  046df	d1 e1		 shl	 ecx, 1
  046e1	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  046e5	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  046e8	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  046ec	c1 fe 07	 sar	 esi, 7
  046ef	83 e6 01	 and	 esi, 1
  046f2	6b f6 1b	 imul	 esi, 27			; 0000001bH
  046f5	33 ce		 xor	 ecx, esi
  046f7	d1 e1		 shl	 ecx, 1
  046f9	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  046fd	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04700	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04704	d1 e6		 shl	 esi, 1
  04706	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0470a	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0470d	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04711	c1 ff 07	 sar	 edi, 7
  04714	83 e7 01	 and	 edi, 1
  04717	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0471a	33 f7		 xor	 esi, edi
  0471c	c1 fe 07	 sar	 esi, 7
  0471f	83 e6 01	 and	 esi, 1
  04722	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04725	33 ce		 xor	 ecx, esi
  04727	d1 e1		 shl	 ecx, 1
  04729	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0472d	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04730	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04734	d1 e6		 shl	 esi, 1
  04736	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0473a	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0473d	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04741	c1 ff 07	 sar	 edi, 7
  04744	83 e7 01	 and	 edi, 1
  04747	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0474a	33 f7		 xor	 esi, edi
  0474c	d1 e6		 shl	 esi, 1
  0474e	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04752	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04755	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04759	d1 e7		 shl	 edi, 1
  0475b	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  0475f	89 95 c0 fe ff
	ff		 mov	 DWORD PTR tv9324[ebp], edx
  04765	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  04768	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  0476c	c1 fa 07	 sar	 edx, 7
  0476f	83 e2 01	 and	 edx, 1
  04772	6b d2 1b	 imul	 edx, 27			; 0000001bH
  04775	33 fa		 xor	 edi, edx
  04777	c1 ff 07	 sar	 edi, 7
  0477a	83 e7 01	 and	 edi, 1
  0477d	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04780	33 f7		 xor	 esi, edi
  04782	c1 fe 07	 sar	 esi, 7
  04785	83 e6 01	 and	 esi, 1
  04788	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0478b	33 ce		 xor	 ecx, esi
  0478d	c1 f9 07	 sar	 ecx, 7
  04790	83 e1 01	 and	 ecx, 1
  04793	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04796	33 c1		 xor	 eax, ecx
  04798	d1 e0		 shl	 eax, 1
  0479a	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0479e	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  047a1	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  047a5	d1 e1		 shl	 ecx, 1
  047a7	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  047ab	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  047ae	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  047b2	c1 fa 07	 sar	 edx, 7
  047b5	83 e2 01	 and	 edx, 1
  047b8	6b d2 1b	 imul	 edx, 27			; 0000001bH
  047bb	33 ca		 xor	 ecx, edx
  047bd	d1 e1		 shl	 ecx, 1
  047bf	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  047c3	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  047c6	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  047ca	d1 e2		 shl	 edx, 1
  047cc	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  047d0	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  047d3	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  047d7	c1 fe 07	 sar	 esi, 7
  047da	83 e6 01	 and	 esi, 1
  047dd	6b f6 1b	 imul	 esi, 27			; 0000001bH
  047e0	33 d6		 xor	 edx, esi
  047e2	c1 fa 07	 sar	 edx, 7
  047e5	83 e2 01	 and	 edx, 1
  047e8	6b d2 1b	 imul	 edx, 27			; 0000001bH
  047eb	33 ca		 xor	 ecx, edx
  047ed	d1 e1		 shl	 ecx, 1
  047ef	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  047f3	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  047f6	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  047fa	d1 e2		 shl	 edx, 1
  047fc	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04800	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04803	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04807	c1 fe 07	 sar	 esi, 7
  0480a	83 e6 01	 and	 esi, 1
  0480d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04810	33 d6		 xor	 edx, esi
  04812	d1 e2		 shl	 edx, 1
  04814	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04818	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0481b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0481f	d1 e6		 shl	 esi, 1
  04821	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04825	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04828	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0482c	c1 ff 07	 sar	 edi, 7
  0482f	83 e7 01	 and	 edi, 1
  04832	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04835	33 f7		 xor	 esi, edi
  04837	c1 fe 07	 sar	 esi, 7
  0483a	83 e6 01	 and	 esi, 1
  0483d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04840	33 d6		 xor	 edx, esi
  04842	c1 fa 07	 sar	 edx, 7
  04845	83 e2 01	 and	 edx, 1
  04848	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0484b	33 ca		 xor	 ecx, edx
  0484d	d1 e1		 shl	 ecx, 1
  0484f	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  04853	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04856	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  0485a	d1 e2		 shl	 edx, 1
  0485c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04860	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04863	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04867	c1 fe 07	 sar	 esi, 7
  0486a	83 e6 01	 and	 esi, 1
  0486d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04870	33 d6		 xor	 edx, esi
  04872	d1 e2		 shl	 edx, 1
  04874	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04878	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0487b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0487f	d1 e6		 shl	 esi, 1
  04881	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04885	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04888	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0488c	c1 ff 07	 sar	 edi, 7
  0488f	83 e7 01	 and	 edi, 1
  04892	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04895	33 f7		 xor	 esi, edi
  04897	c1 fe 07	 sar	 esi, 7
  0489a	83 e6 01	 and	 esi, 1
  0489d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  048a0	33 d6		 xor	 edx, esi
  048a2	d1 e2		 shl	 edx, 1
  048a4	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  048a8	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  048ab	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  048af	d1 e6		 shl	 esi, 1
  048b1	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  048b5	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  048b8	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  048bc	c1 ff 07	 sar	 edi, 7
  048bf	83 e7 01	 and	 edi, 1
  048c2	6b ff 1b	 imul	 edi, 27			; 0000001bH
  048c5	33 f7		 xor	 esi, edi
  048c7	d1 e6		 shl	 esi, 1
  048c9	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  048cd	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  048d0	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  048d4	d1 e7		 shl	 edi, 1
  048d6	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  048da	89 85 bc fe ff
	ff		 mov	 DWORD PTR tv9326[ebp], eax
  048e0	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  048e3	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  048e7	c1 f8 07	 sar	 eax, 7
  048ea	83 e0 01	 and	 eax, 1
  048ed	6b c0 1b	 imul	 eax, 27			; 0000001bH
  048f0	33 f8		 xor	 edi, eax
  048f2	c1 ff 07	 sar	 edi, 7
  048f5	83 e7 01	 and	 edi, 1
  048f8	6b ff 1b	 imul	 edi, 27			; 0000001bH
  048fb	33 f7		 xor	 esi, edi
  048fd	c1 fe 07	 sar	 esi, 7
  04900	83 e6 01	 and	 esi, 1
  04903	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04906	33 d6		 xor	 edx, esi
  04908	c1 fa 07	 sar	 edx, 7
  0490b	83 e2 01	 and	 edx, 1
  0490e	6b d2 1b	 imul	 edx, 27			; 0000001bH
  04911	33 ca		 xor	 ecx, edx
  04913	c1 f9 07	 sar	 ecx, 7
  04916	83 e1 01	 and	 ecx, 1
  04919	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0491c	8b 95 bc fe ff
	ff		 mov	 edx, DWORD PTR tv9326[ebp]
  04922	33 d1		 xor	 edx, ecx
  04924	c1 fa 07	 sar	 edx, 7
  04927	83 e2 01	 and	 edx, 1
  0492a	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0492d	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR tv9324[ebp]
  04933	33 c2		 xor	 eax, edx
  04935	c1 f8 07	 sar	 eax, 7
  04938	83 e0 01	 and	 eax, 1
  0493b	6b c0 1b	 imul	 eax, 27			; 0000001bH
  0493e	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR tv9320[ebp]
  04944	33 c8		 xor	 ecx, eax
  04946	6b c9 00	 imul	 ecx, 0
  04949	8b 95 d8 fe ff
	ff		 mov	 edx, DWORD PTR tv9312[ebp]
  0494f	33 d1		 xor	 edx, ecx
  04951	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  04955	88 54 05 d4	 mov	 BYTE PTR _td$[ebp+eax], dl

; 601  : 		te[c] = MULTIPLY(r[c],0xe);

  04959	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0495d	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  04960	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  04964	6b d2 00	 imul	 edx, 0
  04967	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0496b	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0496e	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  04972	d1 e0		 shl	 eax, 1
  04974	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04978	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0497b	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0497f	c1 f9 07	 sar	 ecx, 7
  04982	83 e1 01	 and	 ecx, 1
  04985	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04988	33 c1		 xor	 eax, ecx
  0498a	33 d0		 xor	 edx, eax
  0498c	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  04990	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  04993	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  04997	d1 e0		 shl	 eax, 1
  04999	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0499d	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  049a0	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  049a4	c1 f9 07	 sar	 ecx, 7
  049a7	83 e1 01	 and	 ecx, 1
  049aa	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  049ad	33 c1		 xor	 eax, ecx
  049af	d1 e0		 shl	 eax, 1
  049b1	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  049b5	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  049b8	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  049bc	d1 e1		 shl	 ecx, 1
  049be	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  049c2	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  049c5	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  049c9	c1 fe 07	 sar	 esi, 7
  049cc	83 e6 01	 and	 esi, 1
  049cf	6b f6 1b	 imul	 esi, 27			; 0000001bH
  049d2	33 ce		 xor	 ecx, esi
  049d4	c1 f9 07	 sar	 ecx, 7
  049d7	83 e1 01	 and	 ecx, 1
  049da	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  049dd	33 c1		 xor	 eax, ecx
  049df	33 d0		 xor	 edx, eax
  049e1	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  049e5	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  049e8	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  049ec	d1 e0		 shl	 eax, 1
  049ee	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  049f2	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  049f5	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  049f9	c1 f9 07	 sar	 ecx, 7
  049fc	83 e1 01	 and	 ecx, 1
  049ff	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04a02	33 c1		 xor	 eax, ecx
  04a04	d1 e0		 shl	 eax, 1
  04a06	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04a0a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04a0d	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04a11	d1 e1		 shl	 ecx, 1
  04a13	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04a17	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04a1a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04a1e	c1 fe 07	 sar	 esi, 7
  04a21	83 e6 01	 and	 esi, 1
  04a24	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04a27	33 ce		 xor	 ecx, esi
  04a29	c1 f9 07	 sar	 ecx, 7
  04a2c	83 e1 01	 and	 ecx, 1
  04a2f	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04a32	33 c1		 xor	 eax, ecx
  04a34	d1 e0		 shl	 eax, 1
  04a36	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04a3a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04a3d	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04a41	d1 e1		 shl	 ecx, 1
  04a43	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04a47	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04a4a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04a4e	c1 fe 07	 sar	 esi, 7
  04a51	83 e6 01	 and	 esi, 1
  04a54	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04a57	33 ce		 xor	 ecx, esi
  04a59	d1 e1		 shl	 ecx, 1
  04a5b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04a5f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04a62	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04a66	d1 e6		 shl	 esi, 1
  04a68	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04a6c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04a6f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04a73	c1 ff 07	 sar	 edi, 7
  04a76	83 e7 01	 and	 edi, 1
  04a79	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04a7c	33 f7		 xor	 esi, edi
  04a7e	c1 fe 07	 sar	 esi, 7
  04a81	83 e6 01	 and	 esi, 1
  04a84	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04a87	33 ce		 xor	 ecx, esi
  04a89	c1 f9 07	 sar	 ecx, 7
  04a8c	83 e1 01	 and	 ecx, 1
  04a8f	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04a92	33 c1		 xor	 eax, ecx
  04a94	33 d0		 xor	 edx, eax
  04a96	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  04a9a	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  04a9d	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  04aa1	d1 e0		 shl	 eax, 1
  04aa3	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04aa7	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04aaa	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04aae	c1 f9 07	 sar	 ecx, 7
  04ab1	83 e1 01	 and	 ecx, 1
  04ab4	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04ab7	33 c1		 xor	 eax, ecx
  04ab9	d1 e0		 shl	 eax, 1
  04abb	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04abf	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04ac2	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04ac6	d1 e1		 shl	 ecx, 1
  04ac8	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04acc	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04acf	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04ad3	c1 fe 07	 sar	 esi, 7
  04ad6	83 e6 01	 and	 esi, 1
  04ad9	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04adc	33 ce		 xor	 ecx, esi
  04ade	c1 f9 07	 sar	 ecx, 7
  04ae1	83 e1 01	 and	 ecx, 1
  04ae4	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04ae7	33 c1		 xor	 eax, ecx
  04ae9	d1 e0		 shl	 eax, 1
  04aeb	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04aef	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04af2	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04af6	d1 e1		 shl	 ecx, 1
  04af8	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04afc	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04aff	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04b03	c1 fe 07	 sar	 esi, 7
  04b06	83 e6 01	 and	 esi, 1
  04b09	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04b0c	33 ce		 xor	 ecx, esi
  04b0e	d1 e1		 shl	 ecx, 1
  04b10	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04b14	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04b17	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04b1b	d1 e6		 shl	 esi, 1
  04b1d	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04b21	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04b24	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04b28	c1 ff 07	 sar	 edi, 7
  04b2b	83 e7 01	 and	 edi, 1
  04b2e	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04b31	33 f7		 xor	 esi, edi
  04b33	c1 fe 07	 sar	 esi, 7
  04b36	83 e6 01	 and	 esi, 1
  04b39	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04b3c	33 ce		 xor	 ecx, esi
  04b3e	c1 f9 07	 sar	 ecx, 7
  04b41	83 e1 01	 and	 ecx, 1
  04b44	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04b47	33 c1		 xor	 eax, ecx
  04b49	d1 e0		 shl	 eax, 1
  04b4b	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04b4f	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04b52	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04b56	d1 e1		 shl	 ecx, 1
  04b58	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04b5c	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04b5f	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04b63	c1 fe 07	 sar	 esi, 7
  04b66	83 e6 01	 and	 esi, 1
  04b69	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04b6c	33 ce		 xor	 ecx, esi
  04b6e	d1 e1		 shl	 ecx, 1
  04b70	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04b74	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04b77	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04b7b	d1 e6		 shl	 esi, 1
  04b7d	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04b81	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04b84	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04b88	c1 ff 07	 sar	 edi, 7
  04b8b	83 e7 01	 and	 edi, 1
  04b8e	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04b91	33 f7		 xor	 esi, edi
  04b93	c1 fe 07	 sar	 esi, 7
  04b96	83 e6 01	 and	 esi, 1
  04b99	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04b9c	33 ce		 xor	 ecx, esi
  04b9e	d1 e1		 shl	 ecx, 1
  04ba0	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04ba4	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04ba7	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04bab	d1 e6		 shl	 esi, 1
  04bad	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04bb1	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04bb4	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04bb8	c1 ff 07	 sar	 edi, 7
  04bbb	83 e7 01	 and	 edi, 1
  04bbe	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04bc1	33 f7		 xor	 esi, edi
  04bc3	d1 e6		 shl	 esi, 1
  04bc5	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04bc9	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04bcc	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04bd0	d1 e7		 shl	 edi, 1
  04bd2	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  04bd6	89 95 f4 fe ff
	ff		 mov	 DWORD PTR tv9328[ebp], edx
  04bdc	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  04bdf	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  04be3	c1 fa 07	 sar	 edx, 7
  04be6	83 e2 01	 and	 edx, 1
  04be9	6b d2 1b	 imul	 edx, 27			; 0000001bH
  04bec	33 fa		 xor	 edi, edx
  04bee	c1 ff 07	 sar	 edi, 7
  04bf1	83 e7 01	 and	 edi, 1
  04bf4	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04bf7	33 f7		 xor	 esi, edi
  04bf9	c1 fe 07	 sar	 esi, 7
  04bfc	83 e6 01	 and	 esi, 1
  04bff	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04c02	33 ce		 xor	 ecx, esi
  04c04	c1 f9 07	 sar	 ecx, 7
  04c07	83 e1 01	 and	 ecx, 1
  04c0a	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04c0d	33 c1		 xor	 eax, ecx
  04c0f	6b c0 00	 imul	 eax, 0
  04c12	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv9328[ebp]
  04c18	33 c8		 xor	 ecx, eax
  04c1a	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  04c1e	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  04c21	0f b6 14 10	 movzx	 edx, BYTE PTR [eax+edx]
  04c25	d1 e2		 shl	 edx, 1
  04c27	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  04c2b	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04c2e	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  04c32	c1 f8 07	 sar	 eax, 7
  04c35	83 e0 01	 and	 eax, 1
  04c38	6b c0 1b	 imul	 eax, 27			; 0000001bH
  04c3b	33 d0		 xor	 edx, eax
  04c3d	d1 e2		 shl	 edx, 1
  04c3f	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  04c43	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04c46	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  04c4a	d1 e0		 shl	 eax, 1
  04c4c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04c50	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04c53	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04c57	c1 fe 07	 sar	 esi, 7
  04c5a	83 e6 01	 and	 esi, 1
  04c5d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04c60	33 c6		 xor	 eax, esi
  04c62	c1 f8 07	 sar	 eax, 7
  04c65	83 e0 01	 and	 eax, 1
  04c68	6b c0 1b	 imul	 eax, 27			; 0000001bH
  04c6b	33 d0		 xor	 edx, eax
  04c6d	d1 e2		 shl	 edx, 1
  04c6f	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  04c73	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04c76	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  04c7a	d1 e0		 shl	 eax, 1
  04c7c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04c80	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04c83	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04c87	c1 fe 07	 sar	 esi, 7
  04c8a	83 e6 01	 and	 esi, 1
  04c8d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04c90	33 c6		 xor	 eax, esi
  04c92	d1 e0		 shl	 eax, 1
  04c94	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04c98	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04c9b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04c9f	d1 e6		 shl	 esi, 1
  04ca1	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04ca5	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04ca8	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04cac	c1 ff 07	 sar	 edi, 7
  04caf	83 e7 01	 and	 edi, 1
  04cb2	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04cb5	33 f7		 xor	 esi, edi
  04cb7	c1 fe 07	 sar	 esi, 7
  04cba	83 e6 01	 and	 esi, 1
  04cbd	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04cc0	33 c6		 xor	 eax, esi
  04cc2	c1 f8 07	 sar	 eax, 7
  04cc5	83 e0 01	 and	 eax, 1
  04cc8	6b c0 1b	 imul	 eax, 27			; 0000001bH
  04ccb	33 d0		 xor	 edx, eax
  04ccd	d1 e2		 shl	 edx, 1
  04ccf	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  04cd3	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04cd6	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  04cda	d1 e0		 shl	 eax, 1
  04cdc	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04ce0	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04ce3	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04ce7	c1 fe 07	 sar	 esi, 7
  04cea	83 e6 01	 and	 esi, 1
  04ced	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04cf0	33 c6		 xor	 eax, esi
  04cf2	d1 e0		 shl	 eax, 1
  04cf4	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04cf8	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04cfb	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04cff	d1 e6		 shl	 esi, 1
  04d01	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04d05	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04d08	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04d0c	c1 ff 07	 sar	 edi, 7
  04d0f	83 e7 01	 and	 edi, 1
  04d12	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04d15	33 f7		 xor	 esi, edi
  04d17	c1 fe 07	 sar	 esi, 7
  04d1a	83 e6 01	 and	 esi, 1
  04d1d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04d20	33 c6		 xor	 eax, esi
  04d22	d1 e0		 shl	 eax, 1
  04d24	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04d28	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04d2b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04d2f	d1 e6		 shl	 esi, 1
  04d31	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04d35	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04d38	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04d3c	c1 ff 07	 sar	 edi, 7
  04d3f	83 e7 01	 and	 edi, 1
  04d42	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04d45	33 f7		 xor	 esi, edi
  04d47	d1 e6		 shl	 esi, 1
  04d49	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04d4d	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04d50	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04d54	d1 e7		 shl	 edi, 1
  04d56	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  04d5a	89 8d f0 fe ff
	ff		 mov	 DWORD PTR tv9330[ebp], ecx
  04d60	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  04d63	0f b6 0c 19	 movzx	 ecx, BYTE PTR [ecx+ebx]
  04d67	c1 f9 07	 sar	 ecx, 7
  04d6a	83 e1 01	 and	 ecx, 1
  04d6d	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04d70	33 f9		 xor	 edi, ecx
  04d72	c1 ff 07	 sar	 edi, 7
  04d75	83 e7 01	 and	 edi, 1
  04d78	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04d7b	33 f7		 xor	 esi, edi
  04d7d	c1 fe 07	 sar	 esi, 7
  04d80	83 e6 01	 and	 esi, 1
  04d83	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04d86	33 c6		 xor	 eax, esi
  04d88	c1 f8 07	 sar	 eax, 7
  04d8b	83 e0 01	 and	 eax, 1
  04d8e	6b c0 1b	 imul	 eax, 27			; 0000001bH
  04d91	33 d0		 xor	 edx, eax
  04d93	d1 e2		 shl	 edx, 1
  04d95	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  04d99	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  04d9c	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  04da0	d1 e0		 shl	 eax, 1
  04da2	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04da6	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04da9	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04dad	c1 f9 07	 sar	 ecx, 7
  04db0	83 e1 01	 and	 ecx, 1
  04db3	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04db6	33 c1		 xor	 eax, ecx
  04db8	d1 e0		 shl	 eax, 1
  04dba	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04dbe	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04dc1	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04dc5	d1 e1		 shl	 ecx, 1
  04dc7	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04dcb	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04dce	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04dd2	c1 fe 07	 sar	 esi, 7
  04dd5	83 e6 01	 and	 esi, 1
  04dd8	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04ddb	33 ce		 xor	 ecx, esi
  04ddd	c1 f9 07	 sar	 ecx, 7
  04de0	83 e1 01	 and	 ecx, 1
  04de3	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04de6	33 c1		 xor	 eax, ecx
  04de8	d1 e0		 shl	 eax, 1
  04dea	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04dee	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04df1	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04df5	d1 e1		 shl	 ecx, 1
  04df7	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04dfb	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04dfe	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04e02	c1 fe 07	 sar	 esi, 7
  04e05	83 e6 01	 and	 esi, 1
  04e08	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04e0b	33 ce		 xor	 ecx, esi
  04e0d	d1 e1		 shl	 ecx, 1
  04e0f	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04e13	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04e16	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04e1a	d1 e6		 shl	 esi, 1
  04e1c	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04e20	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04e23	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04e27	c1 ff 07	 sar	 edi, 7
  04e2a	83 e7 01	 and	 edi, 1
  04e2d	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04e30	33 f7		 xor	 esi, edi
  04e32	c1 fe 07	 sar	 esi, 7
  04e35	83 e6 01	 and	 esi, 1
  04e38	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04e3b	33 ce		 xor	 ecx, esi
  04e3d	c1 f9 07	 sar	 ecx, 7
  04e40	83 e1 01	 and	 ecx, 1
  04e43	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04e46	33 c1		 xor	 eax, ecx
  04e48	d1 e0		 shl	 eax, 1
  04e4a	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04e4e	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04e51	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04e55	d1 e1		 shl	 ecx, 1
  04e57	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04e5b	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04e5e	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04e62	c1 fe 07	 sar	 esi, 7
  04e65	83 e6 01	 and	 esi, 1
  04e68	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04e6b	33 ce		 xor	 ecx, esi
  04e6d	d1 e1		 shl	 ecx, 1
  04e6f	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04e73	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04e76	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04e7a	d1 e6		 shl	 esi, 1
  04e7c	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04e80	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04e83	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04e87	c1 ff 07	 sar	 edi, 7
  04e8a	83 e7 01	 and	 edi, 1
  04e8d	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04e90	33 f7		 xor	 esi, edi
  04e92	c1 fe 07	 sar	 esi, 7
  04e95	83 e6 01	 and	 esi, 1
  04e98	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04e9b	33 ce		 xor	 ecx, esi
  04e9d	d1 e1		 shl	 ecx, 1
  04e9f	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04ea3	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04ea6	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04eaa	d1 e6		 shl	 esi, 1
  04eac	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04eb0	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04eb3	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04eb7	c1 ff 07	 sar	 edi, 7
  04eba	83 e7 01	 and	 edi, 1
  04ebd	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04ec0	33 f7		 xor	 esi, edi
  04ec2	d1 e6		 shl	 esi, 1
  04ec4	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04ec8	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04ecb	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04ecf	d1 e7		 shl	 edi, 1
  04ed1	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  04ed5	89 95 ec fe ff
	ff		 mov	 DWORD PTR tv9332[ebp], edx
  04edb	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  04ede	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  04ee2	c1 fa 07	 sar	 edx, 7
  04ee5	83 e2 01	 and	 edx, 1
  04ee8	6b d2 1b	 imul	 edx, 27			; 0000001bH
  04eeb	33 fa		 xor	 edi, edx
  04eed	c1 ff 07	 sar	 edi, 7
  04ef0	83 e7 01	 and	 edi, 1
  04ef3	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04ef6	33 f7		 xor	 esi, edi
  04ef8	c1 fe 07	 sar	 esi, 7
  04efb	83 e6 01	 and	 esi, 1
  04efe	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04f01	33 ce		 xor	 ecx, esi
  04f03	c1 f9 07	 sar	 ecx, 7
  04f06	83 e1 01	 and	 ecx, 1
  04f09	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04f0c	33 c1		 xor	 eax, ecx
  04f0e	c1 f8 07	 sar	 eax, 7
  04f11	83 e0 01	 and	 eax, 1
  04f14	6b c0 1b	 imul	 eax, 27			; 0000001bH
  04f17	8b 8d ec fe ff
	ff		 mov	 ecx, DWORD PTR tv9332[ebp]
  04f1d	33 c8		 xor	 ecx, eax
  04f1f	6b c9 00	 imul	 ecx, 0
  04f22	8b 95 f0 fe ff
	ff		 mov	 edx, DWORD PTR tv9330[ebp]
  04f28	33 d1		 xor	 edx, ecx
  04f2a	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  04f2e	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  04f31	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  04f35	d1 e0		 shl	 eax, 1
  04f37	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04f3b	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04f3e	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04f42	c1 f9 07	 sar	 ecx, 7
  04f45	83 e1 01	 and	 ecx, 1
  04f48	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04f4b	33 c1		 xor	 eax, ecx
  04f4d	d1 e0		 shl	 eax, 1
  04f4f	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04f53	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04f56	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04f5a	d1 e1		 shl	 ecx, 1
  04f5c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04f60	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04f63	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04f67	c1 fe 07	 sar	 esi, 7
  04f6a	83 e6 01	 and	 esi, 1
  04f6d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04f70	33 ce		 xor	 ecx, esi
  04f72	c1 f9 07	 sar	 ecx, 7
  04f75	83 e1 01	 and	 ecx, 1
  04f78	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04f7b	33 c1		 xor	 eax, ecx
  04f7d	d1 e0		 shl	 eax, 1
  04f7f	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04f83	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04f86	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04f8a	d1 e1		 shl	 ecx, 1
  04f8c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04f90	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04f93	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04f97	c1 fe 07	 sar	 esi, 7
  04f9a	83 e6 01	 and	 esi, 1
  04f9d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04fa0	33 ce		 xor	 ecx, esi
  04fa2	d1 e1		 shl	 ecx, 1
  04fa4	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04fa8	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04fab	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04faf	d1 e6		 shl	 esi, 1
  04fb1	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  04fb5	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  04fb8	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  04fbc	c1 ff 07	 sar	 edi, 7
  04fbf	83 e7 01	 and	 edi, 1
  04fc2	6b ff 1b	 imul	 edi, 27			; 0000001bH
  04fc5	33 f7		 xor	 esi, edi
  04fc7	c1 fe 07	 sar	 esi, 7
  04fca	83 e6 01	 and	 esi, 1
  04fcd	6b f6 1b	 imul	 esi, 27			; 0000001bH
  04fd0	33 ce		 xor	 ecx, esi
  04fd2	c1 f9 07	 sar	 ecx, 7
  04fd5	83 e1 01	 and	 ecx, 1
  04fd8	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  04fdb	33 c1		 xor	 eax, ecx
  04fdd	d1 e0		 shl	 eax, 1
  04fdf	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  04fe3	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  04fe6	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  04fea	d1 e1		 shl	 ecx, 1
  04fec	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  04ff0	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  04ff3	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  04ff7	c1 fe 07	 sar	 esi, 7
  04ffa	83 e6 01	 and	 esi, 1
  04ffd	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05000	33 ce		 xor	 ecx, esi
  05002	d1 e1		 shl	 ecx, 1
  05004	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05008	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0500b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0500f	d1 e6		 shl	 esi, 1
  05011	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05015	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05018	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0501c	c1 ff 07	 sar	 edi, 7
  0501f	83 e7 01	 and	 edi, 1
  05022	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05025	33 f7		 xor	 esi, edi
  05027	c1 fe 07	 sar	 esi, 7
  0502a	83 e6 01	 and	 esi, 1
  0502d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05030	33 ce		 xor	 ecx, esi
  05032	d1 e1		 shl	 ecx, 1
  05034	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05038	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0503b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0503f	d1 e6		 shl	 esi, 1
  05041	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05045	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05048	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0504c	c1 ff 07	 sar	 edi, 7
  0504f	83 e7 01	 and	 edi, 1
  05052	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05055	33 f7		 xor	 esi, edi
  05057	d1 e6		 shl	 esi, 1
  05059	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0505d	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05060	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05064	d1 e7		 shl	 edi, 1
  05066	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  0506a	89 95 e8 fe ff
	ff		 mov	 DWORD PTR tv9334[ebp], edx
  05070	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  05073	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  05077	c1 fa 07	 sar	 edx, 7
  0507a	83 e2 01	 and	 edx, 1
  0507d	6b d2 1b	 imul	 edx, 27			; 0000001bH
  05080	33 fa		 xor	 edi, edx
  05082	c1 ff 07	 sar	 edi, 7
  05085	83 e7 01	 and	 edi, 1
  05088	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0508b	33 f7		 xor	 esi, edi
  0508d	c1 fe 07	 sar	 esi, 7
  05090	83 e6 01	 and	 esi, 1
  05093	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05096	33 ce		 xor	 ecx, esi
  05098	c1 f9 07	 sar	 ecx, 7
  0509b	83 e1 01	 and	 ecx, 1
  0509e	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  050a1	33 c1		 xor	 eax, ecx
  050a3	d1 e0		 shl	 eax, 1
  050a5	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  050a9	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  050ac	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  050b0	d1 e1		 shl	 ecx, 1
  050b2	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  050b6	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  050b9	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  050bd	c1 fa 07	 sar	 edx, 7
  050c0	83 e2 01	 and	 edx, 1
  050c3	6b d2 1b	 imul	 edx, 27			; 0000001bH
  050c6	33 ca		 xor	 ecx, edx
  050c8	d1 e1		 shl	 ecx, 1
  050ca	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  050ce	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  050d1	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  050d5	d1 e2		 shl	 edx, 1
  050d7	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  050db	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  050de	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  050e2	c1 fe 07	 sar	 esi, 7
  050e5	83 e6 01	 and	 esi, 1
  050e8	6b f6 1b	 imul	 esi, 27			; 0000001bH
  050eb	33 d6		 xor	 edx, esi
  050ed	c1 fa 07	 sar	 edx, 7
  050f0	83 e2 01	 and	 edx, 1
  050f3	6b d2 1b	 imul	 edx, 27			; 0000001bH
  050f6	33 ca		 xor	 ecx, edx
  050f8	d1 e1		 shl	 ecx, 1
  050fa	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  050fe	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05101	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  05105	d1 e2		 shl	 edx, 1
  05107	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0510b	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0510e	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05112	c1 fe 07	 sar	 esi, 7
  05115	83 e6 01	 and	 esi, 1
  05118	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0511b	33 d6		 xor	 edx, esi
  0511d	d1 e2		 shl	 edx, 1
  0511f	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05123	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05126	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0512a	d1 e6		 shl	 esi, 1
  0512c	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05130	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05133	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05137	c1 ff 07	 sar	 edi, 7
  0513a	83 e7 01	 and	 edi, 1
  0513d	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05140	33 f7		 xor	 esi, edi
  05142	c1 fe 07	 sar	 esi, 7
  05145	83 e6 01	 and	 esi, 1
  05148	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0514b	33 d6		 xor	 edx, esi
  0514d	c1 fa 07	 sar	 edx, 7
  05150	83 e2 01	 and	 edx, 1
  05153	6b d2 1b	 imul	 edx, 27			; 0000001bH
  05156	33 ca		 xor	 ecx, edx
  05158	d1 e1		 shl	 ecx, 1
  0515a	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  0515e	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05161	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  05165	d1 e2		 shl	 edx, 1
  05167	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0516b	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0516e	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05172	c1 fe 07	 sar	 esi, 7
  05175	83 e6 01	 and	 esi, 1
  05178	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0517b	33 d6		 xor	 edx, esi
  0517d	d1 e2		 shl	 edx, 1
  0517f	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05183	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05186	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0518a	d1 e6		 shl	 esi, 1
  0518c	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05190	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05193	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05197	c1 ff 07	 sar	 edi, 7
  0519a	83 e7 01	 and	 edi, 1
  0519d	6b ff 1b	 imul	 edi, 27			; 0000001bH
  051a0	33 f7		 xor	 esi, edi
  051a2	c1 fe 07	 sar	 esi, 7
  051a5	83 e6 01	 and	 esi, 1
  051a8	6b f6 1b	 imul	 esi, 27			; 0000001bH
  051ab	33 d6		 xor	 edx, esi
  051ad	d1 e2		 shl	 edx, 1
  051af	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  051b3	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  051b6	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  051ba	d1 e6		 shl	 esi, 1
  051bc	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  051c0	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  051c3	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  051c7	c1 ff 07	 sar	 edi, 7
  051ca	83 e7 01	 and	 edi, 1
  051cd	6b ff 1b	 imul	 edi, 27			; 0000001bH
  051d0	33 f7		 xor	 esi, edi
  051d2	d1 e6		 shl	 esi, 1
  051d4	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  051d8	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  051db	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  051df	d1 e7		 shl	 edi, 1
  051e1	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  051e5	89 85 e4 fe ff
	ff		 mov	 DWORD PTR tv9336[ebp], eax
  051eb	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  051ee	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  051f2	c1 f8 07	 sar	 eax, 7
  051f5	83 e0 01	 and	 eax, 1
  051f8	6b c0 1b	 imul	 eax, 27			; 0000001bH
  051fb	33 f8		 xor	 edi, eax
  051fd	c1 ff 07	 sar	 edi, 7
  05200	83 e7 01	 and	 edi, 1
  05203	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05206	33 f7		 xor	 esi, edi
  05208	c1 fe 07	 sar	 esi, 7
  0520b	83 e6 01	 and	 esi, 1
  0520e	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05211	33 d6		 xor	 edx, esi
  05213	c1 fa 07	 sar	 edx, 7
  05216	83 e2 01	 and	 edx, 1
  05219	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0521c	33 ca		 xor	 ecx, edx
  0521e	c1 f9 07	 sar	 ecx, 7
  05221	83 e1 01	 and	 ecx, 1
  05224	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05227	8b 95 e4 fe ff
	ff		 mov	 edx, DWORD PTR tv9336[ebp]
  0522d	33 d1		 xor	 edx, ecx
  0522f	d1 e2		 shl	 edx, 1
  05231	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  05235	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  05238	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  0523c	d1 e0		 shl	 eax, 1
  0523e	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05242	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05245	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05249	c1 f9 07	 sar	 ecx, 7
  0524c	83 e1 01	 and	 ecx, 1
  0524f	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05252	33 c1		 xor	 eax, ecx
  05254	d1 e0		 shl	 eax, 1
  05256	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0525a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0525d	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05261	d1 e1		 shl	 ecx, 1
  05263	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05267	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0526a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0526e	c1 fe 07	 sar	 esi, 7
  05271	83 e6 01	 and	 esi, 1
  05274	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05277	33 ce		 xor	 ecx, esi
  05279	c1 f9 07	 sar	 ecx, 7
  0527c	83 e1 01	 and	 ecx, 1
  0527f	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05282	33 c1		 xor	 eax, ecx
  05284	d1 e0		 shl	 eax, 1
  05286	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  0528a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0528d	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05291	d1 e1		 shl	 ecx, 1
  05293	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05297	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0529a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0529e	c1 fe 07	 sar	 esi, 7
  052a1	83 e6 01	 and	 esi, 1
  052a4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  052a7	33 ce		 xor	 ecx, esi
  052a9	d1 e1		 shl	 ecx, 1
  052ab	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  052af	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  052b2	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  052b6	d1 e6		 shl	 esi, 1
  052b8	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  052bc	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  052bf	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  052c3	c1 ff 07	 sar	 edi, 7
  052c6	83 e7 01	 and	 edi, 1
  052c9	6b ff 1b	 imul	 edi, 27			; 0000001bH
  052cc	33 f7		 xor	 esi, edi
  052ce	c1 fe 07	 sar	 esi, 7
  052d1	83 e6 01	 and	 esi, 1
  052d4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  052d7	33 ce		 xor	 ecx, esi
  052d9	c1 f9 07	 sar	 ecx, 7
  052dc	83 e1 01	 and	 ecx, 1
  052df	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  052e2	33 c1		 xor	 eax, ecx
  052e4	d1 e0		 shl	 eax, 1
  052e6	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  052ea	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  052ed	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  052f1	d1 e1		 shl	 ecx, 1
  052f3	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  052f7	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  052fa	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  052fe	c1 fe 07	 sar	 esi, 7
  05301	83 e6 01	 and	 esi, 1
  05304	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05307	33 ce		 xor	 ecx, esi
  05309	d1 e1		 shl	 ecx, 1
  0530b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0530f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05312	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05316	d1 e6		 shl	 esi, 1
  05318	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0531c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0531f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05323	c1 ff 07	 sar	 edi, 7
  05326	83 e7 01	 and	 edi, 1
  05329	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0532c	33 f7		 xor	 esi, edi
  0532e	c1 fe 07	 sar	 esi, 7
  05331	83 e6 01	 and	 esi, 1
  05334	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05337	33 ce		 xor	 ecx, esi
  05339	d1 e1		 shl	 ecx, 1
  0533b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0533f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05342	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05346	d1 e6		 shl	 esi, 1
  05348	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0534c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0534f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05353	c1 ff 07	 sar	 edi, 7
  05356	83 e7 01	 and	 edi, 1
  05359	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0535c	33 f7		 xor	 esi, edi
  0535e	d1 e6		 shl	 esi, 1
  05360	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05364	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05367	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0536b	d1 e7		 shl	 edi, 1
  0536d	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  05371	89 95 e0 fe ff
	ff		 mov	 DWORD PTR tv9338[ebp], edx
  05377	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  0537a	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  0537e	c1 fa 07	 sar	 edx, 7
  05381	83 e2 01	 and	 edx, 1
  05384	6b d2 1b	 imul	 edx, 27			; 0000001bH
  05387	33 fa		 xor	 edi, edx
  05389	c1 ff 07	 sar	 edi, 7
  0538c	83 e7 01	 and	 edi, 1
  0538f	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05392	33 f7		 xor	 esi, edi
  05394	c1 fe 07	 sar	 esi, 7
  05397	83 e6 01	 and	 esi, 1
  0539a	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0539d	33 ce		 xor	 ecx, esi
  0539f	c1 f9 07	 sar	 ecx, 7
  053a2	83 e1 01	 and	 ecx, 1
  053a5	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  053a8	33 c1		 xor	 eax, ecx
  053aa	d1 e0		 shl	 eax, 1
  053ac	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  053b0	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  053b3	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  053b7	d1 e1		 shl	 ecx, 1
  053b9	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  053bd	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  053c0	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  053c4	c1 fa 07	 sar	 edx, 7
  053c7	83 e2 01	 and	 edx, 1
  053ca	6b d2 1b	 imul	 edx, 27			; 0000001bH
  053cd	33 ca		 xor	 ecx, edx
  053cf	d1 e1		 shl	 ecx, 1
  053d1	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  053d5	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  053d8	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  053dc	d1 e2		 shl	 edx, 1
  053de	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  053e2	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  053e5	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  053e9	c1 fe 07	 sar	 esi, 7
  053ec	83 e6 01	 and	 esi, 1
  053ef	6b f6 1b	 imul	 esi, 27			; 0000001bH
  053f2	33 d6		 xor	 edx, esi
  053f4	c1 fa 07	 sar	 edx, 7
  053f7	83 e2 01	 and	 edx, 1
  053fa	6b d2 1b	 imul	 edx, 27			; 0000001bH
  053fd	33 ca		 xor	 ecx, edx
  053ff	d1 e1		 shl	 ecx, 1
  05401	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  05405	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05408	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  0540c	d1 e2		 shl	 edx, 1
  0540e	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05412	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05415	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05419	c1 fe 07	 sar	 esi, 7
  0541c	83 e6 01	 and	 esi, 1
  0541f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05422	33 d6		 xor	 edx, esi
  05424	d1 e2		 shl	 edx, 1
  05426	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0542a	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0542d	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05431	d1 e6		 shl	 esi, 1
  05433	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05437	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0543a	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0543e	c1 ff 07	 sar	 edi, 7
  05441	83 e7 01	 and	 edi, 1
  05444	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05447	33 f7		 xor	 esi, edi
  05449	c1 fe 07	 sar	 esi, 7
  0544c	83 e6 01	 and	 esi, 1
  0544f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05452	33 d6		 xor	 edx, esi
  05454	c1 fa 07	 sar	 edx, 7
  05457	83 e2 01	 and	 edx, 1
  0545a	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0545d	33 ca		 xor	 ecx, edx
  0545f	d1 e1		 shl	 ecx, 1
  05461	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  05465	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05468	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  0546c	d1 e2		 shl	 edx, 1
  0546e	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05472	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05475	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05479	c1 fe 07	 sar	 esi, 7
  0547c	83 e6 01	 and	 esi, 1
  0547f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05482	33 d6		 xor	 edx, esi
  05484	d1 e2		 shl	 edx, 1
  05486	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0548a	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0548d	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05491	d1 e6		 shl	 esi, 1
  05493	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05497	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0549a	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0549e	c1 ff 07	 sar	 edi, 7
  054a1	83 e7 01	 and	 edi, 1
  054a4	6b ff 1b	 imul	 edi, 27			; 0000001bH
  054a7	33 f7		 xor	 esi, edi
  054a9	c1 fe 07	 sar	 esi, 7
  054ac	83 e6 01	 and	 esi, 1
  054af	6b f6 1b	 imul	 esi, 27			; 0000001bH
  054b2	33 d6		 xor	 edx, esi
  054b4	d1 e2		 shl	 edx, 1
  054b6	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  054ba	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  054bd	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  054c1	d1 e6		 shl	 esi, 1
  054c3	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  054c7	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  054ca	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  054ce	c1 ff 07	 sar	 edi, 7
  054d1	83 e7 01	 and	 edi, 1
  054d4	6b ff 1b	 imul	 edi, 27			; 0000001bH
  054d7	33 f7		 xor	 esi, edi
  054d9	d1 e6		 shl	 esi, 1
  054db	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  054df	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  054e2	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  054e6	d1 e7		 shl	 edi, 1
  054e8	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  054ec	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv9340[ebp], eax
  054f2	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  054f5	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  054f9	c1 f8 07	 sar	 eax, 7
  054fc	83 e0 01	 and	 eax, 1
  054ff	6b c0 1b	 imul	 eax, 27			; 0000001bH
  05502	33 f8		 xor	 edi, eax
  05504	c1 ff 07	 sar	 edi, 7
  05507	83 e7 01	 and	 edi, 1
  0550a	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0550d	33 f7		 xor	 esi, edi
  0550f	c1 fe 07	 sar	 esi, 7
  05512	83 e6 01	 and	 esi, 1
  05515	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05518	33 d6		 xor	 edx, esi
  0551a	c1 fa 07	 sar	 edx, 7
  0551d	83 e2 01	 and	 edx, 1
  05520	6b d2 1b	 imul	 edx, 27			; 0000001bH
  05523	33 ca		 xor	 ecx, edx
  05525	c1 f9 07	 sar	 ecx, 7
  05528	83 e1 01	 and	 ecx, 1
  0552b	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0552e	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR tv9340[ebp]
  05534	33 d1		 xor	 edx, ecx
  05536	c1 fa 07	 sar	 edx, 7
  05539	83 e2 01	 and	 edx, 1
  0553c	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0553f	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv9338[ebp]
  05545	33 c2		 xor	 eax, edx
  05547	6b c0 00	 imul	 eax, 0
  0554a	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR tv9334[ebp]
  05550	33 c8		 xor	 ecx, eax
  05552	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  05556	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  05559	0f b6 14 10	 movzx	 edx, BYTE PTR [eax+edx]
  0555d	d1 e2		 shl	 edx, 1
  0555f	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  05563	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05566	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  0556a	c1 f8 07	 sar	 eax, 7
  0556d	83 e0 01	 and	 eax, 1
  05570	6b c0 1b	 imul	 eax, 27			; 0000001bH
  05573	33 d0		 xor	 edx, eax
  05575	d1 e2		 shl	 edx, 1
  05577	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0557b	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0557e	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  05582	d1 e0		 shl	 eax, 1
  05584	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05588	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0558b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0558f	c1 fe 07	 sar	 esi, 7
  05592	83 e6 01	 and	 esi, 1
  05595	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05598	33 c6		 xor	 eax, esi
  0559a	c1 f8 07	 sar	 eax, 7
  0559d	83 e0 01	 and	 eax, 1
  055a0	6b c0 1b	 imul	 eax, 27			; 0000001bH
  055a3	33 d0		 xor	 edx, eax
  055a5	d1 e2		 shl	 edx, 1
  055a7	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  055ab	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  055ae	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  055b2	d1 e0		 shl	 eax, 1
  055b4	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  055b8	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  055bb	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  055bf	c1 fe 07	 sar	 esi, 7
  055c2	83 e6 01	 and	 esi, 1
  055c5	6b f6 1b	 imul	 esi, 27			; 0000001bH
  055c8	33 c6		 xor	 eax, esi
  055ca	d1 e0		 shl	 eax, 1
  055cc	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  055d0	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  055d3	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  055d7	d1 e6		 shl	 esi, 1
  055d9	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  055dd	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  055e0	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  055e4	c1 ff 07	 sar	 edi, 7
  055e7	83 e7 01	 and	 edi, 1
  055ea	6b ff 1b	 imul	 edi, 27			; 0000001bH
  055ed	33 f7		 xor	 esi, edi
  055ef	c1 fe 07	 sar	 esi, 7
  055f2	83 e6 01	 and	 esi, 1
  055f5	6b f6 1b	 imul	 esi, 27			; 0000001bH
  055f8	33 c6		 xor	 eax, esi
  055fa	c1 f8 07	 sar	 eax, 7
  055fd	83 e0 01	 and	 eax, 1
  05600	6b c0 1b	 imul	 eax, 27			; 0000001bH
  05603	33 d0		 xor	 edx, eax
  05605	d1 e2		 shl	 edx, 1
  05607	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0560b	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0560e	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  05612	d1 e0		 shl	 eax, 1
  05614	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05618	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0561b	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0561f	c1 fe 07	 sar	 esi, 7
  05622	83 e6 01	 and	 esi, 1
  05625	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05628	33 c6		 xor	 eax, esi
  0562a	d1 e0		 shl	 eax, 1
  0562c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05630	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05633	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05637	d1 e6		 shl	 esi, 1
  05639	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0563d	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05640	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05644	c1 ff 07	 sar	 edi, 7
  05647	83 e7 01	 and	 edi, 1
  0564a	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0564d	33 f7		 xor	 esi, edi
  0564f	c1 fe 07	 sar	 esi, 7
  05652	83 e6 01	 and	 esi, 1
  05655	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05658	33 c6		 xor	 eax, esi
  0565a	d1 e0		 shl	 eax, 1
  0565c	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05660	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05663	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05667	d1 e6		 shl	 esi, 1
  05669	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0566d	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05670	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05674	c1 ff 07	 sar	 edi, 7
  05677	83 e7 01	 and	 edi, 1
  0567a	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0567d	33 f7		 xor	 esi, edi
  0567f	d1 e6		 shl	 esi, 1
  05681	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05685	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05688	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0568c	d1 e7		 shl	 edi, 1
  0568e	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  05692	89 8d d8 fe ff
	ff		 mov	 DWORD PTR tv9342[ebp], ecx
  05698	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0569b	0f b6 0c 19	 movzx	 ecx, BYTE PTR [ecx+ebx]
  0569f	c1 f9 07	 sar	 ecx, 7
  056a2	83 e1 01	 and	 ecx, 1
  056a5	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  056a8	33 f9		 xor	 edi, ecx
  056aa	c1 ff 07	 sar	 edi, 7
  056ad	83 e7 01	 and	 edi, 1
  056b0	6b ff 1b	 imul	 edi, 27			; 0000001bH
  056b3	33 f7		 xor	 esi, edi
  056b5	c1 fe 07	 sar	 esi, 7
  056b8	83 e6 01	 and	 esi, 1
  056bb	6b f6 1b	 imul	 esi, 27			; 0000001bH
  056be	33 c6		 xor	 eax, esi
  056c0	c1 f8 07	 sar	 eax, 7
  056c3	83 e0 01	 and	 eax, 1
  056c6	6b c0 1b	 imul	 eax, 27			; 0000001bH
  056c9	33 d0		 xor	 edx, eax
  056cb	d1 e2		 shl	 edx, 1
  056cd	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  056d1	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  056d4	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  056d8	d1 e0		 shl	 eax, 1
  056da	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  056de	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  056e1	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  056e5	c1 f9 07	 sar	 ecx, 7
  056e8	83 e1 01	 and	 ecx, 1
  056eb	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  056ee	33 c1		 xor	 eax, ecx
  056f0	d1 e0		 shl	 eax, 1
  056f2	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  056f6	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  056f9	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  056fd	d1 e1		 shl	 ecx, 1
  056ff	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05703	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05706	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0570a	c1 fe 07	 sar	 esi, 7
  0570d	83 e6 01	 and	 esi, 1
  05710	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05713	33 ce		 xor	 ecx, esi
  05715	c1 f9 07	 sar	 ecx, 7
  05718	83 e1 01	 and	 ecx, 1
  0571b	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0571e	33 c1		 xor	 eax, ecx
  05720	d1 e0		 shl	 eax, 1
  05722	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05726	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05729	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0572d	d1 e1		 shl	 ecx, 1
  0572f	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05733	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05736	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0573a	c1 fe 07	 sar	 esi, 7
  0573d	83 e6 01	 and	 esi, 1
  05740	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05743	33 ce		 xor	 ecx, esi
  05745	d1 e1		 shl	 ecx, 1
  05747	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0574b	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0574e	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05752	d1 e6		 shl	 esi, 1
  05754	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05758	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0575b	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0575f	c1 ff 07	 sar	 edi, 7
  05762	83 e7 01	 and	 edi, 1
  05765	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05768	33 f7		 xor	 esi, edi
  0576a	c1 fe 07	 sar	 esi, 7
  0576d	83 e6 01	 and	 esi, 1
  05770	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05773	33 ce		 xor	 ecx, esi
  05775	c1 f9 07	 sar	 ecx, 7
  05778	83 e1 01	 and	 ecx, 1
  0577b	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  0577e	33 c1		 xor	 eax, ecx
  05780	d1 e0		 shl	 eax, 1
  05782	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05786	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05789	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  0578d	d1 e1		 shl	 ecx, 1
  0578f	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05793	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05796	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0579a	c1 fe 07	 sar	 esi, 7
  0579d	83 e6 01	 and	 esi, 1
  057a0	6b f6 1b	 imul	 esi, 27			; 0000001bH
  057a3	33 ce		 xor	 ecx, esi
  057a5	d1 e1		 shl	 ecx, 1
  057a7	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  057ab	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  057ae	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  057b2	d1 e6		 shl	 esi, 1
  057b4	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  057b8	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  057bb	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  057bf	c1 ff 07	 sar	 edi, 7
  057c2	83 e7 01	 and	 edi, 1
  057c5	6b ff 1b	 imul	 edi, 27			; 0000001bH
  057c8	33 f7		 xor	 esi, edi
  057ca	c1 fe 07	 sar	 esi, 7
  057cd	83 e6 01	 and	 esi, 1
  057d0	6b f6 1b	 imul	 esi, 27			; 0000001bH
  057d3	33 ce		 xor	 ecx, esi
  057d5	d1 e1		 shl	 ecx, 1
  057d7	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  057db	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  057de	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  057e2	d1 e6		 shl	 esi, 1
  057e4	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  057e8	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  057eb	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  057ef	c1 ff 07	 sar	 edi, 7
  057f2	83 e7 01	 and	 edi, 1
  057f5	6b ff 1b	 imul	 edi, 27			; 0000001bH
  057f8	33 f7		 xor	 esi, edi
  057fa	d1 e6		 shl	 esi, 1
  057fc	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05800	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05803	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05807	d1 e7		 shl	 edi, 1
  05809	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  0580d	89 95 d4 fe ff
	ff		 mov	 DWORD PTR tv9344[ebp], edx
  05813	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  05816	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  0581a	c1 fa 07	 sar	 edx, 7
  0581d	83 e2 01	 and	 edx, 1
  05820	6b d2 1b	 imul	 edx, 27			; 0000001bH
  05823	33 fa		 xor	 edi, edx
  05825	c1 ff 07	 sar	 edi, 7
  05828	83 e7 01	 and	 edi, 1
  0582b	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0582e	33 f7		 xor	 esi, edi
  05830	c1 fe 07	 sar	 esi, 7
  05833	83 e6 01	 and	 esi, 1
  05836	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05839	33 ce		 xor	 ecx, esi
  0583b	c1 f9 07	 sar	 ecx, 7
  0583e	83 e1 01	 and	 ecx, 1
  05841	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05844	33 c1		 xor	 eax, ecx
  05846	c1 f8 07	 sar	 eax, 7
  05849	83 e0 01	 and	 eax, 1
  0584c	6b c0 1b	 imul	 eax, 27			; 0000001bH
  0584f	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR tv9344[ebp]
  05855	33 c8		 xor	 ecx, eax
  05857	d1 e1		 shl	 ecx, 1
  05859	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  0585d	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  05860	0f b6 14 10	 movzx	 edx, BYTE PTR [eax+edx]
  05864	d1 e2		 shl	 edx, 1
  05866	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  0586a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0586d	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  05871	c1 f8 07	 sar	 eax, 7
  05874	83 e0 01	 and	 eax, 1
  05877	6b c0 1b	 imul	 eax, 27			; 0000001bH
  0587a	33 d0		 xor	 edx, eax
  0587c	d1 e2		 shl	 edx, 1
  0587e	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  05882	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05885	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  05889	d1 e0		 shl	 eax, 1
  0588b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0588f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05892	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05896	c1 fe 07	 sar	 esi, 7
  05899	83 e6 01	 and	 esi, 1
  0589c	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0589f	33 c6		 xor	 eax, esi
  058a1	c1 f8 07	 sar	 eax, 7
  058a4	83 e0 01	 and	 eax, 1
  058a7	6b c0 1b	 imul	 eax, 27			; 0000001bH
  058aa	33 d0		 xor	 edx, eax
  058ac	d1 e2		 shl	 edx, 1
  058ae	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  058b2	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  058b5	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  058b9	d1 e0		 shl	 eax, 1
  058bb	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  058bf	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  058c2	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  058c6	c1 fe 07	 sar	 esi, 7
  058c9	83 e6 01	 and	 esi, 1
  058cc	6b f6 1b	 imul	 esi, 27			; 0000001bH
  058cf	33 c6		 xor	 eax, esi
  058d1	d1 e0		 shl	 eax, 1
  058d3	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  058d7	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  058da	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  058de	d1 e6		 shl	 esi, 1
  058e0	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  058e4	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  058e7	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  058eb	c1 ff 07	 sar	 edi, 7
  058ee	83 e7 01	 and	 edi, 1
  058f1	6b ff 1b	 imul	 edi, 27			; 0000001bH
  058f4	33 f7		 xor	 esi, edi
  058f6	c1 fe 07	 sar	 esi, 7
  058f9	83 e6 01	 and	 esi, 1
  058fc	6b f6 1b	 imul	 esi, 27			; 0000001bH
  058ff	33 c6		 xor	 eax, esi
  05901	c1 f8 07	 sar	 eax, 7
  05904	83 e0 01	 and	 eax, 1
  05907	6b c0 1b	 imul	 eax, 27			; 0000001bH
  0590a	33 d0		 xor	 edx, eax
  0590c	d1 e2		 shl	 edx, 1
  0590e	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  05912	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05915	0f b6 04 06	 movzx	 eax, BYTE PTR [esi+eax]
  05919	d1 e0		 shl	 eax, 1
  0591b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  0591f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05922	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05926	c1 fe 07	 sar	 esi, 7
  05929	83 e6 01	 and	 esi, 1
  0592c	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0592f	33 c6		 xor	 eax, esi
  05931	d1 e0		 shl	 eax, 1
  05933	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05937	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0593a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0593e	d1 e6		 shl	 esi, 1
  05940	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05944	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05947	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0594b	c1 ff 07	 sar	 edi, 7
  0594e	83 e7 01	 and	 edi, 1
  05951	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05954	33 f7		 xor	 esi, edi
  05956	c1 fe 07	 sar	 esi, 7
  05959	83 e6 01	 and	 esi, 1
  0595c	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0595f	33 c6		 xor	 eax, esi
  05961	d1 e0		 shl	 eax, 1
  05963	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05967	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0596a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  0596e	d1 e6		 shl	 esi, 1
  05970	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05974	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05977	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0597b	c1 ff 07	 sar	 edi, 7
  0597e	83 e7 01	 and	 edi, 1
  05981	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05984	33 f7		 xor	 esi, edi
  05986	d1 e6		 shl	 esi, 1
  05988	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0598c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  0598f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05993	d1 e7		 shl	 edi, 1
  05995	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  05999	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv9346[ebp], ecx
  0599f	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  059a2	0f b6 0c 19	 movzx	 ecx, BYTE PTR [ecx+ebx]
  059a6	c1 f9 07	 sar	 ecx, 7
  059a9	83 e1 01	 and	 ecx, 1
  059ac	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  059af	33 f9		 xor	 edi, ecx
  059b1	c1 ff 07	 sar	 edi, 7
  059b4	83 e7 01	 and	 edi, 1
  059b7	6b ff 1b	 imul	 edi, 27			; 0000001bH
  059ba	33 f7		 xor	 esi, edi
  059bc	c1 fe 07	 sar	 esi, 7
  059bf	83 e6 01	 and	 esi, 1
  059c2	6b f6 1b	 imul	 esi, 27			; 0000001bH
  059c5	33 c6		 xor	 eax, esi
  059c7	c1 f8 07	 sar	 eax, 7
  059ca	83 e0 01	 and	 eax, 1
  059cd	6b c0 1b	 imul	 eax, 27			; 0000001bH
  059d0	33 d0		 xor	 edx, eax
  059d2	d1 e2		 shl	 edx, 1
  059d4	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  059d8	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  059db	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  059df	d1 e0		 shl	 eax, 1
  059e1	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  059e5	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  059e8	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  059ec	c1 f9 07	 sar	 ecx, 7
  059ef	83 e1 01	 and	 ecx, 1
  059f2	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  059f5	33 c1		 xor	 eax, ecx
  059f7	d1 e0		 shl	 eax, 1
  059f9	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  059fd	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05a00	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05a04	d1 e1		 shl	 ecx, 1
  05a06	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05a0a	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05a0d	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05a11	c1 fe 07	 sar	 esi, 7
  05a14	83 e6 01	 and	 esi, 1
  05a17	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05a1a	33 ce		 xor	 ecx, esi
  05a1c	c1 f9 07	 sar	 ecx, 7
  05a1f	83 e1 01	 and	 ecx, 1
  05a22	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05a25	33 c1		 xor	 eax, ecx
  05a27	d1 e0		 shl	 eax, 1
  05a29	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05a2d	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05a30	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05a34	d1 e1		 shl	 ecx, 1
  05a36	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05a3a	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05a3d	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05a41	c1 fe 07	 sar	 esi, 7
  05a44	83 e6 01	 and	 esi, 1
  05a47	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05a4a	33 ce		 xor	 ecx, esi
  05a4c	d1 e1		 shl	 ecx, 1
  05a4e	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05a52	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05a55	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05a59	d1 e6		 shl	 esi, 1
  05a5b	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05a5f	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05a62	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05a66	c1 ff 07	 sar	 edi, 7
  05a69	83 e7 01	 and	 edi, 1
  05a6c	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05a6f	33 f7		 xor	 esi, edi
  05a71	c1 fe 07	 sar	 esi, 7
  05a74	83 e6 01	 and	 esi, 1
  05a77	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05a7a	33 ce		 xor	 ecx, esi
  05a7c	c1 f9 07	 sar	 ecx, 7
  05a7f	83 e1 01	 and	 ecx, 1
  05a82	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05a85	33 c1		 xor	 eax, ecx
  05a87	d1 e0		 shl	 eax, 1
  05a89	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05a8d	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05a90	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05a94	d1 e1		 shl	 ecx, 1
  05a96	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05a9a	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05a9d	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05aa1	c1 fe 07	 sar	 esi, 7
  05aa4	83 e6 01	 and	 esi, 1
  05aa7	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05aaa	33 ce		 xor	 ecx, esi
  05aac	d1 e1		 shl	 ecx, 1
  05aae	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05ab2	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05ab5	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05ab9	d1 e6		 shl	 esi, 1
  05abb	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05abf	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05ac2	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05ac6	c1 ff 07	 sar	 edi, 7
  05ac9	83 e7 01	 and	 edi, 1
  05acc	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05acf	33 f7		 xor	 esi, edi
  05ad1	c1 fe 07	 sar	 esi, 7
  05ad4	83 e6 01	 and	 esi, 1
  05ad7	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05ada	33 ce		 xor	 ecx, esi
  05adc	d1 e1		 shl	 ecx, 1
  05ade	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05ae2	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05ae5	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05ae9	d1 e6		 shl	 esi, 1
  05aeb	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05aef	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05af2	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05af6	c1 ff 07	 sar	 edi, 7
  05af9	83 e7 01	 and	 edi, 1
  05afc	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05aff	33 f7		 xor	 esi, edi
  05b01	d1 e6		 shl	 esi, 1
  05b03	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05b07	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05b0a	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05b0e	d1 e7		 shl	 edi, 1
  05b10	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  05b14	89 95 cc fe ff
	ff		 mov	 DWORD PTR tv9348[ebp], edx
  05b1a	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  05b1d	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  05b21	c1 fa 07	 sar	 edx, 7
  05b24	83 e2 01	 and	 edx, 1
  05b27	6b d2 1b	 imul	 edx, 27			; 0000001bH
  05b2a	33 fa		 xor	 edi, edx
  05b2c	c1 ff 07	 sar	 edi, 7
  05b2f	83 e7 01	 and	 edi, 1
  05b32	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05b35	33 f7		 xor	 esi, edi
  05b37	c1 fe 07	 sar	 esi, 7
  05b3a	83 e6 01	 and	 esi, 1
  05b3d	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05b40	33 ce		 xor	 ecx, esi
  05b42	c1 f9 07	 sar	 ecx, 7
  05b45	83 e1 01	 and	 ecx, 1
  05b48	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05b4b	33 c1		 xor	 eax, ecx
  05b4d	c1 f8 07	 sar	 eax, 7
  05b50	83 e0 01	 and	 eax, 1
  05b53	6b c0 1b	 imul	 eax, 27			; 0000001bH
  05b56	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR tv9348[ebp]
  05b5c	33 c8		 xor	 ecx, eax
  05b5e	c1 f9 07	 sar	 ecx, 7
  05b61	83 e1 01	 and	 ecx, 1
  05b64	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05b67	8b 95 d0 fe ff
	ff		 mov	 edx, DWORD PTR tv9346[ebp]
  05b6d	33 d1		 xor	 edx, ecx
  05b6f	d1 e2		 shl	 edx, 1
  05b71	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  05b75	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  05b78	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  05b7c	d1 e0		 shl	 eax, 1
  05b7e	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05b82	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05b85	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05b89	c1 f9 07	 sar	 ecx, 7
  05b8c	83 e1 01	 and	 ecx, 1
  05b8f	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05b92	33 c1		 xor	 eax, ecx
  05b94	d1 e0		 shl	 eax, 1
  05b96	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05b9a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05b9d	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05ba1	d1 e1		 shl	 ecx, 1
  05ba3	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05ba7	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05baa	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05bae	c1 fe 07	 sar	 esi, 7
  05bb1	83 e6 01	 and	 esi, 1
  05bb4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05bb7	33 ce		 xor	 ecx, esi
  05bb9	c1 f9 07	 sar	 ecx, 7
  05bbc	83 e1 01	 and	 ecx, 1
  05bbf	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05bc2	33 c1		 xor	 eax, ecx
  05bc4	d1 e0		 shl	 eax, 1
  05bc6	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05bca	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05bcd	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05bd1	d1 e1		 shl	 ecx, 1
  05bd3	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05bd7	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05bda	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05bde	c1 fe 07	 sar	 esi, 7
  05be1	83 e6 01	 and	 esi, 1
  05be4	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05be7	33 ce		 xor	 ecx, esi
  05be9	d1 e1		 shl	 ecx, 1
  05beb	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05bef	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05bf2	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05bf6	d1 e6		 shl	 esi, 1
  05bf8	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05bfc	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05bff	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05c03	c1 ff 07	 sar	 edi, 7
  05c06	83 e7 01	 and	 edi, 1
  05c09	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05c0c	33 f7		 xor	 esi, edi
  05c0e	c1 fe 07	 sar	 esi, 7
  05c11	83 e6 01	 and	 esi, 1
  05c14	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05c17	33 ce		 xor	 ecx, esi
  05c19	c1 f9 07	 sar	 ecx, 7
  05c1c	83 e1 01	 and	 ecx, 1
  05c1f	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05c22	33 c1		 xor	 eax, ecx
  05c24	d1 e0		 shl	 eax, 1
  05c26	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05c2a	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05c2d	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05c31	d1 e1		 shl	 ecx, 1
  05c33	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05c37	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05c3a	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05c3e	c1 fe 07	 sar	 esi, 7
  05c41	83 e6 01	 and	 esi, 1
  05c44	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05c47	33 ce		 xor	 ecx, esi
  05c49	d1 e1		 shl	 ecx, 1
  05c4b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05c4f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05c52	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05c56	d1 e6		 shl	 esi, 1
  05c58	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05c5c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05c5f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05c63	c1 ff 07	 sar	 edi, 7
  05c66	83 e7 01	 and	 edi, 1
  05c69	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05c6c	33 f7		 xor	 esi, edi
  05c6e	c1 fe 07	 sar	 esi, 7
  05c71	83 e6 01	 and	 esi, 1
  05c74	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05c77	33 ce		 xor	 ecx, esi
  05c79	d1 e1		 shl	 ecx, 1
  05c7b	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05c7f	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05c82	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05c86	d1 e6		 shl	 esi, 1
  05c88	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05c8c	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05c8f	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05c93	c1 ff 07	 sar	 edi, 7
  05c96	83 e7 01	 and	 edi, 1
  05c99	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05c9c	33 f7		 xor	 esi, edi
  05c9e	d1 e6		 shl	 esi, 1
  05ca0	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05ca4	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05ca7	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05cab	d1 e7		 shl	 edi, 1
  05cad	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  05cb1	89 95 c8 fe ff
	ff		 mov	 DWORD PTR tv9350[ebp], edx
  05cb7	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  05cba	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  05cbe	c1 fa 07	 sar	 edx, 7
  05cc1	83 e2 01	 and	 edx, 1
  05cc4	6b d2 1b	 imul	 edx, 27			; 0000001bH
  05cc7	33 fa		 xor	 edi, edx
  05cc9	c1 ff 07	 sar	 edi, 7
  05ccc	83 e7 01	 and	 edi, 1
  05ccf	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05cd2	33 f7		 xor	 esi, edi
  05cd4	c1 fe 07	 sar	 esi, 7
  05cd7	83 e6 01	 and	 esi, 1
  05cda	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05cdd	33 ce		 xor	 ecx, esi
  05cdf	c1 f9 07	 sar	 ecx, 7
  05ce2	83 e1 01	 and	 ecx, 1
  05ce5	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05ce8	33 c1		 xor	 eax, ecx
  05cea	d1 e0		 shl	 eax, 1
  05cec	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05cf0	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  05cf3	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  05cf7	d1 e1		 shl	 ecx, 1
  05cf9	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  05cfd	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05d00	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  05d04	c1 fa 07	 sar	 edx, 7
  05d07	83 e2 01	 and	 edx, 1
  05d0a	6b d2 1b	 imul	 edx, 27			; 0000001bH
  05d0d	33 ca		 xor	 ecx, edx
  05d0f	d1 e1		 shl	 ecx, 1
  05d11	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  05d15	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05d18	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  05d1c	d1 e2		 shl	 edx, 1
  05d1e	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05d22	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05d25	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05d29	c1 fe 07	 sar	 esi, 7
  05d2c	83 e6 01	 and	 esi, 1
  05d2f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05d32	33 d6		 xor	 edx, esi
  05d34	c1 fa 07	 sar	 edx, 7
  05d37	83 e2 01	 and	 edx, 1
  05d3a	6b d2 1b	 imul	 edx, 27			; 0000001bH
  05d3d	33 ca		 xor	 ecx, edx
  05d3f	d1 e1		 shl	 ecx, 1
  05d41	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  05d45	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05d48	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  05d4c	d1 e2		 shl	 edx, 1
  05d4e	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05d52	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05d55	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05d59	c1 fe 07	 sar	 esi, 7
  05d5c	83 e6 01	 and	 esi, 1
  05d5f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05d62	33 d6		 xor	 edx, esi
  05d64	d1 e2		 shl	 edx, 1
  05d66	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05d6a	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05d6d	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05d71	d1 e6		 shl	 esi, 1
  05d73	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05d77	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05d7a	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05d7e	c1 ff 07	 sar	 edi, 7
  05d81	83 e7 01	 and	 edi, 1
  05d84	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05d87	33 f7		 xor	 esi, edi
  05d89	c1 fe 07	 sar	 esi, 7
  05d8c	83 e6 01	 and	 esi, 1
  05d8f	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05d92	33 d6		 xor	 edx, esi
  05d94	c1 fa 07	 sar	 edx, 7
  05d97	83 e2 01	 and	 edx, 1
  05d9a	6b d2 1b	 imul	 edx, 27			; 0000001bH
  05d9d	33 ca		 xor	 ecx, edx
  05d9f	d1 e1		 shl	 ecx, 1
  05da1	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  05da5	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05da8	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  05dac	d1 e2		 shl	 edx, 1
  05dae	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05db2	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05db5	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05db9	c1 fe 07	 sar	 esi, 7
  05dbc	83 e6 01	 and	 esi, 1
  05dbf	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05dc2	33 d6		 xor	 edx, esi
  05dc4	d1 e2		 shl	 edx, 1
  05dc6	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05dca	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05dcd	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05dd1	d1 e6		 shl	 esi, 1
  05dd3	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05dd7	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05dda	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05dde	c1 ff 07	 sar	 edi, 7
  05de1	83 e7 01	 and	 edi, 1
  05de4	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05de7	33 f7		 xor	 esi, edi
  05de9	c1 fe 07	 sar	 esi, 7
  05dec	83 e6 01	 and	 esi, 1
  05def	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05df2	33 d6		 xor	 edx, esi
  05df4	d1 e2		 shl	 edx, 1
  05df6	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05dfa	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05dfd	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05e01	d1 e6		 shl	 esi, 1
  05e03	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05e07	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05e0a	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05e0e	c1 ff 07	 sar	 edi, 7
  05e11	83 e7 01	 and	 edi, 1
  05e14	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05e17	33 f7		 xor	 esi, edi
  05e19	d1 e6		 shl	 esi, 1
  05e1b	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05e1f	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05e22	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05e26	d1 e7		 shl	 edi, 1
  05e28	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  05e2c	89 85 c4 fe ff
	ff		 mov	 DWORD PTR tv9352[ebp], eax
  05e32	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  05e35	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  05e39	c1 f8 07	 sar	 eax, 7
  05e3c	83 e0 01	 and	 eax, 1
  05e3f	6b c0 1b	 imul	 eax, 27			; 0000001bH
  05e42	33 f8		 xor	 edi, eax
  05e44	c1 ff 07	 sar	 edi, 7
  05e47	83 e7 01	 and	 edi, 1
  05e4a	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05e4d	33 f7		 xor	 esi, edi
  05e4f	c1 fe 07	 sar	 esi, 7
  05e52	83 e6 01	 and	 esi, 1
  05e55	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05e58	33 d6		 xor	 edx, esi
  05e5a	c1 fa 07	 sar	 edx, 7
  05e5d	83 e2 01	 and	 edx, 1
  05e60	6b d2 1b	 imul	 edx, 27			; 0000001bH
  05e63	33 ca		 xor	 ecx, edx
  05e65	c1 f9 07	 sar	 ecx, 7
  05e68	83 e1 01	 and	 ecx, 1
  05e6b	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05e6e	8b 95 c4 fe ff
	ff		 mov	 edx, DWORD PTR tv9352[ebp]
  05e74	33 d1		 xor	 edx, ecx
  05e76	d1 e2		 shl	 edx, 1
  05e78	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  05e7c	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  05e7f	0f b6 04 01	 movzx	 eax, BYTE PTR [ecx+eax]
  05e83	d1 e0		 shl	 eax, 1
  05e85	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05e89	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05e8c	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05e90	c1 f9 07	 sar	 ecx, 7
  05e93	83 e1 01	 and	 ecx, 1
  05e96	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05e99	33 c1		 xor	 eax, ecx
  05e9b	d1 e0		 shl	 eax, 1
  05e9d	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05ea1	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05ea4	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05ea8	d1 e1		 shl	 ecx, 1
  05eaa	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05eae	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05eb1	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05eb5	c1 fe 07	 sar	 esi, 7
  05eb8	83 e6 01	 and	 esi, 1
  05ebb	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05ebe	33 ce		 xor	 ecx, esi
  05ec0	c1 f9 07	 sar	 ecx, 7
  05ec3	83 e1 01	 and	 ecx, 1
  05ec6	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05ec9	33 c1		 xor	 eax, ecx
  05ecb	d1 e0		 shl	 eax, 1
  05ecd	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05ed1	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05ed4	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05ed8	d1 e1		 shl	 ecx, 1
  05eda	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05ede	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05ee1	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05ee5	c1 fe 07	 sar	 esi, 7
  05ee8	83 e6 01	 and	 esi, 1
  05eeb	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05eee	33 ce		 xor	 ecx, esi
  05ef0	d1 e1		 shl	 ecx, 1
  05ef2	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05ef6	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05ef9	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05efd	d1 e6		 shl	 esi, 1
  05eff	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05f03	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05f06	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05f0a	c1 ff 07	 sar	 edi, 7
  05f0d	83 e7 01	 and	 edi, 1
  05f10	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05f13	33 f7		 xor	 esi, edi
  05f15	c1 fe 07	 sar	 esi, 7
  05f18	83 e6 01	 and	 esi, 1
  05f1b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05f1e	33 ce		 xor	 ecx, esi
  05f20	c1 f9 07	 sar	 ecx, 7
  05f23	83 e1 01	 and	 ecx, 1
  05f26	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05f29	33 c1		 xor	 eax, ecx
  05f2b	d1 e0		 shl	 eax, 1
  05f2d	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05f31	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  05f34	0f b6 0c 0e	 movzx	 ecx, BYTE PTR [esi+ecx]
  05f38	d1 e1		 shl	 ecx, 1
  05f3a	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05f3e	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05f41	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05f45	c1 fe 07	 sar	 esi, 7
  05f48	83 e6 01	 and	 esi, 1
  05f4b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05f4e	33 ce		 xor	 ecx, esi
  05f50	d1 e1		 shl	 ecx, 1
  05f52	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05f56	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05f59	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05f5d	d1 e6		 shl	 esi, 1
  05f5f	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05f63	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05f66	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05f6a	c1 ff 07	 sar	 edi, 7
  05f6d	83 e7 01	 and	 edi, 1
  05f70	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05f73	33 f7		 xor	 esi, edi
  05f75	c1 fe 07	 sar	 esi, 7
  05f78	83 e6 01	 and	 esi, 1
  05f7b	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05f7e	33 ce		 xor	 ecx, esi
  05f80	d1 e1		 shl	 ecx, 1
  05f82	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  05f86	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  05f89	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  05f8d	d1 e6		 shl	 esi, 1
  05f8f	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05f93	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05f96	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05f9a	c1 ff 07	 sar	 edi, 7
  05f9d	83 e7 01	 and	 edi, 1
  05fa0	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05fa3	33 f7		 xor	 esi, edi
  05fa5	d1 e6		 shl	 esi, 1
  05fa7	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  05fab	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  05fae	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  05fb2	d1 e7		 shl	 edi, 1
  05fb4	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  05fb8	89 95 c0 fe ff
	ff		 mov	 DWORD PTR tv9354[ebp], edx
  05fbe	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  05fc1	0f b6 14 1a	 movzx	 edx, BYTE PTR [edx+ebx]
  05fc5	c1 fa 07	 sar	 edx, 7
  05fc8	83 e2 01	 and	 edx, 1
  05fcb	6b d2 1b	 imul	 edx, 27			; 0000001bH
  05fce	33 fa		 xor	 edi, edx
  05fd0	c1 ff 07	 sar	 edi, 7
  05fd3	83 e7 01	 and	 edi, 1
  05fd6	6b ff 1b	 imul	 edi, 27			; 0000001bH
  05fd9	33 f7		 xor	 esi, edi
  05fdb	c1 fe 07	 sar	 esi, 7
  05fde	83 e6 01	 and	 esi, 1
  05fe1	6b f6 1b	 imul	 esi, 27			; 0000001bH
  05fe4	33 ce		 xor	 ecx, esi
  05fe6	c1 f9 07	 sar	 ecx, 7
  05fe9	83 e1 01	 and	 ecx, 1
  05fec	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  05fef	33 c1		 xor	 eax, ecx
  05ff1	d1 e0		 shl	 eax, 1
  05ff3	0f b6 4d bf	 movzx	 ecx, BYTE PTR _c$[ebp]
  05ff7	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  05ffa	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [edx+ecx]
  05ffe	d1 e1		 shl	 ecx, 1
  06000	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  06004	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  06007	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  0600b	c1 fa 07	 sar	 edx, 7
  0600e	83 e2 01	 and	 edx, 1
  06011	6b d2 1b	 imul	 edx, 27			; 0000001bH
  06014	33 ca		 xor	 ecx, edx
  06016	d1 e1		 shl	 ecx, 1
  06018	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  0601c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0601f	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  06023	d1 e2		 shl	 edx, 1
  06025	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  06029	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0602c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  06030	c1 fe 07	 sar	 esi, 7
  06033	83 e6 01	 and	 esi, 1
  06036	6b f6 1b	 imul	 esi, 27			; 0000001bH
  06039	33 d6		 xor	 edx, esi
  0603b	c1 fa 07	 sar	 edx, 7
  0603e	83 e2 01	 and	 edx, 1
  06041	6b d2 1b	 imul	 edx, 27			; 0000001bH
  06044	33 ca		 xor	 ecx, edx
  06046	d1 e1		 shl	 ecx, 1
  06048	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  0604c	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  0604f	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  06053	d1 e2		 shl	 edx, 1
  06055	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  06059	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  0605c	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  06060	c1 fe 07	 sar	 esi, 7
  06063	83 e6 01	 and	 esi, 1
  06066	6b f6 1b	 imul	 esi, 27			; 0000001bH
  06069	33 d6		 xor	 edx, esi
  0606b	d1 e2		 shl	 edx, 1
  0606d	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  06071	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  06074	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  06078	d1 e6		 shl	 esi, 1
  0607a	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0607e	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  06081	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  06085	c1 ff 07	 sar	 edi, 7
  06088	83 e7 01	 and	 edi, 1
  0608b	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0608e	33 f7		 xor	 esi, edi
  06090	c1 fe 07	 sar	 esi, 7
  06093	83 e6 01	 and	 esi, 1
  06096	6b f6 1b	 imul	 esi, 27			; 0000001bH
  06099	33 d6		 xor	 edx, esi
  0609b	c1 fa 07	 sar	 edx, 7
  0609e	83 e2 01	 and	 edx, 1
  060a1	6b d2 1b	 imul	 edx, 27			; 0000001bH
  060a4	33 ca		 xor	 ecx, edx
  060a6	d1 e1		 shl	 ecx, 1
  060a8	0f b6 55 bf	 movzx	 edx, BYTE PTR _c$[ebp]
  060ac	8b 75 0c	 mov	 esi, DWORD PTR _r$[ebp]
  060af	0f b6 14 16	 movzx	 edx, BYTE PTR [esi+edx]
  060b3	d1 e2		 shl	 edx, 1
  060b5	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  060b9	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  060bc	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  060c0	c1 fe 07	 sar	 esi, 7
  060c3	83 e6 01	 and	 esi, 1
  060c6	6b f6 1b	 imul	 esi, 27			; 0000001bH
  060c9	33 d6		 xor	 edx, esi
  060cb	d1 e2		 shl	 edx, 1
  060cd	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  060d1	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  060d4	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  060d8	d1 e6		 shl	 esi, 1
  060da	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  060de	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  060e1	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  060e5	c1 ff 07	 sar	 edi, 7
  060e8	83 e7 01	 and	 edi, 1
  060eb	6b ff 1b	 imul	 edi, 27			; 0000001bH
  060ee	33 f7		 xor	 esi, edi
  060f0	c1 fe 07	 sar	 esi, 7
  060f3	83 e6 01	 and	 esi, 1
  060f6	6b f6 1b	 imul	 esi, 27			; 0000001bH
  060f9	33 d6		 xor	 edx, esi
  060fb	d1 e2		 shl	 edx, 1
  060fd	0f b6 75 bf	 movzx	 esi, BYTE PTR _c$[ebp]
  06101	8b 7d 0c	 mov	 edi, DWORD PTR _r$[ebp]
  06104	0f b6 34 37	 movzx	 esi, BYTE PTR [edi+esi]
  06108	d1 e6		 shl	 esi, 1
  0610a	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  0610e	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  06111	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  06115	c1 ff 07	 sar	 edi, 7
  06118	83 e7 01	 and	 edi, 1
  0611b	6b ff 1b	 imul	 edi, 27			; 0000001bH
  0611e	33 f7		 xor	 esi, edi
  06120	d1 e6		 shl	 esi, 1
  06122	0f b6 7d bf	 movzx	 edi, BYTE PTR _c$[ebp]
  06126	8b 5d 0c	 mov	 ebx, DWORD PTR _r$[ebp]
  06129	0f b6 3c 3b	 movzx	 edi, BYTE PTR [ebx+edi]
  0612d	d1 e7		 shl	 edi, 1
  0612f	0f b6 5d bf	 movzx	 ebx, BYTE PTR _c$[ebp]
  06133	89 85 bc fe ff
	ff		 mov	 DWORD PTR tv9356[ebp], eax
  06139	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  0613c	0f b6 04 18	 movzx	 eax, BYTE PTR [eax+ebx]
  06140	c1 f8 07	 sar	 eax, 7
  06143	83 e0 01	 and	 eax, 1
  06146	6b c0 1b	 imul	 eax, 27			; 0000001bH
  06149	33 f8		 xor	 edi, eax
  0614b	c1 ff 07	 sar	 edi, 7
  0614e	83 e7 01	 and	 edi, 1
  06151	6b ff 1b	 imul	 edi, 27			; 0000001bH
  06154	33 f7		 xor	 esi, edi
  06156	c1 fe 07	 sar	 esi, 7
  06159	83 e6 01	 and	 esi, 1
  0615c	6b f6 1b	 imul	 esi, 27			; 0000001bH
  0615f	33 d6		 xor	 edx, esi
  06161	c1 fa 07	 sar	 edx, 7
  06164	83 e2 01	 and	 edx, 1
  06167	6b d2 1b	 imul	 edx, 27			; 0000001bH
  0616a	33 ca		 xor	 ecx, edx
  0616c	c1 f9 07	 sar	 ecx, 7
  0616f	83 e1 01	 and	 ecx, 1
  06172	6b c9 1b	 imul	 ecx, 27			; 0000001bH
  06175	8b 95 bc fe ff
	ff		 mov	 edx, DWORD PTR tv9356[ebp]
  0617b	33 d1		 xor	 edx, ecx
  0617d	c1 fa 07	 sar	 edx, 7
  06180	83 e2 01	 and	 edx, 1
  06183	6b d2 1b	 imul	 edx, 27			; 0000001bH
  06186	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR tv9354[ebp]
  0618c	33 c2		 xor	 eax, edx
  0618e	c1 f8 07	 sar	 eax, 7
  06191	83 e0 01	 and	 eax, 1
  06194	6b c0 1b	 imul	 eax, 27			; 0000001bH
  06197	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR tv9350[ebp]
  0619d	33 c8		 xor	 ecx, eax
  0619f	6b c9 00	 imul	 ecx, 0
  061a2	8b 95 d8 fe ff
	ff		 mov	 edx, DWORD PTR tv9342[ebp]
  061a8	33 d1		 xor	 edx, ecx
  061aa	0f b6 45 bf	 movzx	 eax, BYTE PTR _c$[ebp]
  061ae	88 54 05 c8	 mov	 BYTE PTR _te$[ebp+eax], dl

; 602  : 	}

  061b2	e9 6d 9e ff ff	 jmp	 $LN2@InvMixColu@2
$LN1@InvMixColu@2:

; 603  : 	//矩阵c(x) = x^4 + 1 = 3*x^3 + 2*x^2 + x + 1
; 604  : 	//的逆运算为c^-1(x)=11*x^3 + 13*x^2 + 9*x + 14
; 605  : 	//换成矩阵则是
; 606  : 	/*
; 607  : 	 * [14 11 13  9] [a0]   
; 608  : 	 * [ 9 14 11 13] [a1]
; 609  : 	 * [13  9 14 11] [a2]
; 610  : 	 * [11 13  9 14] [a3]
; 611  : 	 * b0 = 14 * a0 + 11 * a1 + 13 * a2 +  9 * a3
; 612  : 	 * b1 =  9 * a0 + 14 * a1 + 11 * a2 + 13 * a3
; 613  : 	 * b2 = 13 * a0 +  9 * a1 + 14 * a2 + 11 * a3 
; 614  : 	 * b3 = 11 * a0 + 13 * a1 +  9 * a2 + 14 * a3
; 615  : 	 * 这里最高只有乘以3，即（x+1)=(2+1)因此b[]只要保存r[]*2的值即可
; 616  : 	 * b[1] ^ a[1] = 3 * a[1]
; 617  : 	 */
; 618  : 	r[0] = te[0] ^ tb[1] ^ td[2] ^ t9[3];

  061b7	0f b6 45 c8	 movzx	 eax, BYTE PTR _te$[ebp]
  061bb	0f b6 4d e1	 movzx	 ecx, BYTE PTR _tb$[ebp+1]
  061bf	33 c1		 xor	 eax, ecx
  061c1	0f b6 55 d6	 movzx	 edx, BYTE PTR _td$[ebp+2]
  061c5	33 c2		 xor	 eax, edx
  061c7	0f b6 4d ef	 movzx	 ecx, BYTE PTR _t9$[ebp+3]
  061cb	33 c1		 xor	 eax, ecx
  061cd	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  061d0	88 02		 mov	 BYTE PTR [edx], al

; 619  : 	r[1] = t9[0] ^ te[1] ^ tb[2] ^ td[3];

  061d2	0f b6 45 ec	 movzx	 eax, BYTE PTR _t9$[ebp]
  061d6	0f b6 4d c9	 movzx	 ecx, BYTE PTR _te$[ebp+1]
  061da	33 c1		 xor	 eax, ecx
  061dc	0f b6 55 e2	 movzx	 edx, BYTE PTR _tb$[ebp+2]
  061e0	33 c2		 xor	 eax, edx
  061e2	0f b6 4d d7	 movzx	 ecx, BYTE PTR _td$[ebp+3]
  061e6	33 c1		 xor	 eax, ecx
  061e8	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  061eb	88 42 01	 mov	 BYTE PTR [edx+1], al

; 620  : 	r[2] = td[0] ^ t9[1] ^ te[2] ^ tb[3];

  061ee	0f b6 45 d4	 movzx	 eax, BYTE PTR _td$[ebp]
  061f2	0f b6 4d ed	 movzx	 ecx, BYTE PTR _t9$[ebp+1]
  061f6	33 c1		 xor	 eax, ecx
  061f8	0f b6 55 ca	 movzx	 edx, BYTE PTR _te$[ebp+2]
  061fc	33 c2		 xor	 eax, edx
  061fe	0f b6 4d e3	 movzx	 ecx, BYTE PTR _tb$[ebp+3]
  06202	33 c1		 xor	 eax, ecx
  06204	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  06207	88 42 02	 mov	 BYTE PTR [edx+2], al

; 621  : 	r[3] = tb[0] ^ td[1] ^ t9[2] ^ te[3];

  0620a	0f b6 45 e0	 movzx	 eax, BYTE PTR _tb$[ebp]
  0620e	0f b6 4d d5	 movzx	 ecx, BYTE PTR _td$[ebp+1]
  06212	33 c1		 xor	 eax, ecx
  06214	0f b6 55 ee	 movzx	 edx, BYTE PTR _t9$[ebp+2]
  06218	33 c2		 xor	 eax, edx
  0621a	0f b6 4d cb	 movzx	 ecx, BYTE PTR _te$[ebp+3]
  0621e	33 c1		 xor	 eax, ecx
  06220	8b 55 0c	 mov	 edx, DWORD PTR _r$[ebp]
  06223	88 42 03	 mov	 BYTE PTR [edx+3], al

; 622  : }

  06226	52		 push	 edx
  06227	8b cd		 mov	 ecx, ebp
  06229	50		 push	 eax
  0622a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@InvMixColu@2
  06230	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  06235	58		 pop	 eax
  06236	5a		 pop	 edx
  06237	5f		 pop	 edi
  06238	5e		 pop	 esi
  06239	5b		 pop	 ebx
  0623a	8b e5		 mov	 esp, ebp
  0623c	5d		 pop	 ebp
  0623d	c3		 ret	 0
  0623e	8b ff		 npad	 2
$LN12@InvMixColu@2:
  06240	05 00 00 00	 DD	 5
  06244	00 00 00 00	 DD	 $LN11@InvMixColu@2
$LN11@InvMixColu@2:
  06248	f8 ff ff ff	 DD	 -8			; fffffff8H
  0624c	04 00 00 00	 DD	 4
  06250	00 00 00 00	 DD	 $LN6@InvMixColu@2
  06254	ec ff ff ff	 DD	 -20			; ffffffecH
  06258	04 00 00 00	 DD	 4
  0625c	00 00 00 00	 DD	 $LN7@InvMixColu@2
  06260	e0 ff ff ff	 DD	 -32			; ffffffe0H
  06264	04 00 00 00	 DD	 4
  06268	00 00 00 00	 DD	 $LN8@InvMixColu@2
  0626c	d4 ff ff ff	 DD	 -44			; ffffffd4H
  06270	04 00 00 00	 DD	 4
  06274	00 00 00 00	 DD	 $LN9@InvMixColu@2
  06278	c8 ff ff ff	 DD	 -56			; ffffffc8H
  0627c	04 00 00 00	 DD	 4
  06280	00 00 00 00	 DD	 $LN10@InvMixColu@2
$LN10@InvMixColu@2:
  06284	74		 DB	 116			; 00000074H
  06285	65		 DB	 101			; 00000065H
  06286	00		 DB	 0
$LN9@InvMixColu@2:
  06287	74		 DB	 116			; 00000074H
  06288	64		 DB	 100			; 00000064H
  06289	00		 DB	 0
$LN8@InvMixColu@2:
  0628a	74		 DB	 116			; 00000074H
  0628b	62		 DB	 98			; 00000062H
  0628c	00		 DB	 0
$LN7@InvMixColu@2:
  0628d	74		 DB	 116			; 00000074H
  0628e	39		 DB	 57			; 00000039H
  0628f	00		 DB	 0
$LN6@InvMixColu@2:
  06290	61		 DB	 97			; 00000061H
  06291	00		 DB	 0
_InvMixColumnStr ENDP
_TEXT	ENDS
END
